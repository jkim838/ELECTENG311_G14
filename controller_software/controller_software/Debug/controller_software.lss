
controller_software.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ac  00800100  000014e0  00001574  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000078  008001ac  008001ac  00001620  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001620  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000167c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  000016bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010ef  00000000  00000000  000017bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a8c  00000000  00000000  000028ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008e4  00000000  00000000  00003337  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000026c  00000000  00000000  00003c1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000074a  00000000  00000000  00003e88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006a3  00000000  00000000  000045d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00004c75  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 91 02 	jmp	0x522	; 0x522 <__vector_9>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__vector_16>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__vector_21>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e0 ee       	ldi	r30, 0xE0	; 224
     17e:	f4 e1       	ldi	r31, 0x14	; 20
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	ac 3a       	cpi	r26, 0xAC	; 172
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	22 e0       	ldi	r18, 0x02	; 2
     18e:	ac ea       	ldi	r26, 0xAC	; 172
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a4 32       	cpi	r26, 0x24	; 36
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 a7 01 	call	0x34e	; 0x34e <main>
     1a0:	0c 94 6e 0a 	jmp	0x14dc	; 0x14dc <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <adc_init>:
/*** Function Definitions ***/
void adc_init(){
	
	/** ADCMUX: ADC Multiplexer Selection Register **/
	/* Voltage Reference Selection */
	ADMUX &= ~(1 << REFS1);			// Use Vcc as reference voltage
     1a8:	ec e7       	ldi	r30, 0x7C	; 124
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	80 81       	ld	r24, Z
     1ae:	8f 77       	andi	r24, 0x7F	; 127
     1b0:	80 83       	st	Z, r24
	ADMUX |=  (1 << REFS0);
     1b2:	80 81       	ld	r24, Z
     1b4:	80 64       	ori	r24, 0x40	; 64
     1b6:	80 83       	st	Z, r24
	/* ADC Left Adjust Result */
	ADMUX &= ~(1 << ADLAR);			// Right adjust ADC reading to ADCH
     1b8:	80 81       	ld	r24, Z
     1ba:	8f 7d       	andi	r24, 0xDF	; 223
     1bc:	80 83       	st	Z, r24
	/* Analog Channel Selection Bits */
	// Change input pin as specified by the data sheet...
	ADMUX &= ~(1 << MUX3);							// Channel 0 (Coil Voltage Sensor): Input pin is PC0
     1be:	80 81       	ld	r24, Z
     1c0:	87 7f       	andi	r24, 0xF7	; 247
     1c2:	80 83       	st	Z, r24
	ADMUX &= ~(1 << MUX2);
     1c4:	80 81       	ld	r24, Z
     1c6:	8b 7f       	andi	r24, 0xFB	; 251
     1c8:	80 83       	st	Z, r24
	ADMUX &= ~(1 << MUX1);
     1ca:	80 81       	ld	r24, Z
     1cc:	8d 7f       	andi	r24, 0xFD	; 253
     1ce:	80 83       	st	Z, r24
	ADMUX &= ~(1 << MUX0);
     1d0:	80 81       	ld	r24, Z
     1d2:	8e 7f       	andi	r24, 0xFE	; 254
     1d4:	80 83       	st	Z, r24
	ADC_next_channel = ADC_COIL_VOLTAGE_CHANNEL;	// Note: Although it is named ADC_next_channel, in this function specifically this variable signifies initial state of the ADC Channel.
     1d6:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <ADC_next_channel>
	
	/** ADCSRA: ADC Control and Status Register A **/
	/* ADC Enable */
	ADCSRA |= (1 << ADEN);			// ADC Power 'On'
     1da:	ea e7       	ldi	r30, 0x7A	; 122
     1dc:	f0 e0       	ldi	r31, 0x00	; 0
     1de:	80 81       	ld	r24, Z
     1e0:	80 68       	ori	r24, 0x80	; 128
     1e2:	80 83       	st	Z, r24
	#ifdef ADC_ENABLE_AUTO_TRIGGER
		ADCSRA |= (1 << ADATE);			// Auto Trigger 'On'
	#endif
	/* ADC Interrupt Setting */
	//	ADCSRA &=~(1 << ADIF);
	ADCSRA |= (1 << ADIE);			// Interrupt 'On'
     1e4:	80 81       	ld	r24, Z
     1e6:	88 60       	ori	r24, 0x08	; 8
     1e8:	80 83       	st	Z, r24
	/* Pre-scaler Setup */
	ADCSRA |= (1 << ADPS2);			// Pre-scaler Division factor to 64
     1ea:	80 81       	ld	r24, Z
     1ec:	84 60       	ori	r24, 0x04	; 4
     1ee:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS1);			// ADC Frequency = 125 KHz @Xplained Mini (F_CPU 16MHz)
     1f0:	80 81       	ld	r24, Z
     1f2:	82 60       	ori	r24, 0x02	; 2
     1f4:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS0);			// ADC Frequency = 62.5 KHz @PCB (F_CPU 8MHz)
     1f6:	80 81       	ld	r24, Z
     1f8:	81 60       	ori	r24, 0x01	; 1
     1fa:	80 83       	st	Z, r24
		ADCSRB |= (1 << ADTS1);
		ADCSRB |= (1 << ADTS2);
	#endif

	/** ADC Begin **/
	ADCSRA |= (1 << ADSC);			// Start new conversion
     1fc:	80 81       	ld	r24, Z
     1fe:	80 64       	ori	r24, 0x40	; 64
     200:	80 83       	st	Z, r24
     202:	08 95       	ret

00000204 <debug_adc_digitize>:
}

double debug_adc_digitize(uint16_t debug_raw_output){
	
	double digitized_ADC_output = (double) debug_raw_output * ADC_REFERENCE_VOLTAGE / ADC_RESOLUTION;
	return digitized_ADC_output;
     204:	bc 01       	movw	r22, r24
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	0e 94 1a 04 	call	0x834	; 0x834 <__floatunsisf>
     20e:	20 e0       	ldi	r18, 0x00	; 0
     210:	30 e0       	ldi	r19, 0x00	; 0
     212:	40 ea       	ldi	r20, 0xA0	; 160
     214:	50 e4       	ldi	r21, 0x40	; 64
     216:	0e 94 a8 04 	call	0x950	; 0x950 <__mulsf3>
     21a:	20 e0       	ldi	r18, 0x00	; 0
     21c:	30 e0       	ldi	r19, 0x00	; 0
     21e:	40 e8       	ldi	r20, 0x80	; 128
     220:	5a e3       	ldi	r21, 0x3A	; 58
     222:	0e 94 a8 04 	call	0x950	; 0x950 <__mulsf3>
	
     226:	08 95       	ret

00000228 <calculate_power>:
		return flow_rate;
	#endif

}

double calculate_power(double coil_voltage, double coil_current, double PWM_live_time, double cycle_period){
     228:	4f 92       	push	r4
     22a:	5f 92       	push	r5
     22c:	6f 92       	push	r6
     22e:	7f 92       	push	r7
     230:	af 92       	push	r10
     232:	bf 92       	push	r11
     234:	cf 92       	push	r12
     236:	df 92       	push	r13
     238:	ef 92       	push	r14
     23a:	ff 92       	push	r15
     23c:	0f 93       	push	r16
     23e:	1f 93       	push	r17
     240:	cf 93       	push	r28
     242:	df 93       	push	r29
     244:	cd b7       	in	r28, 0x3d	; 61
     246:	de b7       	in	r29, 0x3e	; 62
     248:	28 97       	sbiw	r28, 0x08	; 8
     24a:	0f b6       	in	r0, 0x3f	; 63
     24c:	f8 94       	cli
     24e:	de bf       	out	0x3e, r29	; 62
     250:	0f be       	out	0x3f, r0	; 63
     252:	cd bf       	out	0x3d, r28	; 61
     254:	29 01       	movw	r4, r18
     256:	3a 01       	movw	r6, r20
     258:	e9 82       	std	Y+1, r14	; 0x01
     25a:	fa 82       	std	Y+2, r15	; 0x02
     25c:	0b 83       	std	Y+3, r16	; 0x03
     25e:	1c 83       	std	Y+4, r17	; 0x04
	analog_coil_voltage = coil_voltage * (1 + VOLTAGE_SHUNT_A/VOLTAGE_SHUNT_B);	 
	// coil shunt current into a real value...
	analog_coil_current = coil_current / CURRENT_RESISTOR_C;
	total_power = analog_coil_voltage * analog_coil_current;
	average_power = total_power * (PWM_live_time / cycle_period);
	return average_power;
     260:	26 e6       	ldi	r18, 0x66	; 102
     262:	36 e6       	ldi	r19, 0x66	; 102
     264:	46 e2       	ldi	r20, 0x26	; 38
     266:	50 e4       	ldi	r21, 0x40	; 64
     268:	0e 94 a8 04 	call	0x950	; 0x950 <__mulsf3>
     26c:	6d 83       	std	Y+5, r22	; 0x05
     26e:	7e 83       	std	Y+6, r23	; 0x06
     270:	8f 83       	std	Y+7, r24	; 0x07
     272:	98 87       	std	Y+8, r25	; 0x08
     274:	2a e9       	ldi	r18, 0x9A	; 154
     276:	39 e9       	ldi	r19, 0x99	; 153
     278:	49 e1       	ldi	r20, 0x19	; 25
     27a:	5e e3       	ldi	r21, 0x3E	; 62
     27c:	c3 01       	movw	r24, r6
     27e:	b2 01       	movw	r22, r4
     280:	0e 94 a8 03 	call	0x750	; 0x750 <__divsf3>
     284:	9b 01       	movw	r18, r22
     286:	ac 01       	movw	r20, r24
     288:	6d 81       	ldd	r22, Y+5	; 0x05
     28a:	7e 81       	ldd	r23, Y+6	; 0x06
     28c:	8f 81       	ldd	r24, Y+7	; 0x07
     28e:	98 85       	ldd	r25, Y+8	; 0x08
     290:	0e 94 a8 04 	call	0x950	; 0x950 <__mulsf3>
     294:	2b 01       	movw	r4, r22
     296:	3c 01       	movw	r6, r24
     298:	a6 01       	movw	r20, r12
     29a:	95 01       	movw	r18, r10
     29c:	c8 01       	movw	r24, r16
     29e:	b7 01       	movw	r22, r14
     2a0:	0e 94 a8 03 	call	0x750	; 0x750 <__divsf3>
     2a4:	9b 01       	movw	r18, r22
     2a6:	ac 01       	movw	r20, r24
     2a8:	c3 01       	movw	r24, r6
     2aa:	b2 01       	movw	r22, r4
     2ac:	0e 94 a8 04 	call	0x950	; 0x950 <__mulsf3>
	
}
     2b0:	28 96       	adiw	r28, 0x08	; 8
     2b2:	0f b6       	in	r0, 0x3f	; 63
     2b4:	f8 94       	cli
     2b6:	de bf       	out	0x3e, r29	; 62
     2b8:	0f be       	out	0x3f, r0	; 63
     2ba:	cd bf       	out	0x3d, r28	; 61
     2bc:	df 91       	pop	r29
     2be:	cf 91       	pop	r28
     2c0:	1f 91       	pop	r17
     2c2:	0f 91       	pop	r16
     2c4:	ff 90       	pop	r15
     2c6:	ef 90       	pop	r14
     2c8:	df 90       	pop	r13
     2ca:	cf 90       	pop	r12
     2cc:	bf 90       	pop	r11
     2ce:	af 90       	pop	r10
     2d0:	7f 90       	pop	r7
     2d2:	6f 90       	pop	r6
     2d4:	5f 90       	pop	r5
     2d6:	4f 90       	pop	r4
     2d8:	08 95       	ret

000002da <debug_usart_init>:
	input = input * 100;
	output[2] = (uint16_t)(input / 100);
	output[1] = (uint16_t)(input / 10) % 10;
	output[0] = (uint16_t)input % 10;
	
}
     2da:	a1 ec       	ldi	r26, 0xC1	; 193
     2dc:	b0 e0       	ldi	r27, 0x00	; 0
     2de:	2c 91       	ld	r18, X
     2e0:	28 60       	ori	r18, 0x08	; 8
     2e2:	2c 93       	st	X, r18
     2e4:	2c 91       	ld	r18, X
     2e6:	20 68       	ori	r18, 0x80	; 128
     2e8:	2c 93       	st	X, r18
     2ea:	e2 ec       	ldi	r30, 0xC2	; 194
     2ec:	f0 e0       	ldi	r31, 0x00	; 0
     2ee:	20 81       	ld	r18, Z
     2f0:	2f 77       	andi	r18, 0x7F	; 127
     2f2:	20 83       	st	Z, r18
     2f4:	20 81       	ld	r18, Z
     2f6:	2f 7b       	andi	r18, 0xBF	; 191
     2f8:	20 83       	st	Z, r18
     2fa:	20 81       	ld	r18, Z
     2fc:	2f 7d       	andi	r18, 0xDF	; 223
     2fe:	20 83       	st	Z, r18
     300:	20 81       	ld	r18, Z
     302:	2f 7e       	andi	r18, 0xEF	; 239
     304:	20 83       	st	Z, r18
     306:	20 81       	ld	r18, Z
     308:	27 7f       	andi	r18, 0xF7	; 247
     30a:	20 83       	st	Z, r18
     30c:	2c 91       	ld	r18, X
     30e:	2b 7f       	andi	r18, 0xFB	; 251
     310:	2c 93       	st	X, r18
     312:	20 81       	ld	r18, Z
     314:	26 60       	ori	r18, 0x06	; 6
     316:	20 83       	st	Z, r18
     318:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     31c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     320:	08 95       	ret

00000322 <debug_usart_transmit>:
     322:	e0 ec       	ldi	r30, 0xC0	; 192
     324:	f0 e0       	ldi	r31, 0x00	; 0
     326:	90 81       	ld	r25, Z
     328:	95 ff       	sbrs	r25, 5
     32a:	fd cf       	rjmp	.-6      	; 0x326 <debug_usart_transmit+0x4>
     32c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     330:	08 95       	ret

00000332 <usart_putchar_printf>:

int usart_putchar_printf(char var, FILE *stream){
     332:	cf 93       	push	r28
     334:	c8 2f       	mov	r28, r24

	if(var == '\n'){
     336:	8a 30       	cpi	r24, 0x0A	; 10
     338:	19 f4       	brne	.+6      	; 0x340 <usart_putchar_printf+0xe>
		debug_usart_transmit('\r');
     33a:	8d e0       	ldi	r24, 0x0D	; 13
     33c:	0e 94 91 01 	call	0x322	; 0x322 <debug_usart_transmit>
	}
	debug_usart_transmit(var);
     340:	8c 2f       	mov	r24, r28
     342:	0e 94 91 01 	call	0x322	; 0x322 <debug_usart_transmit>
	return 0;	

     346:	80 e0       	ldi	r24, 0x00	; 0
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	cf 91       	pop	r28
     34c:	08 95       	ret

0000034e <main>:
#ifdef ADC_DEBUG_MODE
	uint16_t raw_ADC_output_PC0;
	uint16_t raw_ADC_output_PC5;
#endif

int main(void){
     34e:	cf 93       	push	r28
     350:	df 93       	push	r29
     352:	cd b7       	in	r28, 0x3d	; 61
     354:	de b7       	in	r29, 0x3e	; 62
     356:	28 97       	sbiw	r28, 0x08	; 8
     358:	0f b6       	in	r0, 0x3f	; 63
     35a:	f8 94       	cli
     35c:	de bf       	out	0x3e, r29	; 62
     35e:	0f be       	out	0x3f, r0	; 63
     360:	cd bf       	out	0x3d, r28	; 61
	
	/*** Run Once Code ***/
	/* PIN I/O Setup */
	// Set all pins to output. Change mode to input when necessary
	DDRB = 0xff;
     362:	8f ef       	ldi	r24, 0xFF	; 255
     364:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xff;
     366:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xff;
     368:	8a b9       	out	0x0a, r24	; 10
	
	// Set ADC Input Gates...
	DDRC &= ~(1 << PC0); // ADC Channel 0... Voltage Shunt Channel
     36a:	38 98       	cbi	0x07, 0	; 7
	DDRC &= ~(1 << PC5); // ADC Channel 5... Current Shunt Channel
     36c:	3d 98       	cbi	0x07, 5	; 7
	#ifdef TRANSMIT_DEBUG_MODE
		DDRB &= ~(1 << PB7); // Debug Button
     36e:	27 98       	cbi	0x04, 7	; 4
	#endif 
		
	/* ATMEGA328P Module Initialization */
	// Remove double slashes to activate...
	timer0_init();	// Set up Timer 0 and Pulse Width Modulation.
     370:	0e 94 6e 03 	call	0x6dc	; 0x6dc <timer0_init>
	timer2_init();	// Set up Timer 2 and Pulse Width Modulation
     374:	0e 94 8e 03 	call	0x71c	; 0x71c <timer2_init>
	adc_init();		// Set up ADC
     378:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <adc_init>
	#ifdef TRANSMIT_DEBUG_MODE
		stdout = &mystdout;
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	91 e0       	ldi	r25, 0x01	; 1
     380:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <__iob+0x3>
     384:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <__iob+0x2>
		// enable USART for transmitting digital conversion result to PuTTy...
		debug_usart_init(debug_UBRR);
     388:	87 e6       	ldi	r24, 0x67	; 103
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	0e 94 6d 01 	call	0x2da	; 0x2da <debug_usart_init>
	#else
		usart_init(UBRR_VALUE);
	#endif
	
	sei();
     390:	78 94       	sei
		#endif
		
		#ifdef TRANSMIT_DEBUG_MODE
		//debug mode... ignore normal operational cycle
			#ifdef ADC_DEBUG_MODE
				cli();
     392:	f8 94       	cli
				// try analog to digital conversion on the ADC, and display its output to the PuTTy.
				double digitized_adc_output_PC0 = debug_adc_digitize(raw_ADC_output_PC0);
     394:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <raw_ADC_output_PC0>
     398:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <raw_ADC_output_PC0+0x1>
     39c:	0e 94 02 01 	call	0x204	; 0x204 <debug_adc_digitize>
     3a0:	6f 83       	std	Y+7, r22	; 0x07
     3a2:	78 87       	std	Y+8, r23	; 0x08
     3a4:	98 2e       	mov	r9, r24
     3a6:	89 2e       	mov	r8, r25
				double digitized_adc_output_PC5 = debug_adc_digitize(raw_ADC_output_PC5);
     3a8:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <raw_ADC_output_PC5>
     3ac:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <raw_ADC_output_PC5+0x1>
     3b0:	0e 94 02 01 	call	0x204	; 0x204 <debug_adc_digitize>
     3b4:	46 2e       	mov	r4, r22
     3b6:	57 2e       	mov	r5, r23
     3b8:	78 2e       	mov	r7, r24
     3ba:	69 2e       	mov	r6, r25
				double maximum_voltage = debug_adc_digitize(raw_maximum_voltage);
     3bc:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <raw_maximum_voltage>
     3c0:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <raw_maximum_voltage+0x1>
     3c4:	0e 94 02 01 	call	0x204	; 0x204 <debug_adc_digitize>
     3c8:	69 83       	std	Y+1, r22	; 0x01
     3ca:	7a 83       	std	Y+2, r23	; 0x02
     3cc:	8b 83       	std	Y+3, r24	; 0x03
     3ce:	9c 83       	std	Y+4, r25	; 0x04
				double minimum_voltage = debug_adc_digitize(raw_minimum_voltage);
     3d0:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <raw_minimum_voltage>
     3d4:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <raw_minimum_voltage+0x1>
     3d8:	0e 94 02 01 	call	0x204	; 0x204 <debug_adc_digitize>
     3dc:	6d 83       	std	Y+5, r22	; 0x05
     3de:	7e 83       	std	Y+6, r23	; 0x06
     3e0:	28 2e       	mov	r2, r24
     3e2:	39 2e       	mov	r3, r25
				double expected_power = calculate_power(digitized_adc_output_PC0, debug_COIL_CURRENT, debug_PWM_LIVE_TIME, debug_PWM_PERIOD);
     3e4:	0f 2e       	mov	r0, r31
     3e6:	fa e0       	ldi	r31, 0x0A	; 10
     3e8:	af 2e       	mov	r10, r31
     3ea:	f7 ed       	ldi	r31, 0xD7	; 215
     3ec:	bf 2e       	mov	r11, r31
     3ee:	f3 ea       	ldi	r31, 0xA3	; 163
     3f0:	cf 2e       	mov	r12, r31
     3f2:	fc e3       	ldi	r31, 0x3C	; 60
     3f4:	df 2e       	mov	r13, r31
     3f6:	f0 2d       	mov	r31, r0
     3f8:	16 ea       	ldi	r17, 0xA6	; 166
     3fa:	e1 2e       	mov	r14, r17
     3fc:	1b e9       	ldi	r17, 0x9B	; 155
     3fe:	f1 2e       	mov	r15, r17
     400:	04 ec       	ldi	r16, 0xC4	; 196
     402:	1b e3       	ldi	r17, 0x3B	; 59
     404:	20 e0       	ldi	r18, 0x00	; 0
     406:	30 e0       	ldi	r19, 0x00	; 0
     408:	40 e0       	ldi	r20, 0x00	; 0
     40a:	5f e3       	ldi	r21, 0x3F	; 63
     40c:	bf 81       	ldd	r27, Y+7	; 0x07
     40e:	a8 85       	ldd	r26, Y+8	; 0x08
     410:	6b 2f       	mov	r22, r27
     412:	7a 2f       	mov	r23, r26
     414:	89 2d       	mov	r24, r9
     416:	98 2d       	mov	r25, r8
     418:	0e 94 14 01 	call	0x228	; 0x228 <calculate_power>
     41c:	16 2f       	mov	r17, r22
     41e:	07 2f       	mov	r16, r23
     420:	f8 2e       	mov	r15, r24
     422:	e9 2e       	mov	r14, r25
				printf("Current Channel: %d\n", debug_ADC_channel);
     424:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <debug_ADC_channel>
     428:	1f 92       	push	r1
     42a:	8f 93       	push	r24
     42c:	2e e0       	ldi	r18, 0x0E	; 14
     42e:	31 e0       	ldi	r19, 0x01	; 1
     430:	3f 93       	push	r19
     432:	2f 93       	push	r18
     434:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
				printf("Next Channel: %d\n", ADC_next_channel);
     438:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <ADC_next_channel>
     43c:	1f 92       	push	r1
     43e:	8f 93       	push	r24
     440:	23 e2       	ldi	r18, 0x23	; 35
     442:	31 e0       	ldi	r19, 0x01	; 1
     444:	3f 93       	push	r19
     446:	2f 93       	push	r18
     448:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
				printf("ADC0 Output (PC0): %f\nADC5 Output (PC5): %f\n", digitized_adc_output_PC0, digitized_adc_output_PC5);
     44c:	6f 92       	push	r6
     44e:	7f 92       	push	r7
     450:	5f 92       	push	r5
     452:	4f 92       	push	r4
     454:	8f 92       	push	r8
     456:	9f 92       	push	r9
     458:	98 85       	ldd	r25, Y+8	; 0x08
     45a:	9f 93       	push	r25
     45c:	2f 81       	ldd	r18, Y+7	; 0x07
     45e:	2f 93       	push	r18
     460:	85 e3       	ldi	r24, 0x35	; 53
     462:	91 e0       	ldi	r25, 0x01	; 1
     464:	9f 93       	push	r25
     466:	8f 93       	push	r24
     468:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
				printf("Maximum Voltage: %f\nMinimum Voltage: %f\n", maximum_voltage,minimum_voltage);
     46c:	3f 92       	push	r3
     46e:	2f 92       	push	r2
     470:	3e 81       	ldd	r19, Y+6	; 0x06
     472:	3f 93       	push	r19
     474:	8d 81       	ldd	r24, Y+5	; 0x05
     476:	8f 93       	push	r24
     478:	9c 81       	ldd	r25, Y+4	; 0x04
     47a:	9f 93       	push	r25
     47c:	2b 81       	ldd	r18, Y+3	; 0x03
     47e:	2f 93       	push	r18
     480:	3a 81       	ldd	r19, Y+2	; 0x02
     482:	3f 93       	push	r19
     484:	89 81       	ldd	r24, Y+1	; 0x01
     486:	8f 93       	push	r24
     488:	22 e6       	ldi	r18, 0x62	; 98
     48a:	31 e0       	ldi	r19, 0x01	; 1
     48c:	3f 93       	push	r19
     48e:	2f 93       	push	r18
     490:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
				#ifdef CALCULATION_DEBUG_MODE
					printf("Estimated Power Consumption: %f\n", expected_power);
     494:	ef 92       	push	r14
     496:	ff 92       	push	r15
     498:	0f 93       	push	r16
     49a:	1f 93       	push	r17
     49c:	2b e8       	ldi	r18, 0x8B	; 139
     49e:	31 e0       	ldi	r19, 0x01	; 1
     4a0:	3f 93       	push	r19
     4a2:	2f 93       	push	r18
     4a4:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
				#endif
				if(samples_counter == 24){
     4a8:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <samples_counter>
     4ac:	0f b6       	in	r0, 0x3f	; 63
     4ae:	f8 94       	cli
     4b0:	de bf       	out	0x3e, r29	; 62
     4b2:	0f be       	out	0x3f, r0	; 63
     4b4:	cd bf       	out	0x3d, r28	; 61
     4b6:	88 31       	cpi	r24, 0x18	; 24
     4b8:	31 f4       	brne	.+12     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
					samples_counter = 0;
     4ba:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <samples_counter>
					raw_coil_voltage_index = 0;
     4be:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <raw_coil_voltage_index>
					raw_coil_current_index = 0;
     4c2:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <__data_end>
				}
				printf("\n");
     4c6:	8a e0       	ldi	r24, 0x0A	; 10
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	0e 94 09 0a 	call	0x1412	; 0x1412 <putchar>
				sei();
     4ce:	78 94       	sei
			}
			
		#endif
		
		#ifdef XPLAINED_MINI_LED_STROBE
			PORTB ^= (1 << PB5);
     4d0:	85 b1       	in	r24, 0x05	; 5
     4d2:	30 e2       	ldi	r19, 0x20	; 32
     4d4:	83 27       	eor	r24, r19
     4d6:	85 b9       	out	0x05, r24	; 5
		#endif
		

    }
     4d8:	5c cf       	rjmp	.-328    	; 0x392 <main+0x44>

000004da <__vector_16>:
		}
		usart_RX_index++;
	}
#endif

ISR(TIMER0_OVF_vect){
     4da:	1f 92       	push	r1
     4dc:	0f 92       	push	r0
     4de:	0f b6       	in	r0, 0x3f	; 63
     4e0:	0f 92       	push	r0
     4e2:	11 24       	eor	r1, r1
     4e4:	8f 93       	push	r24
     4e6:	ef 93       	push	r30
     4e8:	ff 93       	push	r31
	
	#ifdef TIMER_DEBUG_MODE
	// Debugger Mode...
		// Disable Timer0/PWM...
		TCCR0B &= ~(1 << CS02);			// No Clock Source
     4ea:	85 b5       	in	r24, 0x25	; 37
     4ec:	8b 7f       	andi	r24, 0xFB	; 251
     4ee:	85 bd       	out	0x25, r24	; 37
		TCCR0B &= ~(1 << CS01);			
     4f0:	85 b5       	in	r24, 0x25	; 37
     4f2:	8d 7f       	andi	r24, 0xFD	; 253
     4f4:	85 bd       	out	0x25, r24	; 37
		TCCR0B &= ~(1 << CS00);
     4f6:	85 b5       	in	r24, 0x25	; 37
     4f8:	8e 7f       	andi	r24, 0xFE	; 254
     4fa:	85 bd       	out	0x25, r24	; 37
		// Update OC0A...
					
		// Enable Timer2/PWM...
		TCCR2B |=  (1 << CS22);			// Pre-scaler 256
     4fc:	e1 eb       	ldi	r30, 0xB1	; 177
     4fe:	f0 e0       	ldi	r31, 0x00	; 0
     500:	80 81       	ld	r24, Z
     502:	84 60       	ori	r24, 0x04	; 4
     504:	80 83       	st	Z, r24
		TCCR2B |=  (1 << CS21);			// Timer Frequency = 62.5 KHz @Xplained Mini (F_CPU = 16MHz)
     506:	80 81       	ld	r24, Z
     508:	82 60       	ori	r24, 0x02	; 2
     50a:	80 83       	st	Z, r24
		TCCR2B &= ~(1 << CS20);			// Timer Frequency = 31.25 KHz @PCB (F_CPU = 8MHz)
     50c:	80 81       	ld	r24, Z
     50e:	8e 7f       	andi	r24, 0xFE	; 254
     510:	80 83       	st	Z, r24
	#else
	// Normal Operation Mode...
	OCR0A = new_PWM_frequency;			// this parameter needs a function to determine its values.
	#endif
	
}
     512:	ff 91       	pop	r31
     514:	ef 91       	pop	r30
     516:	8f 91       	pop	r24
     518:	0f 90       	pop	r0
     51a:	0f be       	out	0x3f, r0	; 63
     51c:	0f 90       	pop	r0
     51e:	1f 90       	pop	r1
     520:	18 95       	reti

00000522 <__vector_9>:

ISR(TIMER2_OVF_vect){
     522:	1f 92       	push	r1
     524:	0f 92       	push	r0
     526:	0f b6       	in	r0, 0x3f	; 63
     528:	0f 92       	push	r0
     52a:	11 24       	eor	r1, r1
     52c:	8f 93       	push	r24
     52e:	ef 93       	push	r30
     530:	ff 93       	push	r31
	
	#ifdef TIMER_DEBUG_MODE
	// Debugger Mode...
		// Disable Timer2/PWM
		TCCR2B &= ~(1 << CS22);			// No Clock Source
     532:	e1 eb       	ldi	r30, 0xB1	; 177
     534:	f0 e0       	ldi	r31, 0x00	; 0
     536:	80 81       	ld	r24, Z
     538:	8b 7f       	andi	r24, 0xFB	; 251
     53a:	80 83       	st	Z, r24
		TCCR2B &= ~(1 << CS21);			
     53c:	80 81       	ld	r24, Z
     53e:	8d 7f       	andi	r24, 0xFD	; 253
     540:	80 83       	st	Z, r24
		TCCR2B &= ~(1 << CS20);
     542:	80 81       	ld	r24, Z
     544:	8e 7f       	andi	r24, 0xFE	; 254
     546:	80 83       	st	Z, r24
		//Update OC2A...
		
		// Enable Timer0/PWM
		TCCR0B |= (1 << CS02);			// Pre-scaler 256
     548:	85 b5       	in	r24, 0x25	; 37
     54a:	84 60       	ori	r24, 0x04	; 4
     54c:	85 bd       	out	0x25, r24	; 37
		TCCR0B &= ~(1 << CS01);			// Timer Frequency = 62.5 KHz @Xplained Mini (F_CPU = 16MHz)
     54e:	85 b5       	in	r24, 0x25	; 37
     550:	8d 7f       	andi	r24, 0xFD	; 253
     552:	85 bd       	out	0x25, r24	; 37
		TCCR0B &= ~(1 << CS00);			// Timer Frequency = 31.25 KHz @PCB (F_CPU = 8MHz)					
     554:	85 b5       	in	r24, 0x25	; 37
     556:	8e 7f       	andi	r24, 0xFE	; 254
     558:	85 bd       	out	0x25, r24	; 37
	#else
	// Normal Operation Mode
	OCR2A = new_PWM_frequency;
	#endif
	
}
     55a:	ff 91       	pop	r31
     55c:	ef 91       	pop	r30
     55e:	8f 91       	pop	r24
     560:	0f 90       	pop	r0
     562:	0f be       	out	0x3f, r0	; 63
     564:	0f 90       	pop	r0
     566:	1f 90       	pop	r1
     568:	18 95       	reti

0000056a <__vector_21>:

/*** Analog to Digital Conversion Complete Interrupt ***/
ISR(ADC_vect){
     56a:	1f 92       	push	r1
     56c:	0f 92       	push	r0
     56e:	0f b6       	in	r0, 0x3f	; 63
     570:	0f 92       	push	r0
     572:	11 24       	eor	r1, r1
     574:	2f 93       	push	r18
     576:	3f 93       	push	r19
     578:	8f 93       	push	r24
     57a:	9f 93       	push	r25
     57c:	ef 93       	push	r30
     57e:	ff 93       	push	r31
	
	#ifdef ADC_DEBUG_MODE
	// Debugger Mode...

		if (samples_counter == 0 && ADC_next_channel == ADC_COIL_VOLTAGE_CHANNEL){
     580:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <samples_counter>
     584:	81 11       	cpse	r24, r1
     586:	13 c0       	rjmp	.+38     	; 0x5ae <__vector_21+0x44>
     588:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <ADC_next_channel>
     58c:	81 11       	cpse	r24, r1
     58e:	65 c0       	rjmp	.+202    	; 0x65a <__vector_21+0xf0>
			raw_maximum_voltage = ADC;	// Note: Only input in Channel 2 will be considered
     590:	e8 e7       	ldi	r30, 0x78	; 120
     592:	f0 e0       	ldi	r31, 0x00	; 0
     594:	80 81       	ld	r24, Z
     596:	91 81       	ldd	r25, Z+1	; 0x01
     598:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <raw_maximum_voltage+0x1>
     59c:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <raw_maximum_voltage>
			raw_minimum_voltage = ADC;
     5a0:	80 81       	ld	r24, Z
     5a2:	91 81       	ldd	r25, Z+1	; 0x01
     5a4:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <raw_minimum_voltage+0x1>
     5a8:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <raw_minimum_voltage>
     5ac:	04 c0       	rjmp	.+8      	; 0x5b6 <__vector_21+0x4c>
		}
		if (ADC_next_channel == ADC_COIL_VOLTAGE_CHANNEL){
     5ae:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <ADC_next_channel>
     5b2:	81 11       	cpse	r24, r1
     5b4:	52 c0       	rjmp	.+164    	; 0x65a <__vector_21+0xf0>
			if(raw_coil_voltage_index < 24){
     5b6:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <raw_coil_voltage_index>
     5ba:	88 31       	cpi	r24, 0x18	; 24
     5bc:	68 f4       	brcc	.+26     	; 0x5d8 <__vector_21+0x6e>
				raw_coil_voltages[raw_coil_voltage_index] = ADC;
     5be:	e0 91 ad 01 	lds	r30, 0x01AD	; 0x8001ad <raw_coil_voltage_index>
     5c2:	f0 e0       	ldi	r31, 0x00	; 0
     5c4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     5c8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     5cc:	ee 0f       	add	r30, r30
     5ce:	ff 1f       	adc	r31, r31
     5d0:	e2 51       	subi	r30, 0x12	; 18
     5d2:	fe 4f       	sbci	r31, 0xFE	; 254
     5d4:	91 83       	std	Z+1, r25	; 0x01
     5d6:	80 83       	st	Z, r24
			}
			if(ADC > raw_maximum_voltage){
     5d8:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     5dc:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     5e0:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <raw_maximum_voltage>
     5e4:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <raw_maximum_voltage+0x1>
     5e8:	82 17       	cp	r24, r18
     5ea:	93 07       	cpc	r25, r19
     5ec:	40 f4       	brcc	.+16     	; 0x5fe <__vector_21+0x94>
				raw_maximum_voltage = ADC;
     5ee:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     5f2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     5f6:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <raw_maximum_voltage+0x1>
     5fa:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <raw_maximum_voltage>
			}
			if(ADC < raw_minimum_voltage){
     5fe:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     602:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     606:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <raw_minimum_voltage>
     60a:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <raw_minimum_voltage+0x1>
     60e:	28 17       	cp	r18, r24
     610:	39 07       	cpc	r19, r25
     612:	40 f4       	brcc	.+16     	; 0x624 <__vector_21+0xba>
				raw_minimum_voltage = ADC;
     614:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     618:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     61c:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <raw_minimum_voltage+0x1>
     620:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <raw_minimum_voltage>
			}
			raw_coil_voltage_index++;
     624:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <raw_coil_voltage_index>
     628:	8f 5f       	subi	r24, 0xFF	; 255
     62a:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <raw_coil_voltage_index>
			raw_ADC_output_PC0 = ADC;
     62e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     632:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     636:	90 93 eb 01 	sts	0x01EB, r25	; 0x8001eb <raw_ADC_output_PC0+0x1>
     63a:	80 93 ea 01 	sts	0x01EA, r24	; 0x8001ea <raw_ADC_output_PC0>
			debug_ADC_channel = ADC_next_channel;
     63e:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <debug_ADC_channel>
			ADC_next_channel = ADC_COIL_CURRENT_CHANNEL;	// Next conversion is coil current shunt
     642:	85 e0       	ldi	r24, 0x05	; 5
     644:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <ADC_next_channel>
			ADMUX &= 0xf0;									// Reset to Channel 0
     648:	ec e7       	ldi	r30, 0x7C	; 124
     64a:	f0 e0       	ldi	r31, 0x00	; 0
     64c:	80 81       	ld	r24, Z
     64e:	80 7f       	andi	r24, 0xF0	; 240
     650:	80 83       	st	Z, r24
			ADMUX |= 0x05;									// Set to Channel 3. (coil current shunt)
     652:	80 81       	ld	r24, Z
     654:	85 60       	ori	r24, 0x05	; 5
     656:	80 83       	st	Z, r24
     658:	2c c0       	rjmp	.+88     	; 0x6b2 <__vector_21+0x148>
		}
		else if(ADC_next_channel == ADC_COIL_CURRENT_CHANNEL){
     65a:	85 30       	cpi	r24, 0x05	; 5
     65c:	51 f5       	brne	.+84     	; 0x6b2 <__vector_21+0x148>
			if(raw_coil_current_index < 24){
     65e:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <__data_end>
     662:	88 31       	cpi	r24, 0x18	; 24
     664:	68 f4       	brcc	.+26     	; 0x680 <__vector_21+0x116>
				raw_coil_currents[raw_coil_current_index] = ADC;
     666:	e0 91 ac 01 	lds	r30, 0x01AC	; 0x8001ac <__data_end>
     66a:	f0 e0       	ldi	r31, 0x00	; 0
     66c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     670:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     674:	ee 0f       	add	r30, r30
     676:	ff 1f       	adc	r31, r31
     678:	e0 55       	subi	r30, 0x50	; 80
     67a:	fe 4f       	sbci	r31, 0xFE	; 254
     67c:	91 83       	std	Z+1, r25	; 0x01
     67e:	80 83       	st	Z, r24
			}
			raw_coil_current_index++;
     680:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <__data_end>
     684:	8f 5f       	subi	r24, 0xFF	; 255
     686:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <__data_end>
			raw_ADC_output_PC5 = ADC;
     68a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     68e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     692:	90 93 e9 01 	sts	0x01E9, r25	; 0x8001e9 <raw_ADC_output_PC5+0x1>
     696:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <raw_ADC_output_PC5>
			debug_ADC_channel = ADC_next_channel;
     69a:	85 e0       	ldi	r24, 0x05	; 5
     69c:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <debug_ADC_channel>
			ADC_next_channel = ADC_COIL_VOLTAGE_CHANNEL;	// Next conversion is back to coil voltage sensor
     6a0:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <ADC_next_channel>
			ADMUX &= 0xf0;									// Reset to Channel 0.
     6a4:	ec e7       	ldi	r30, 0x7C	; 124
     6a6:	f0 e0       	ldi	r31, 0x00	; 0
     6a8:	80 81       	ld	r24, Z
     6aa:	80 7f       	andi	r24, 0xF0	; 240
     6ac:	80 83       	st	Z, r24
			ADMUX |= 0x00;									// Set to Channel 5. (right hall effect sensor)
     6ae:	80 81       	ld	r24, Z
     6b0:	80 83       	st	Z, r24
		}
		samples_counter++;
     6b2:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <samples_counter>
     6b6:	8f 5f       	subi	r24, 0xFF	; 255
     6b8:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <samples_counter>
		ADCSRA |= (1 << ADSC);
     6bc:	ea e7       	ldi	r30, 0x7A	; 122
     6be:	f0 e0       	ldi	r31, 0x00	; 0
     6c0:	80 81       	ld	r24, Z
     6c2:	80 64       	ori	r24, 0x40	; 64
     6c4:	80 83       	st	Z, r24
		}
		samples_counter++;	
		ADCSRA |= (1 << ADSC);
	#endif
	
}
     6c6:	ff 91       	pop	r31
     6c8:	ef 91       	pop	r30
     6ca:	9f 91       	pop	r25
     6cc:	8f 91       	pop	r24
     6ce:	3f 91       	pop	r19
     6d0:	2f 91       	pop	r18
     6d2:	0f 90       	pop	r0
     6d4:	0f be       	out	0x3f, r0	; 63
     6d6:	0f 90       	pop	r0
     6d8:	1f 90       	pop	r1
     6da:	18 95       	reti

000006dc <timer0_init>:


void timer0_init(){
	
	/*** OCR0A: Output Compare Register A ***/
	OCR0A = 255;
     6dc:	8f ef       	ldi	r24, 0xFF	; 255
     6de:	87 bd       	out	0x27, r24	; 39

	/*** TCCR0A: Timer/Counter Control Register A ***/
	/*** Compare Match Output A Mode ***/
	TCCR0A |=   (1 << COM0A1);		// Clear Output Compare Pin (OC0A) on Compare Match (non-inverting), Set OC0A at BOTTOM.
     6e0:	84 b5       	in	r24, 0x24	; 36
     6e2:	80 68       	ori	r24, 0x80	; 128
     6e4:	84 bd       	out	0x24, r24	; 36
	TCCR0A &=  ~(1 << COM0A0);
     6e6:	84 b5       	in	r24, 0x24	; 36
     6e8:	8f 7b       	andi	r24, 0xBF	; 191
     6ea:	84 bd       	out	0x24, r24	; 36
	
	/*** Waveform Generation Mode ***/
	TCCR0A |=  (1<< WGM02);			// Fast PWM Mode TOP = 0xff, Update OCR0A at BOTTOM, TOV at 0xff
     6ec:	84 b5       	in	r24, 0x24	; 36
     6ee:	88 60       	ori	r24, 0x08	; 8
     6f0:	84 bd       	out	0x24, r24	; 36
	TCCR0A |=  (1<< WGM01);
     6f2:	84 b5       	in	r24, 0x24	; 36
     6f4:	82 60       	ori	r24, 0x02	; 2
     6f6:	84 bd       	out	0x24, r24	; 36
	TCCR0A |=  (1<< WGM00);
     6f8:	84 b5       	in	r24, 0x24	; 36
     6fa:	81 60       	ori	r24, 0x01	; 1
     6fc:	84 bd       	out	0x24, r24	; 36
	/*** Force Output Compare B ***/
	//TCCR0B &= ~(1 << FOC0B);		// Force Output Compare B 'off'.
	
	/*** Clock Select Bits ***/
	// NOTES: CHANGE PRESCALER VALUE IF WE WANT TO PRODUCE SMALLER COUNT
	TCCR0B |= (1 << CS02);			// Pre-scaler 256
     6fe:	85 b5       	in	r24, 0x25	; 37
     700:	84 60       	ori	r24, 0x04	; 4
     702:	85 bd       	out	0x25, r24	; 37
	TCCR0B &= ~(1 << CS01);			// Timer Frequency = 62.5 KHz @Xplained Mini (F_CPU = 16MHz)
     704:	85 b5       	in	r24, 0x25	; 37
     706:	8d 7f       	andi	r24, 0xFD	; 253
     708:	85 bd       	out	0x25, r24	; 37
	TCCR0B &= ~(1 << CS00);			// Timer Frequency = 31.25 KHz @PCB (F_CPU = 8MHz)
     70a:	85 b5       	in	r24, 0x25	; 37
     70c:	8e 7f       	andi	r24, 0xFE	; 254
     70e:	85 bd       	out	0x25, r24	; 37
	/*** Timer / Counter 0 Output Compare Match A Interrupt ***/
	//TIMSK0 |=  (1 << OCIE0A);						// Interrupt when TCNT0 = OCR0A 'On'
	/*** Timer / Counter 0 Output Compare Match B Interrupt ***/
	//TIMSK0 &= ~(1 << OCIE0B);						// Interrupt when TCNT0 = OCR0B 'Off'
	/*** Timer / Counter 0 Overflow Interrupt Enable ***/
	TIMSK0 |=  (1 << TOIE0);						// Interrupt when Overflow On 
     710:	ee e6       	ldi	r30, 0x6E	; 110
     712:	f0 e0       	ldi	r31, 0x00	; 0
     714:	80 81       	ld	r24, Z
     716:	81 60       	ori	r24, 0x01	; 1
     718:	80 83       	st	Z, r24
     71a:	08 95       	ret

0000071c <timer2_init>:
}

void timer2_init(){
	
	/*** OCR2A: Output Compare Register A ***/
	OCR2A = 255;
     71c:	8f ef       	ldi	r24, 0xFF	; 255
     71e:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>

	/*** TCCR2A: Timer/Counter Control Register A ***/
	/*** Compare Match Output A Mode ***/
	TCCR2A |=   (1 << COM2A1);		// Clear Output Compare Pin (OC2A) on Compare Match (non-inverting), Set OC2A at BOTTOM.
     722:	e0 eb       	ldi	r30, 0xB0	; 176
     724:	f0 e0       	ldi	r31, 0x00	; 0
     726:	80 81       	ld	r24, Z
     728:	80 68       	ori	r24, 0x80	; 128
     72a:	80 83       	st	Z, r24
	TCCR2A &=  ~(1 << COM2A0);
     72c:	80 81       	ld	r24, Z
     72e:	8f 7b       	andi	r24, 0xBF	; 191
     730:	80 83       	st	Z, r24
	
	/*** Waveform Generation Mode ***/
	TCCR2A |=  (1<< WGM22);			// Fast PWM Mode TOP = 0xff, Update OCR0A at BOTTOM, TOV at 0xff
     732:	80 81       	ld	r24, Z
     734:	88 60       	ori	r24, 0x08	; 8
     736:	80 83       	st	Z, r24
	TCCR2A |=  (1<< WGM21);
     738:	80 81       	ld	r24, Z
     73a:	82 60       	ori	r24, 0x02	; 2
     73c:	80 83       	st	Z, r24
	TCCR2A |=  (1<< WGM20);
     73e:	80 81       	ld	r24, Z
     740:	81 60       	ori	r24, 0x01	; 1
     742:	80 83       	st	Z, r24
	/*** Timer / Counter 0 Output Compare Match A Interrupt ***/
	//TIMSK0 |=  (1 << OCIE0A);						// Interrupt when TCNT0 = OCR0A 'On'
	/*** Timer / Counter 0 Output Compare Match B Interrupt ***/
	//TIMSK0 &= ~(1 << OCIE0B);						// Interrupt when TCNT0 = OCR0B 'Off'
	/*** Timer / Counter 0 Overflow Interrupt Enable ***/
	TIMSK2 |=  (1 << TOIE2);						// Interrupt when Overflow On
     744:	e0 e7       	ldi	r30, 0x70	; 112
     746:	f0 e0       	ldi	r31, 0x00	; 0
     748:	80 81       	ld	r24, Z
     74a:	81 60       	ori	r24, 0x01	; 1
     74c:	80 83       	st	Z, r24
     74e:	08 95       	ret

00000750 <__divsf3>:
     750:	0e 94 bc 03 	call	0x778	; 0x778 <__divsf3x>
     754:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <__fp_round>
     758:	0e 94 67 04 	call	0x8ce	; 0x8ce <__fp_pscB>
     75c:	58 f0       	brcs	.+22     	; 0x774 <__divsf3+0x24>
     75e:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__fp_pscA>
     762:	40 f0       	brcs	.+16     	; 0x774 <__divsf3+0x24>
     764:	29 f4       	brne	.+10     	; 0x770 <__divsf3+0x20>
     766:	5f 3f       	cpi	r21, 0xFF	; 255
     768:	29 f0       	breq	.+10     	; 0x774 <__divsf3+0x24>
     76a:	0c 94 57 04 	jmp	0x8ae	; 0x8ae <__fp_inf>
     76e:	51 11       	cpse	r21, r1
     770:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_szero>
     774:	0c 94 5d 04 	jmp	0x8ba	; 0x8ba <__fp_nan>

00000778 <__divsf3x>:
     778:	0e 94 7f 04 	call	0x8fe	; 0x8fe <__fp_split3>
     77c:	68 f3       	brcs	.-38     	; 0x758 <__divsf3+0x8>

0000077e <__divsf3_pse>:
     77e:	99 23       	and	r25, r25
     780:	b1 f3       	breq	.-20     	; 0x76e <__divsf3+0x1e>
     782:	55 23       	and	r21, r21
     784:	91 f3       	breq	.-28     	; 0x76a <__divsf3+0x1a>
     786:	95 1b       	sub	r25, r21
     788:	55 0b       	sbc	r21, r21
     78a:	bb 27       	eor	r27, r27
     78c:	aa 27       	eor	r26, r26
     78e:	62 17       	cp	r22, r18
     790:	73 07       	cpc	r23, r19
     792:	84 07       	cpc	r24, r20
     794:	38 f0       	brcs	.+14     	; 0x7a4 <__divsf3_pse+0x26>
     796:	9f 5f       	subi	r25, 0xFF	; 255
     798:	5f 4f       	sbci	r21, 0xFF	; 255
     79a:	22 0f       	add	r18, r18
     79c:	33 1f       	adc	r19, r19
     79e:	44 1f       	adc	r20, r20
     7a0:	aa 1f       	adc	r26, r26
     7a2:	a9 f3       	breq	.-22     	; 0x78e <__divsf3_pse+0x10>
     7a4:	35 d0       	rcall	.+106    	; 0x810 <__divsf3_pse+0x92>
     7a6:	0e 2e       	mov	r0, r30
     7a8:	3a f0       	brmi	.+14     	; 0x7b8 <__divsf3_pse+0x3a>
     7aa:	e0 e8       	ldi	r30, 0x80	; 128
     7ac:	32 d0       	rcall	.+100    	; 0x812 <__divsf3_pse+0x94>
     7ae:	91 50       	subi	r25, 0x01	; 1
     7b0:	50 40       	sbci	r21, 0x00	; 0
     7b2:	e6 95       	lsr	r30
     7b4:	00 1c       	adc	r0, r0
     7b6:	ca f7       	brpl	.-14     	; 0x7aa <__divsf3_pse+0x2c>
     7b8:	2b d0       	rcall	.+86     	; 0x810 <__divsf3_pse+0x92>
     7ba:	fe 2f       	mov	r31, r30
     7bc:	29 d0       	rcall	.+82     	; 0x810 <__divsf3_pse+0x92>
     7be:	66 0f       	add	r22, r22
     7c0:	77 1f       	adc	r23, r23
     7c2:	88 1f       	adc	r24, r24
     7c4:	bb 1f       	adc	r27, r27
     7c6:	26 17       	cp	r18, r22
     7c8:	37 07       	cpc	r19, r23
     7ca:	48 07       	cpc	r20, r24
     7cc:	ab 07       	cpc	r26, r27
     7ce:	b0 e8       	ldi	r27, 0x80	; 128
     7d0:	09 f0       	breq	.+2      	; 0x7d4 <__divsf3_pse+0x56>
     7d2:	bb 0b       	sbc	r27, r27
     7d4:	80 2d       	mov	r24, r0
     7d6:	bf 01       	movw	r22, r30
     7d8:	ff 27       	eor	r31, r31
     7da:	93 58       	subi	r25, 0x83	; 131
     7dc:	5f 4f       	sbci	r21, 0xFF	; 255
     7de:	3a f0       	brmi	.+14     	; 0x7ee <__divsf3_pse+0x70>
     7e0:	9e 3f       	cpi	r25, 0xFE	; 254
     7e2:	51 05       	cpc	r21, r1
     7e4:	78 f0       	brcs	.+30     	; 0x804 <__divsf3_pse+0x86>
     7e6:	0c 94 57 04 	jmp	0x8ae	; 0x8ae <__fp_inf>
     7ea:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_szero>
     7ee:	5f 3f       	cpi	r21, 0xFF	; 255
     7f0:	e4 f3       	brlt	.-8      	; 0x7ea <__divsf3_pse+0x6c>
     7f2:	98 3e       	cpi	r25, 0xE8	; 232
     7f4:	d4 f3       	brlt	.-12     	; 0x7ea <__divsf3_pse+0x6c>
     7f6:	86 95       	lsr	r24
     7f8:	77 95       	ror	r23
     7fa:	67 95       	ror	r22
     7fc:	b7 95       	ror	r27
     7fe:	f7 95       	ror	r31
     800:	9f 5f       	subi	r25, 0xFF	; 255
     802:	c9 f7       	brne	.-14     	; 0x7f6 <__divsf3_pse+0x78>
     804:	88 0f       	add	r24, r24
     806:	91 1d       	adc	r25, r1
     808:	96 95       	lsr	r25
     80a:	87 95       	ror	r24
     80c:	97 f9       	bld	r25, 7
     80e:	08 95       	ret
     810:	e1 e0       	ldi	r30, 0x01	; 1
     812:	66 0f       	add	r22, r22
     814:	77 1f       	adc	r23, r23
     816:	88 1f       	adc	r24, r24
     818:	bb 1f       	adc	r27, r27
     81a:	62 17       	cp	r22, r18
     81c:	73 07       	cpc	r23, r19
     81e:	84 07       	cpc	r24, r20
     820:	ba 07       	cpc	r27, r26
     822:	20 f0       	brcs	.+8      	; 0x82c <__divsf3_pse+0xae>
     824:	62 1b       	sub	r22, r18
     826:	73 0b       	sbc	r23, r19
     828:	84 0b       	sbc	r24, r20
     82a:	ba 0b       	sbc	r27, r26
     82c:	ee 1f       	adc	r30, r30
     82e:	88 f7       	brcc	.-30     	; 0x812 <__divsf3_pse+0x94>
     830:	e0 95       	com	r30
     832:	08 95       	ret

00000834 <__floatunsisf>:
     834:	e8 94       	clt
     836:	09 c0       	rjmp	.+18     	; 0x84a <__floatsisf+0x12>

00000838 <__floatsisf>:
     838:	97 fb       	bst	r25, 7
     83a:	3e f4       	brtc	.+14     	; 0x84a <__floatsisf+0x12>
     83c:	90 95       	com	r25
     83e:	80 95       	com	r24
     840:	70 95       	com	r23
     842:	61 95       	neg	r22
     844:	7f 4f       	sbci	r23, 0xFF	; 255
     846:	8f 4f       	sbci	r24, 0xFF	; 255
     848:	9f 4f       	sbci	r25, 0xFF	; 255
     84a:	99 23       	and	r25, r25
     84c:	a9 f0       	breq	.+42     	; 0x878 <__floatsisf+0x40>
     84e:	f9 2f       	mov	r31, r25
     850:	96 e9       	ldi	r25, 0x96	; 150
     852:	bb 27       	eor	r27, r27
     854:	93 95       	inc	r25
     856:	f6 95       	lsr	r31
     858:	87 95       	ror	r24
     85a:	77 95       	ror	r23
     85c:	67 95       	ror	r22
     85e:	b7 95       	ror	r27
     860:	f1 11       	cpse	r31, r1
     862:	f8 cf       	rjmp	.-16     	; 0x854 <__floatsisf+0x1c>
     864:	fa f4       	brpl	.+62     	; 0x8a4 <__floatsisf+0x6c>
     866:	bb 0f       	add	r27, r27
     868:	11 f4       	brne	.+4      	; 0x86e <__floatsisf+0x36>
     86a:	60 ff       	sbrs	r22, 0
     86c:	1b c0       	rjmp	.+54     	; 0x8a4 <__floatsisf+0x6c>
     86e:	6f 5f       	subi	r22, 0xFF	; 255
     870:	7f 4f       	sbci	r23, 0xFF	; 255
     872:	8f 4f       	sbci	r24, 0xFF	; 255
     874:	9f 4f       	sbci	r25, 0xFF	; 255
     876:	16 c0       	rjmp	.+44     	; 0x8a4 <__floatsisf+0x6c>
     878:	88 23       	and	r24, r24
     87a:	11 f0       	breq	.+4      	; 0x880 <__floatsisf+0x48>
     87c:	96 e9       	ldi	r25, 0x96	; 150
     87e:	11 c0       	rjmp	.+34     	; 0x8a2 <__floatsisf+0x6a>
     880:	77 23       	and	r23, r23
     882:	21 f0       	breq	.+8      	; 0x88c <__floatsisf+0x54>
     884:	9e e8       	ldi	r25, 0x8E	; 142
     886:	87 2f       	mov	r24, r23
     888:	76 2f       	mov	r23, r22
     88a:	05 c0       	rjmp	.+10     	; 0x896 <__floatsisf+0x5e>
     88c:	66 23       	and	r22, r22
     88e:	71 f0       	breq	.+28     	; 0x8ac <__floatsisf+0x74>
     890:	96 e8       	ldi	r25, 0x86	; 134
     892:	86 2f       	mov	r24, r22
     894:	70 e0       	ldi	r23, 0x00	; 0
     896:	60 e0       	ldi	r22, 0x00	; 0
     898:	2a f0       	brmi	.+10     	; 0x8a4 <__floatsisf+0x6c>
     89a:	9a 95       	dec	r25
     89c:	66 0f       	add	r22, r22
     89e:	77 1f       	adc	r23, r23
     8a0:	88 1f       	adc	r24, r24
     8a2:	da f7       	brpl	.-10     	; 0x89a <__floatsisf+0x62>
     8a4:	88 0f       	add	r24, r24
     8a6:	96 95       	lsr	r25
     8a8:	87 95       	ror	r24
     8aa:	97 f9       	bld	r25, 7
     8ac:	08 95       	ret

000008ae <__fp_inf>:
     8ae:	97 f9       	bld	r25, 7
     8b0:	9f 67       	ori	r25, 0x7F	; 127
     8b2:	80 e8       	ldi	r24, 0x80	; 128
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	60 e0       	ldi	r22, 0x00	; 0
     8b8:	08 95       	ret

000008ba <__fp_nan>:
     8ba:	9f ef       	ldi	r25, 0xFF	; 255
     8bc:	80 ec       	ldi	r24, 0xC0	; 192
     8be:	08 95       	ret

000008c0 <__fp_pscA>:
     8c0:	00 24       	eor	r0, r0
     8c2:	0a 94       	dec	r0
     8c4:	16 16       	cp	r1, r22
     8c6:	17 06       	cpc	r1, r23
     8c8:	18 06       	cpc	r1, r24
     8ca:	09 06       	cpc	r0, r25
     8cc:	08 95       	ret

000008ce <__fp_pscB>:
     8ce:	00 24       	eor	r0, r0
     8d0:	0a 94       	dec	r0
     8d2:	12 16       	cp	r1, r18
     8d4:	13 06       	cpc	r1, r19
     8d6:	14 06       	cpc	r1, r20
     8d8:	05 06       	cpc	r0, r21
     8da:	08 95       	ret

000008dc <__fp_round>:
     8dc:	09 2e       	mov	r0, r25
     8de:	03 94       	inc	r0
     8e0:	00 0c       	add	r0, r0
     8e2:	11 f4       	brne	.+4      	; 0x8e8 <__fp_round+0xc>
     8e4:	88 23       	and	r24, r24
     8e6:	52 f0       	brmi	.+20     	; 0x8fc <__fp_round+0x20>
     8e8:	bb 0f       	add	r27, r27
     8ea:	40 f4       	brcc	.+16     	; 0x8fc <__fp_round+0x20>
     8ec:	bf 2b       	or	r27, r31
     8ee:	11 f4       	brne	.+4      	; 0x8f4 <__fp_round+0x18>
     8f0:	60 ff       	sbrs	r22, 0
     8f2:	04 c0       	rjmp	.+8      	; 0x8fc <__fp_round+0x20>
     8f4:	6f 5f       	subi	r22, 0xFF	; 255
     8f6:	7f 4f       	sbci	r23, 0xFF	; 255
     8f8:	8f 4f       	sbci	r24, 0xFF	; 255
     8fa:	9f 4f       	sbci	r25, 0xFF	; 255
     8fc:	08 95       	ret

000008fe <__fp_split3>:
     8fe:	57 fd       	sbrc	r21, 7
     900:	90 58       	subi	r25, 0x80	; 128
     902:	44 0f       	add	r20, r20
     904:	55 1f       	adc	r21, r21
     906:	59 f0       	breq	.+22     	; 0x91e <__fp_splitA+0x10>
     908:	5f 3f       	cpi	r21, 0xFF	; 255
     90a:	71 f0       	breq	.+28     	; 0x928 <__fp_splitA+0x1a>
     90c:	47 95       	ror	r20

0000090e <__fp_splitA>:
     90e:	88 0f       	add	r24, r24
     910:	97 fb       	bst	r25, 7
     912:	99 1f       	adc	r25, r25
     914:	61 f0       	breq	.+24     	; 0x92e <__fp_splitA+0x20>
     916:	9f 3f       	cpi	r25, 0xFF	; 255
     918:	79 f0       	breq	.+30     	; 0x938 <__fp_splitA+0x2a>
     91a:	87 95       	ror	r24
     91c:	08 95       	ret
     91e:	12 16       	cp	r1, r18
     920:	13 06       	cpc	r1, r19
     922:	14 06       	cpc	r1, r20
     924:	55 1f       	adc	r21, r21
     926:	f2 cf       	rjmp	.-28     	; 0x90c <__stack+0xd>
     928:	46 95       	lsr	r20
     92a:	f1 df       	rcall	.-30     	; 0x90e <__fp_splitA>
     92c:	08 c0       	rjmp	.+16     	; 0x93e <__fp_splitA+0x30>
     92e:	16 16       	cp	r1, r22
     930:	17 06       	cpc	r1, r23
     932:	18 06       	cpc	r1, r24
     934:	99 1f       	adc	r25, r25
     936:	f1 cf       	rjmp	.-30     	; 0x91a <__fp_splitA+0xc>
     938:	86 95       	lsr	r24
     93a:	71 05       	cpc	r23, r1
     93c:	61 05       	cpc	r22, r1
     93e:	08 94       	sec
     940:	08 95       	ret

00000942 <__fp_zero>:
     942:	e8 94       	clt

00000944 <__fp_szero>:
     944:	bb 27       	eor	r27, r27
     946:	66 27       	eor	r22, r22
     948:	77 27       	eor	r23, r23
     94a:	cb 01       	movw	r24, r22
     94c:	97 f9       	bld	r25, 7
     94e:	08 95       	ret

00000950 <__mulsf3>:
     950:	0e 94 bb 04 	call	0x976	; 0x976 <__mulsf3x>
     954:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <__fp_round>
     958:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__fp_pscA>
     95c:	38 f0       	brcs	.+14     	; 0x96c <__mulsf3+0x1c>
     95e:	0e 94 67 04 	call	0x8ce	; 0x8ce <__fp_pscB>
     962:	20 f0       	brcs	.+8      	; 0x96c <__mulsf3+0x1c>
     964:	95 23       	and	r25, r21
     966:	11 f0       	breq	.+4      	; 0x96c <__mulsf3+0x1c>
     968:	0c 94 57 04 	jmp	0x8ae	; 0x8ae <__fp_inf>
     96c:	0c 94 5d 04 	jmp	0x8ba	; 0x8ba <__fp_nan>
     970:	11 24       	eor	r1, r1
     972:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_szero>

00000976 <__mulsf3x>:
     976:	0e 94 7f 04 	call	0x8fe	; 0x8fe <__fp_split3>
     97a:	70 f3       	brcs	.-36     	; 0x958 <__mulsf3+0x8>

0000097c <__mulsf3_pse>:
     97c:	95 9f       	mul	r25, r21
     97e:	c1 f3       	breq	.-16     	; 0x970 <__mulsf3+0x20>
     980:	95 0f       	add	r25, r21
     982:	50 e0       	ldi	r21, 0x00	; 0
     984:	55 1f       	adc	r21, r21
     986:	62 9f       	mul	r22, r18
     988:	f0 01       	movw	r30, r0
     98a:	72 9f       	mul	r23, r18
     98c:	bb 27       	eor	r27, r27
     98e:	f0 0d       	add	r31, r0
     990:	b1 1d       	adc	r27, r1
     992:	63 9f       	mul	r22, r19
     994:	aa 27       	eor	r26, r26
     996:	f0 0d       	add	r31, r0
     998:	b1 1d       	adc	r27, r1
     99a:	aa 1f       	adc	r26, r26
     99c:	64 9f       	mul	r22, r20
     99e:	66 27       	eor	r22, r22
     9a0:	b0 0d       	add	r27, r0
     9a2:	a1 1d       	adc	r26, r1
     9a4:	66 1f       	adc	r22, r22
     9a6:	82 9f       	mul	r24, r18
     9a8:	22 27       	eor	r18, r18
     9aa:	b0 0d       	add	r27, r0
     9ac:	a1 1d       	adc	r26, r1
     9ae:	62 1f       	adc	r22, r18
     9b0:	73 9f       	mul	r23, r19
     9b2:	b0 0d       	add	r27, r0
     9b4:	a1 1d       	adc	r26, r1
     9b6:	62 1f       	adc	r22, r18
     9b8:	83 9f       	mul	r24, r19
     9ba:	a0 0d       	add	r26, r0
     9bc:	61 1d       	adc	r22, r1
     9be:	22 1f       	adc	r18, r18
     9c0:	74 9f       	mul	r23, r20
     9c2:	33 27       	eor	r19, r19
     9c4:	a0 0d       	add	r26, r0
     9c6:	61 1d       	adc	r22, r1
     9c8:	23 1f       	adc	r18, r19
     9ca:	84 9f       	mul	r24, r20
     9cc:	60 0d       	add	r22, r0
     9ce:	21 1d       	adc	r18, r1
     9d0:	82 2f       	mov	r24, r18
     9d2:	76 2f       	mov	r23, r22
     9d4:	6a 2f       	mov	r22, r26
     9d6:	11 24       	eor	r1, r1
     9d8:	9f 57       	subi	r25, 0x7F	; 127
     9da:	50 40       	sbci	r21, 0x00	; 0
     9dc:	9a f0       	brmi	.+38     	; 0xa04 <__mulsf3_pse+0x88>
     9de:	f1 f0       	breq	.+60     	; 0xa1c <__mulsf3_pse+0xa0>
     9e0:	88 23       	and	r24, r24
     9e2:	4a f0       	brmi	.+18     	; 0x9f6 <__mulsf3_pse+0x7a>
     9e4:	ee 0f       	add	r30, r30
     9e6:	ff 1f       	adc	r31, r31
     9e8:	bb 1f       	adc	r27, r27
     9ea:	66 1f       	adc	r22, r22
     9ec:	77 1f       	adc	r23, r23
     9ee:	88 1f       	adc	r24, r24
     9f0:	91 50       	subi	r25, 0x01	; 1
     9f2:	50 40       	sbci	r21, 0x00	; 0
     9f4:	a9 f7       	brne	.-22     	; 0x9e0 <__mulsf3_pse+0x64>
     9f6:	9e 3f       	cpi	r25, 0xFE	; 254
     9f8:	51 05       	cpc	r21, r1
     9fa:	80 f0       	brcs	.+32     	; 0xa1c <__mulsf3_pse+0xa0>
     9fc:	0c 94 57 04 	jmp	0x8ae	; 0x8ae <__fp_inf>
     a00:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_szero>
     a04:	5f 3f       	cpi	r21, 0xFF	; 255
     a06:	e4 f3       	brlt	.-8      	; 0xa00 <__mulsf3_pse+0x84>
     a08:	98 3e       	cpi	r25, 0xE8	; 232
     a0a:	d4 f3       	brlt	.-12     	; 0xa00 <__mulsf3_pse+0x84>
     a0c:	86 95       	lsr	r24
     a0e:	77 95       	ror	r23
     a10:	67 95       	ror	r22
     a12:	b7 95       	ror	r27
     a14:	f7 95       	ror	r31
     a16:	e7 95       	ror	r30
     a18:	9f 5f       	subi	r25, 0xFF	; 255
     a1a:	c1 f7       	brne	.-16     	; 0xa0c <__mulsf3_pse+0x90>
     a1c:	fe 2b       	or	r31, r30
     a1e:	88 0f       	add	r24, r24
     a20:	91 1d       	adc	r25, r1
     a22:	96 95       	lsr	r25
     a24:	87 95       	ror	r24
     a26:	97 f9       	bld	r25, 7
     a28:	08 95       	ret

00000a2a <vfprintf>:
     a2a:	a0 e1       	ldi	r26, 0x10	; 16
     a2c:	b0 e0       	ldi	r27, 0x00	; 0
     a2e:	eb e1       	ldi	r30, 0x1B	; 27
     a30:	f5 e0       	ldi	r31, 0x05	; 5
     a32:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__prologue_saves__>
     a36:	7c 01       	movw	r14, r24
     a38:	1b 01       	movw	r2, r22
     a3a:	6a 01       	movw	r12, r20
     a3c:	fc 01       	movw	r30, r24
     a3e:	17 82       	std	Z+7, r1	; 0x07
     a40:	16 82       	std	Z+6, r1	; 0x06
     a42:	83 81       	ldd	r24, Z+3	; 0x03
     a44:	81 ff       	sbrs	r24, 1
     a46:	44 c3       	rjmp	.+1672   	; 0x10d0 <vfprintf+0x6a6>
     a48:	9e 01       	movw	r18, r28
     a4a:	2f 5f       	subi	r18, 0xFF	; 255
     a4c:	3f 4f       	sbci	r19, 0xFF	; 255
     a4e:	39 01       	movw	r6, r18
     a50:	f7 01       	movw	r30, r14
     a52:	93 81       	ldd	r25, Z+3	; 0x03
     a54:	f1 01       	movw	r30, r2
     a56:	93 fd       	sbrc	r25, 3
     a58:	85 91       	lpm	r24, Z+
     a5a:	93 ff       	sbrs	r25, 3
     a5c:	81 91       	ld	r24, Z+
     a5e:	1f 01       	movw	r2, r30
     a60:	88 23       	and	r24, r24
     a62:	09 f4       	brne	.+2      	; 0xa66 <vfprintf+0x3c>
     a64:	31 c3       	rjmp	.+1634   	; 0x10c8 <vfprintf+0x69e>
     a66:	85 32       	cpi	r24, 0x25	; 37
     a68:	39 f4       	brne	.+14     	; 0xa78 <vfprintf+0x4e>
     a6a:	93 fd       	sbrc	r25, 3
     a6c:	85 91       	lpm	r24, Z+
     a6e:	93 ff       	sbrs	r25, 3
     a70:	81 91       	ld	r24, Z+
     a72:	1f 01       	movw	r2, r30
     a74:	85 32       	cpi	r24, 0x25	; 37
     a76:	39 f4       	brne	.+14     	; 0xa86 <vfprintf+0x5c>
     a78:	b7 01       	movw	r22, r14
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     a80:	56 01       	movw	r10, r12
     a82:	65 01       	movw	r12, r10
     a84:	e5 cf       	rjmp	.-54     	; 0xa50 <vfprintf+0x26>
     a86:	10 e0       	ldi	r17, 0x00	; 0
     a88:	51 2c       	mov	r5, r1
     a8a:	91 2c       	mov	r9, r1
     a8c:	ff e1       	ldi	r31, 0x1F	; 31
     a8e:	f9 15       	cp	r31, r9
     a90:	d8 f0       	brcs	.+54     	; 0xac8 <vfprintf+0x9e>
     a92:	8b 32       	cpi	r24, 0x2B	; 43
     a94:	79 f0       	breq	.+30     	; 0xab4 <vfprintf+0x8a>
     a96:	38 f4       	brcc	.+14     	; 0xaa6 <vfprintf+0x7c>
     a98:	80 32       	cpi	r24, 0x20	; 32
     a9a:	79 f0       	breq	.+30     	; 0xaba <vfprintf+0x90>
     a9c:	83 32       	cpi	r24, 0x23	; 35
     a9e:	a1 f4       	brne	.+40     	; 0xac8 <vfprintf+0x9e>
     aa0:	f9 2d       	mov	r31, r9
     aa2:	f0 61       	ori	r31, 0x10	; 16
     aa4:	2e c0       	rjmp	.+92     	; 0xb02 <vfprintf+0xd8>
     aa6:	8d 32       	cpi	r24, 0x2D	; 45
     aa8:	61 f0       	breq	.+24     	; 0xac2 <vfprintf+0x98>
     aaa:	80 33       	cpi	r24, 0x30	; 48
     aac:	69 f4       	brne	.+26     	; 0xac8 <vfprintf+0x9e>
     aae:	29 2d       	mov	r18, r9
     ab0:	21 60       	ori	r18, 0x01	; 1
     ab2:	2d c0       	rjmp	.+90     	; 0xb0e <vfprintf+0xe4>
     ab4:	39 2d       	mov	r19, r9
     ab6:	32 60       	ori	r19, 0x02	; 2
     ab8:	93 2e       	mov	r9, r19
     aba:	89 2d       	mov	r24, r9
     abc:	84 60       	ori	r24, 0x04	; 4
     abe:	98 2e       	mov	r9, r24
     ac0:	2a c0       	rjmp	.+84     	; 0xb16 <vfprintf+0xec>
     ac2:	e9 2d       	mov	r30, r9
     ac4:	e8 60       	ori	r30, 0x08	; 8
     ac6:	15 c0       	rjmp	.+42     	; 0xaf2 <vfprintf+0xc8>
     ac8:	97 fc       	sbrc	r9, 7
     aca:	2d c0       	rjmp	.+90     	; 0xb26 <vfprintf+0xfc>
     acc:	20 ed       	ldi	r18, 0xD0	; 208
     ace:	28 0f       	add	r18, r24
     ad0:	2a 30       	cpi	r18, 0x0A	; 10
     ad2:	88 f4       	brcc	.+34     	; 0xaf6 <vfprintf+0xcc>
     ad4:	96 fe       	sbrs	r9, 6
     ad6:	06 c0       	rjmp	.+12     	; 0xae4 <vfprintf+0xba>
     ad8:	3a e0       	ldi	r19, 0x0A	; 10
     ada:	13 9f       	mul	r17, r19
     adc:	20 0d       	add	r18, r0
     ade:	11 24       	eor	r1, r1
     ae0:	12 2f       	mov	r17, r18
     ae2:	19 c0       	rjmp	.+50     	; 0xb16 <vfprintf+0xec>
     ae4:	8a e0       	ldi	r24, 0x0A	; 10
     ae6:	58 9e       	mul	r5, r24
     ae8:	20 0d       	add	r18, r0
     aea:	11 24       	eor	r1, r1
     aec:	52 2e       	mov	r5, r18
     aee:	e9 2d       	mov	r30, r9
     af0:	e0 62       	ori	r30, 0x20	; 32
     af2:	9e 2e       	mov	r9, r30
     af4:	10 c0       	rjmp	.+32     	; 0xb16 <vfprintf+0xec>
     af6:	8e 32       	cpi	r24, 0x2E	; 46
     af8:	31 f4       	brne	.+12     	; 0xb06 <vfprintf+0xdc>
     afa:	96 fc       	sbrc	r9, 6
     afc:	e5 c2       	rjmp	.+1482   	; 0x10c8 <vfprintf+0x69e>
     afe:	f9 2d       	mov	r31, r9
     b00:	f0 64       	ori	r31, 0x40	; 64
     b02:	9f 2e       	mov	r9, r31
     b04:	08 c0       	rjmp	.+16     	; 0xb16 <vfprintf+0xec>
     b06:	8c 36       	cpi	r24, 0x6C	; 108
     b08:	21 f4       	brne	.+8      	; 0xb12 <vfprintf+0xe8>
     b0a:	29 2d       	mov	r18, r9
     b0c:	20 68       	ori	r18, 0x80	; 128
     b0e:	92 2e       	mov	r9, r18
     b10:	02 c0       	rjmp	.+4      	; 0xb16 <vfprintf+0xec>
     b12:	88 36       	cpi	r24, 0x68	; 104
     b14:	41 f4       	brne	.+16     	; 0xb26 <vfprintf+0xfc>
     b16:	f1 01       	movw	r30, r2
     b18:	93 fd       	sbrc	r25, 3
     b1a:	85 91       	lpm	r24, Z+
     b1c:	93 ff       	sbrs	r25, 3
     b1e:	81 91       	ld	r24, Z+
     b20:	1f 01       	movw	r2, r30
     b22:	81 11       	cpse	r24, r1
     b24:	b3 cf       	rjmp	.-154    	; 0xa8c <vfprintf+0x62>
     b26:	9b eb       	ldi	r25, 0xBB	; 187
     b28:	98 0f       	add	r25, r24
     b2a:	93 30       	cpi	r25, 0x03	; 3
     b2c:	20 f4       	brcc	.+8      	; 0xb36 <vfprintf+0x10c>
     b2e:	99 2d       	mov	r25, r9
     b30:	90 61       	ori	r25, 0x10	; 16
     b32:	80 5e       	subi	r24, 0xE0	; 224
     b34:	07 c0       	rjmp	.+14     	; 0xb44 <vfprintf+0x11a>
     b36:	9b e9       	ldi	r25, 0x9B	; 155
     b38:	98 0f       	add	r25, r24
     b3a:	93 30       	cpi	r25, 0x03	; 3
     b3c:	08 f0       	brcs	.+2      	; 0xb40 <vfprintf+0x116>
     b3e:	66 c1       	rjmp	.+716    	; 0xe0c <vfprintf+0x3e2>
     b40:	99 2d       	mov	r25, r9
     b42:	9f 7e       	andi	r25, 0xEF	; 239
     b44:	96 ff       	sbrs	r25, 6
     b46:	16 e0       	ldi	r17, 0x06	; 6
     b48:	9f 73       	andi	r25, 0x3F	; 63
     b4a:	99 2e       	mov	r9, r25
     b4c:	85 36       	cpi	r24, 0x65	; 101
     b4e:	19 f4       	brne	.+6      	; 0xb56 <vfprintf+0x12c>
     b50:	90 64       	ori	r25, 0x40	; 64
     b52:	99 2e       	mov	r9, r25
     b54:	08 c0       	rjmp	.+16     	; 0xb66 <vfprintf+0x13c>
     b56:	86 36       	cpi	r24, 0x66	; 102
     b58:	21 f4       	brne	.+8      	; 0xb62 <vfprintf+0x138>
     b5a:	39 2f       	mov	r19, r25
     b5c:	30 68       	ori	r19, 0x80	; 128
     b5e:	93 2e       	mov	r9, r19
     b60:	02 c0       	rjmp	.+4      	; 0xb66 <vfprintf+0x13c>
     b62:	11 11       	cpse	r17, r1
     b64:	11 50       	subi	r17, 0x01	; 1
     b66:	97 fe       	sbrs	r9, 7
     b68:	07 c0       	rjmp	.+14     	; 0xb78 <vfprintf+0x14e>
     b6a:	1c 33       	cpi	r17, 0x3C	; 60
     b6c:	50 f4       	brcc	.+20     	; 0xb82 <vfprintf+0x158>
     b6e:	44 24       	eor	r4, r4
     b70:	43 94       	inc	r4
     b72:	41 0e       	add	r4, r17
     b74:	27 e0       	ldi	r18, 0x07	; 7
     b76:	0b c0       	rjmp	.+22     	; 0xb8e <vfprintf+0x164>
     b78:	18 30       	cpi	r17, 0x08	; 8
     b7a:	38 f0       	brcs	.+14     	; 0xb8a <vfprintf+0x160>
     b7c:	27 e0       	ldi	r18, 0x07	; 7
     b7e:	17 e0       	ldi	r17, 0x07	; 7
     b80:	05 c0       	rjmp	.+10     	; 0xb8c <vfprintf+0x162>
     b82:	27 e0       	ldi	r18, 0x07	; 7
     b84:	9c e3       	ldi	r25, 0x3C	; 60
     b86:	49 2e       	mov	r4, r25
     b88:	02 c0       	rjmp	.+4      	; 0xb8e <vfprintf+0x164>
     b8a:	21 2f       	mov	r18, r17
     b8c:	41 2c       	mov	r4, r1
     b8e:	56 01       	movw	r10, r12
     b90:	84 e0       	ldi	r24, 0x04	; 4
     b92:	a8 0e       	add	r10, r24
     b94:	b1 1c       	adc	r11, r1
     b96:	f6 01       	movw	r30, r12
     b98:	60 81       	ld	r22, Z
     b9a:	71 81       	ldd	r23, Z+1	; 0x01
     b9c:	82 81       	ldd	r24, Z+2	; 0x02
     b9e:	93 81       	ldd	r25, Z+3	; 0x03
     ba0:	04 2d       	mov	r16, r4
     ba2:	a3 01       	movw	r20, r6
     ba4:	0e 94 c9 08 	call	0x1192	; 0x1192 <__ftoa_engine>
     ba8:	6c 01       	movw	r12, r24
     baa:	f9 81       	ldd	r31, Y+1	; 0x01
     bac:	fc 87       	std	Y+12, r31	; 0x0c
     bae:	f0 ff       	sbrs	r31, 0
     bb0:	02 c0       	rjmp	.+4      	; 0xbb6 <vfprintf+0x18c>
     bb2:	f3 ff       	sbrs	r31, 3
     bb4:	06 c0       	rjmp	.+12     	; 0xbc2 <vfprintf+0x198>
     bb6:	91 fc       	sbrc	r9, 1
     bb8:	06 c0       	rjmp	.+12     	; 0xbc6 <vfprintf+0x19c>
     bba:	92 fe       	sbrs	r9, 2
     bbc:	06 c0       	rjmp	.+12     	; 0xbca <vfprintf+0x1a0>
     bbe:	00 e2       	ldi	r16, 0x20	; 32
     bc0:	05 c0       	rjmp	.+10     	; 0xbcc <vfprintf+0x1a2>
     bc2:	0d e2       	ldi	r16, 0x2D	; 45
     bc4:	03 c0       	rjmp	.+6      	; 0xbcc <vfprintf+0x1a2>
     bc6:	0b e2       	ldi	r16, 0x2B	; 43
     bc8:	01 c0       	rjmp	.+2      	; 0xbcc <vfprintf+0x1a2>
     bca:	00 e0       	ldi	r16, 0x00	; 0
     bcc:	8c 85       	ldd	r24, Y+12	; 0x0c
     bce:	8c 70       	andi	r24, 0x0C	; 12
     bd0:	19 f0       	breq	.+6      	; 0xbd8 <vfprintf+0x1ae>
     bd2:	01 11       	cpse	r16, r1
     bd4:	5a c2       	rjmp	.+1204   	; 0x108a <vfprintf+0x660>
     bd6:	9b c2       	rjmp	.+1334   	; 0x110e <vfprintf+0x6e4>
     bd8:	97 fe       	sbrs	r9, 7
     bda:	10 c0       	rjmp	.+32     	; 0xbfc <vfprintf+0x1d2>
     bdc:	4c 0c       	add	r4, r12
     bde:	fc 85       	ldd	r31, Y+12	; 0x0c
     be0:	f4 ff       	sbrs	r31, 4
     be2:	04 c0       	rjmp	.+8      	; 0xbec <vfprintf+0x1c2>
     be4:	8a 81       	ldd	r24, Y+2	; 0x02
     be6:	81 33       	cpi	r24, 0x31	; 49
     be8:	09 f4       	brne	.+2      	; 0xbec <vfprintf+0x1c2>
     bea:	4a 94       	dec	r4
     bec:	14 14       	cp	r1, r4
     bee:	74 f5       	brge	.+92     	; 0xc4c <vfprintf+0x222>
     bf0:	28 e0       	ldi	r18, 0x08	; 8
     bf2:	24 15       	cp	r18, r4
     bf4:	78 f5       	brcc	.+94     	; 0xc54 <vfprintf+0x22a>
     bf6:	88 e0       	ldi	r24, 0x08	; 8
     bf8:	48 2e       	mov	r4, r24
     bfa:	2c c0       	rjmp	.+88     	; 0xc54 <vfprintf+0x22a>
     bfc:	96 fc       	sbrc	r9, 6
     bfe:	2a c0       	rjmp	.+84     	; 0xc54 <vfprintf+0x22a>
     c00:	81 2f       	mov	r24, r17
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	8c 15       	cp	r24, r12
     c06:	9d 05       	cpc	r25, r13
     c08:	9c f0       	brlt	.+38     	; 0xc30 <vfprintf+0x206>
     c0a:	3c ef       	ldi	r19, 0xFC	; 252
     c0c:	c3 16       	cp	r12, r19
     c0e:	3f ef       	ldi	r19, 0xFF	; 255
     c10:	d3 06       	cpc	r13, r19
     c12:	74 f0       	brlt	.+28     	; 0xc30 <vfprintf+0x206>
     c14:	89 2d       	mov	r24, r9
     c16:	80 68       	ori	r24, 0x80	; 128
     c18:	98 2e       	mov	r9, r24
     c1a:	0a c0       	rjmp	.+20     	; 0xc30 <vfprintf+0x206>
     c1c:	e2 e0       	ldi	r30, 0x02	; 2
     c1e:	f0 e0       	ldi	r31, 0x00	; 0
     c20:	ec 0f       	add	r30, r28
     c22:	fd 1f       	adc	r31, r29
     c24:	e1 0f       	add	r30, r17
     c26:	f1 1d       	adc	r31, r1
     c28:	80 81       	ld	r24, Z
     c2a:	80 33       	cpi	r24, 0x30	; 48
     c2c:	19 f4       	brne	.+6      	; 0xc34 <vfprintf+0x20a>
     c2e:	11 50       	subi	r17, 0x01	; 1
     c30:	11 11       	cpse	r17, r1
     c32:	f4 cf       	rjmp	.-24     	; 0xc1c <vfprintf+0x1f2>
     c34:	97 fe       	sbrs	r9, 7
     c36:	0e c0       	rjmp	.+28     	; 0xc54 <vfprintf+0x22a>
     c38:	44 24       	eor	r4, r4
     c3a:	43 94       	inc	r4
     c3c:	41 0e       	add	r4, r17
     c3e:	81 2f       	mov	r24, r17
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	c8 16       	cp	r12, r24
     c44:	d9 06       	cpc	r13, r25
     c46:	2c f4       	brge	.+10     	; 0xc52 <vfprintf+0x228>
     c48:	1c 19       	sub	r17, r12
     c4a:	04 c0       	rjmp	.+8      	; 0xc54 <vfprintf+0x22a>
     c4c:	44 24       	eor	r4, r4
     c4e:	43 94       	inc	r4
     c50:	01 c0       	rjmp	.+2      	; 0xc54 <vfprintf+0x22a>
     c52:	10 e0       	ldi	r17, 0x00	; 0
     c54:	97 fe       	sbrs	r9, 7
     c56:	06 c0       	rjmp	.+12     	; 0xc64 <vfprintf+0x23a>
     c58:	1c 14       	cp	r1, r12
     c5a:	1d 04       	cpc	r1, r13
     c5c:	34 f4       	brge	.+12     	; 0xc6a <vfprintf+0x240>
     c5e:	c6 01       	movw	r24, r12
     c60:	01 96       	adiw	r24, 0x01	; 1
     c62:	05 c0       	rjmp	.+10     	; 0xc6e <vfprintf+0x244>
     c64:	85 e0       	ldi	r24, 0x05	; 5
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	02 c0       	rjmp	.+4      	; 0xc6e <vfprintf+0x244>
     c6a:	81 e0       	ldi	r24, 0x01	; 1
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	01 11       	cpse	r16, r1
     c70:	01 96       	adiw	r24, 0x01	; 1
     c72:	11 23       	and	r17, r17
     c74:	31 f0       	breq	.+12     	; 0xc82 <vfprintf+0x258>
     c76:	21 2f       	mov	r18, r17
     c78:	30 e0       	ldi	r19, 0x00	; 0
     c7a:	2f 5f       	subi	r18, 0xFF	; 255
     c7c:	3f 4f       	sbci	r19, 0xFF	; 255
     c7e:	82 0f       	add	r24, r18
     c80:	93 1f       	adc	r25, r19
     c82:	25 2d       	mov	r18, r5
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	82 17       	cp	r24, r18
     c88:	93 07       	cpc	r25, r19
     c8a:	14 f4       	brge	.+4      	; 0xc90 <vfprintf+0x266>
     c8c:	58 1a       	sub	r5, r24
     c8e:	01 c0       	rjmp	.+2      	; 0xc92 <vfprintf+0x268>
     c90:	51 2c       	mov	r5, r1
     c92:	89 2d       	mov	r24, r9
     c94:	89 70       	andi	r24, 0x09	; 9
     c96:	49 f4       	brne	.+18     	; 0xcaa <vfprintf+0x280>
     c98:	55 20       	and	r5, r5
     c9a:	39 f0       	breq	.+14     	; 0xcaa <vfprintf+0x280>
     c9c:	b7 01       	movw	r22, r14
     c9e:	80 e2       	ldi	r24, 0x20	; 32
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     ca6:	5a 94       	dec	r5
     ca8:	f7 cf       	rjmp	.-18     	; 0xc98 <vfprintf+0x26e>
     caa:	00 23       	and	r16, r16
     cac:	29 f0       	breq	.+10     	; 0xcb8 <vfprintf+0x28e>
     cae:	b7 01       	movw	r22, r14
     cb0:	80 2f       	mov	r24, r16
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     cb8:	93 fc       	sbrc	r9, 3
     cba:	09 c0       	rjmp	.+18     	; 0xcce <vfprintf+0x2a4>
     cbc:	55 20       	and	r5, r5
     cbe:	39 f0       	breq	.+14     	; 0xcce <vfprintf+0x2a4>
     cc0:	b7 01       	movw	r22, r14
     cc2:	80 e3       	ldi	r24, 0x30	; 48
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     cca:	5a 94       	dec	r5
     ccc:	f7 cf       	rjmp	.-18     	; 0xcbc <vfprintf+0x292>
     cce:	97 fe       	sbrs	r9, 7
     cd0:	4c c0       	rjmp	.+152    	; 0xd6a <vfprintf+0x340>
     cd2:	46 01       	movw	r8, r12
     cd4:	d7 fe       	sbrs	r13, 7
     cd6:	02 c0       	rjmp	.+4      	; 0xcdc <vfprintf+0x2b2>
     cd8:	81 2c       	mov	r8, r1
     cda:	91 2c       	mov	r9, r1
     cdc:	c6 01       	movw	r24, r12
     cde:	88 19       	sub	r24, r8
     ce0:	99 09       	sbc	r25, r9
     ce2:	f3 01       	movw	r30, r6
     ce4:	e8 0f       	add	r30, r24
     ce6:	f9 1f       	adc	r31, r25
     ce8:	fe 87       	std	Y+14, r31	; 0x0e
     cea:	ed 87       	std	Y+13, r30	; 0x0d
     cec:	96 01       	movw	r18, r12
     cee:	24 19       	sub	r18, r4
     cf0:	31 09       	sbc	r19, r1
     cf2:	38 8b       	std	Y+16, r19	; 0x10
     cf4:	2f 87       	std	Y+15, r18	; 0x0f
     cf6:	01 2f       	mov	r16, r17
     cf8:	10 e0       	ldi	r17, 0x00	; 0
     cfa:	11 95       	neg	r17
     cfc:	01 95       	neg	r16
     cfe:	11 09       	sbc	r17, r1
     d00:	3f ef       	ldi	r19, 0xFF	; 255
     d02:	83 16       	cp	r8, r19
     d04:	93 06       	cpc	r9, r19
     d06:	29 f4       	brne	.+10     	; 0xd12 <vfprintf+0x2e8>
     d08:	b7 01       	movw	r22, r14
     d0a:	8e e2       	ldi	r24, 0x2E	; 46
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     d12:	c8 14       	cp	r12, r8
     d14:	d9 04       	cpc	r13, r9
     d16:	4c f0       	brlt	.+18     	; 0xd2a <vfprintf+0x300>
     d18:	8f 85       	ldd	r24, Y+15	; 0x0f
     d1a:	98 89       	ldd	r25, Y+16	; 0x10
     d1c:	88 15       	cp	r24, r8
     d1e:	99 05       	cpc	r25, r9
     d20:	24 f4       	brge	.+8      	; 0xd2a <vfprintf+0x300>
     d22:	ed 85       	ldd	r30, Y+13	; 0x0d
     d24:	fe 85       	ldd	r31, Y+14	; 0x0e
     d26:	81 81       	ldd	r24, Z+1	; 0x01
     d28:	01 c0       	rjmp	.+2      	; 0xd2c <vfprintf+0x302>
     d2a:	80 e3       	ldi	r24, 0x30	; 48
     d2c:	f1 e0       	ldi	r31, 0x01	; 1
     d2e:	8f 1a       	sub	r8, r31
     d30:	91 08       	sbc	r9, r1
     d32:	2d 85       	ldd	r18, Y+13	; 0x0d
     d34:	3e 85       	ldd	r19, Y+14	; 0x0e
     d36:	2f 5f       	subi	r18, 0xFF	; 255
     d38:	3f 4f       	sbci	r19, 0xFF	; 255
     d3a:	3e 87       	std	Y+14, r19	; 0x0e
     d3c:	2d 87       	std	Y+13, r18	; 0x0d
     d3e:	80 16       	cp	r8, r16
     d40:	91 06       	cpc	r9, r17
     d42:	2c f0       	brlt	.+10     	; 0xd4e <vfprintf+0x324>
     d44:	b7 01       	movw	r22, r14
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     d4c:	d9 cf       	rjmp	.-78     	; 0xd00 <vfprintf+0x2d6>
     d4e:	c8 14       	cp	r12, r8
     d50:	d9 04       	cpc	r13, r9
     d52:	41 f4       	brne	.+16     	; 0xd64 <vfprintf+0x33a>
     d54:	9a 81       	ldd	r25, Y+2	; 0x02
     d56:	96 33       	cpi	r25, 0x36	; 54
     d58:	20 f4       	brcc	.+8      	; 0xd62 <vfprintf+0x338>
     d5a:	95 33       	cpi	r25, 0x35	; 53
     d5c:	19 f4       	brne	.+6      	; 0xd64 <vfprintf+0x33a>
     d5e:	3c 85       	ldd	r19, Y+12	; 0x0c
     d60:	34 ff       	sbrs	r19, 4
     d62:	81 e3       	ldi	r24, 0x31	; 49
     d64:	b7 01       	movw	r22, r14
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	4e c0       	rjmp	.+156    	; 0xe06 <vfprintf+0x3dc>
     d6a:	8a 81       	ldd	r24, Y+2	; 0x02
     d6c:	81 33       	cpi	r24, 0x31	; 49
     d6e:	19 f0       	breq	.+6      	; 0xd76 <vfprintf+0x34c>
     d70:	9c 85       	ldd	r25, Y+12	; 0x0c
     d72:	9f 7e       	andi	r25, 0xEF	; 239
     d74:	9c 87       	std	Y+12, r25	; 0x0c
     d76:	b7 01       	movw	r22, r14
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     d7e:	11 11       	cpse	r17, r1
     d80:	05 c0       	rjmp	.+10     	; 0xd8c <vfprintf+0x362>
     d82:	94 fc       	sbrc	r9, 4
     d84:	18 c0       	rjmp	.+48     	; 0xdb6 <vfprintf+0x38c>
     d86:	85 e6       	ldi	r24, 0x65	; 101
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	17 c0       	rjmp	.+46     	; 0xdba <vfprintf+0x390>
     d8c:	b7 01       	movw	r22, r14
     d8e:	8e e2       	ldi	r24, 0x2E	; 46
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     d96:	1e 5f       	subi	r17, 0xFE	; 254
     d98:	82 e0       	ldi	r24, 0x02	; 2
     d9a:	01 e0       	ldi	r16, 0x01	; 1
     d9c:	08 0f       	add	r16, r24
     d9e:	f3 01       	movw	r30, r6
     da0:	e8 0f       	add	r30, r24
     da2:	f1 1d       	adc	r31, r1
     da4:	80 81       	ld	r24, Z
     da6:	b7 01       	movw	r22, r14
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     dae:	80 2f       	mov	r24, r16
     db0:	01 13       	cpse	r16, r17
     db2:	f3 cf       	rjmp	.-26     	; 0xd9a <vfprintf+0x370>
     db4:	e6 cf       	rjmp	.-52     	; 0xd82 <vfprintf+0x358>
     db6:	85 e4       	ldi	r24, 0x45	; 69
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	b7 01       	movw	r22, r14
     dbc:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     dc0:	d7 fc       	sbrc	r13, 7
     dc2:	06 c0       	rjmp	.+12     	; 0xdd0 <vfprintf+0x3a6>
     dc4:	c1 14       	cp	r12, r1
     dc6:	d1 04       	cpc	r13, r1
     dc8:	41 f4       	brne	.+16     	; 0xdda <vfprintf+0x3b0>
     dca:	ec 85       	ldd	r30, Y+12	; 0x0c
     dcc:	e4 ff       	sbrs	r30, 4
     dce:	05 c0       	rjmp	.+10     	; 0xdda <vfprintf+0x3b0>
     dd0:	d1 94       	neg	r13
     dd2:	c1 94       	neg	r12
     dd4:	d1 08       	sbc	r13, r1
     dd6:	8d e2       	ldi	r24, 0x2D	; 45
     dd8:	01 c0       	rjmp	.+2      	; 0xddc <vfprintf+0x3b2>
     dda:	8b e2       	ldi	r24, 0x2B	; 43
     ddc:	b7 01       	movw	r22, r14
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     de4:	80 e3       	ldi	r24, 0x30	; 48
     de6:	2a e0       	ldi	r18, 0x0A	; 10
     de8:	c2 16       	cp	r12, r18
     dea:	d1 04       	cpc	r13, r1
     dec:	2c f0       	brlt	.+10     	; 0xdf8 <vfprintf+0x3ce>
     dee:	8f 5f       	subi	r24, 0xFF	; 255
     df0:	fa e0       	ldi	r31, 0x0A	; 10
     df2:	cf 1a       	sub	r12, r31
     df4:	d1 08       	sbc	r13, r1
     df6:	f7 cf       	rjmp	.-18     	; 0xde6 <vfprintf+0x3bc>
     df8:	b7 01       	movw	r22, r14
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     e00:	b7 01       	movw	r22, r14
     e02:	c6 01       	movw	r24, r12
     e04:	c0 96       	adiw	r24, 0x30	; 48
     e06:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     e0a:	54 c1       	rjmp	.+680    	; 0x10b4 <vfprintf+0x68a>
     e0c:	83 36       	cpi	r24, 0x63	; 99
     e0e:	31 f0       	breq	.+12     	; 0xe1c <vfprintf+0x3f2>
     e10:	83 37       	cpi	r24, 0x73	; 115
     e12:	79 f0       	breq	.+30     	; 0xe32 <vfprintf+0x408>
     e14:	83 35       	cpi	r24, 0x53	; 83
     e16:	09 f0       	breq	.+2      	; 0xe1a <vfprintf+0x3f0>
     e18:	56 c0       	rjmp	.+172    	; 0xec6 <vfprintf+0x49c>
     e1a:	20 c0       	rjmp	.+64     	; 0xe5c <vfprintf+0x432>
     e1c:	56 01       	movw	r10, r12
     e1e:	32 e0       	ldi	r19, 0x02	; 2
     e20:	a3 0e       	add	r10, r19
     e22:	b1 1c       	adc	r11, r1
     e24:	f6 01       	movw	r30, r12
     e26:	80 81       	ld	r24, Z
     e28:	89 83       	std	Y+1, r24	; 0x01
     e2a:	01 e0       	ldi	r16, 0x01	; 1
     e2c:	10 e0       	ldi	r17, 0x00	; 0
     e2e:	63 01       	movw	r12, r6
     e30:	12 c0       	rjmp	.+36     	; 0xe56 <vfprintf+0x42c>
     e32:	56 01       	movw	r10, r12
     e34:	f2 e0       	ldi	r31, 0x02	; 2
     e36:	af 0e       	add	r10, r31
     e38:	b1 1c       	adc	r11, r1
     e3a:	f6 01       	movw	r30, r12
     e3c:	c0 80       	ld	r12, Z
     e3e:	d1 80       	ldd	r13, Z+1	; 0x01
     e40:	96 fe       	sbrs	r9, 6
     e42:	03 c0       	rjmp	.+6      	; 0xe4a <vfprintf+0x420>
     e44:	61 2f       	mov	r22, r17
     e46:	70 e0       	ldi	r23, 0x00	; 0
     e48:	02 c0       	rjmp	.+4      	; 0xe4e <vfprintf+0x424>
     e4a:	6f ef       	ldi	r22, 0xFF	; 255
     e4c:	7f ef       	ldi	r23, 0xFF	; 255
     e4e:	c6 01       	movw	r24, r12
     e50:	0e 94 ac 09 	call	0x1358	; 0x1358 <strnlen>
     e54:	8c 01       	movw	r16, r24
     e56:	f9 2d       	mov	r31, r9
     e58:	ff 77       	andi	r31, 0x7F	; 127
     e5a:	14 c0       	rjmp	.+40     	; 0xe84 <vfprintf+0x45a>
     e5c:	56 01       	movw	r10, r12
     e5e:	22 e0       	ldi	r18, 0x02	; 2
     e60:	a2 0e       	add	r10, r18
     e62:	b1 1c       	adc	r11, r1
     e64:	f6 01       	movw	r30, r12
     e66:	c0 80       	ld	r12, Z
     e68:	d1 80       	ldd	r13, Z+1	; 0x01
     e6a:	96 fe       	sbrs	r9, 6
     e6c:	03 c0       	rjmp	.+6      	; 0xe74 <vfprintf+0x44a>
     e6e:	61 2f       	mov	r22, r17
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <vfprintf+0x44e>
     e74:	6f ef       	ldi	r22, 0xFF	; 255
     e76:	7f ef       	ldi	r23, 0xFF	; 255
     e78:	c6 01       	movw	r24, r12
     e7a:	0e 94 a1 09 	call	0x1342	; 0x1342 <strnlen_P>
     e7e:	8c 01       	movw	r16, r24
     e80:	f9 2d       	mov	r31, r9
     e82:	f0 68       	ori	r31, 0x80	; 128
     e84:	9f 2e       	mov	r9, r31
     e86:	f3 fd       	sbrc	r31, 3
     e88:	1a c0       	rjmp	.+52     	; 0xebe <vfprintf+0x494>
     e8a:	85 2d       	mov	r24, r5
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	08 17       	cp	r16, r24
     e90:	19 07       	cpc	r17, r25
     e92:	a8 f4       	brcc	.+42     	; 0xebe <vfprintf+0x494>
     e94:	b7 01       	movw	r22, r14
     e96:	80 e2       	ldi	r24, 0x20	; 32
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     e9e:	5a 94       	dec	r5
     ea0:	f4 cf       	rjmp	.-24     	; 0xe8a <vfprintf+0x460>
     ea2:	f6 01       	movw	r30, r12
     ea4:	97 fc       	sbrc	r9, 7
     ea6:	85 91       	lpm	r24, Z+
     ea8:	97 fe       	sbrs	r9, 7
     eaa:	81 91       	ld	r24, Z+
     eac:	6f 01       	movw	r12, r30
     eae:	b7 01       	movw	r22, r14
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
     eb6:	51 10       	cpse	r5, r1
     eb8:	5a 94       	dec	r5
     eba:	01 50       	subi	r16, 0x01	; 1
     ebc:	11 09       	sbc	r17, r1
     ebe:	01 15       	cp	r16, r1
     ec0:	11 05       	cpc	r17, r1
     ec2:	79 f7       	brne	.-34     	; 0xea2 <vfprintf+0x478>
     ec4:	f7 c0       	rjmp	.+494    	; 0x10b4 <vfprintf+0x68a>
     ec6:	84 36       	cpi	r24, 0x64	; 100
     ec8:	11 f0       	breq	.+4      	; 0xece <vfprintf+0x4a4>
     eca:	89 36       	cpi	r24, 0x69	; 105
     ecc:	61 f5       	brne	.+88     	; 0xf26 <vfprintf+0x4fc>
     ece:	56 01       	movw	r10, r12
     ed0:	97 fe       	sbrs	r9, 7
     ed2:	09 c0       	rjmp	.+18     	; 0xee6 <vfprintf+0x4bc>
     ed4:	24 e0       	ldi	r18, 0x04	; 4
     ed6:	a2 0e       	add	r10, r18
     ed8:	b1 1c       	adc	r11, r1
     eda:	f6 01       	movw	r30, r12
     edc:	60 81       	ld	r22, Z
     ede:	71 81       	ldd	r23, Z+1	; 0x01
     ee0:	82 81       	ldd	r24, Z+2	; 0x02
     ee2:	93 81       	ldd	r25, Z+3	; 0x03
     ee4:	0a c0       	rjmp	.+20     	; 0xefa <vfprintf+0x4d0>
     ee6:	f2 e0       	ldi	r31, 0x02	; 2
     ee8:	af 0e       	add	r10, r31
     eea:	b1 1c       	adc	r11, r1
     eec:	f6 01       	movw	r30, r12
     eee:	60 81       	ld	r22, Z
     ef0:	71 81       	ldd	r23, Z+1	; 0x01
     ef2:	07 2e       	mov	r0, r23
     ef4:	00 0c       	add	r0, r0
     ef6:	88 0b       	sbc	r24, r24
     ef8:	99 0b       	sbc	r25, r25
     efa:	f9 2d       	mov	r31, r9
     efc:	ff 76       	andi	r31, 0x6F	; 111
     efe:	9f 2e       	mov	r9, r31
     f00:	97 ff       	sbrs	r25, 7
     f02:	09 c0       	rjmp	.+18     	; 0xf16 <vfprintf+0x4ec>
     f04:	90 95       	com	r25
     f06:	80 95       	com	r24
     f08:	70 95       	com	r23
     f0a:	61 95       	neg	r22
     f0c:	7f 4f       	sbci	r23, 0xFF	; 255
     f0e:	8f 4f       	sbci	r24, 0xFF	; 255
     f10:	9f 4f       	sbci	r25, 0xFF	; 255
     f12:	f0 68       	ori	r31, 0x80	; 128
     f14:	9f 2e       	mov	r9, r31
     f16:	2a e0       	ldi	r18, 0x0A	; 10
     f18:	30 e0       	ldi	r19, 0x00	; 0
     f1a:	a3 01       	movw	r20, r6
     f1c:	0e 94 10 0a 	call	0x1420	; 0x1420 <__ultoa_invert>
     f20:	c8 2e       	mov	r12, r24
     f22:	c6 18       	sub	r12, r6
     f24:	3f c0       	rjmp	.+126    	; 0xfa4 <vfprintf+0x57a>
     f26:	09 2d       	mov	r16, r9
     f28:	85 37       	cpi	r24, 0x75	; 117
     f2a:	21 f4       	brne	.+8      	; 0xf34 <vfprintf+0x50a>
     f2c:	0f 7e       	andi	r16, 0xEF	; 239
     f2e:	2a e0       	ldi	r18, 0x0A	; 10
     f30:	30 e0       	ldi	r19, 0x00	; 0
     f32:	1d c0       	rjmp	.+58     	; 0xf6e <vfprintf+0x544>
     f34:	09 7f       	andi	r16, 0xF9	; 249
     f36:	8f 36       	cpi	r24, 0x6F	; 111
     f38:	91 f0       	breq	.+36     	; 0xf5e <vfprintf+0x534>
     f3a:	18 f4       	brcc	.+6      	; 0xf42 <vfprintf+0x518>
     f3c:	88 35       	cpi	r24, 0x58	; 88
     f3e:	59 f0       	breq	.+22     	; 0xf56 <vfprintf+0x52c>
     f40:	c3 c0       	rjmp	.+390    	; 0x10c8 <vfprintf+0x69e>
     f42:	80 37       	cpi	r24, 0x70	; 112
     f44:	19 f0       	breq	.+6      	; 0xf4c <vfprintf+0x522>
     f46:	88 37       	cpi	r24, 0x78	; 120
     f48:	11 f0       	breq	.+4      	; 0xf4e <vfprintf+0x524>
     f4a:	be c0       	rjmp	.+380    	; 0x10c8 <vfprintf+0x69e>
     f4c:	00 61       	ori	r16, 0x10	; 16
     f4e:	04 ff       	sbrs	r16, 4
     f50:	09 c0       	rjmp	.+18     	; 0xf64 <vfprintf+0x53a>
     f52:	04 60       	ori	r16, 0x04	; 4
     f54:	07 c0       	rjmp	.+14     	; 0xf64 <vfprintf+0x53a>
     f56:	94 fe       	sbrs	r9, 4
     f58:	08 c0       	rjmp	.+16     	; 0xf6a <vfprintf+0x540>
     f5a:	06 60       	ori	r16, 0x06	; 6
     f5c:	06 c0       	rjmp	.+12     	; 0xf6a <vfprintf+0x540>
     f5e:	28 e0       	ldi	r18, 0x08	; 8
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	05 c0       	rjmp	.+10     	; 0xf6e <vfprintf+0x544>
     f64:	20 e1       	ldi	r18, 0x10	; 16
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	02 c0       	rjmp	.+4      	; 0xf6e <vfprintf+0x544>
     f6a:	20 e1       	ldi	r18, 0x10	; 16
     f6c:	32 e0       	ldi	r19, 0x02	; 2
     f6e:	56 01       	movw	r10, r12
     f70:	07 ff       	sbrs	r16, 7
     f72:	09 c0       	rjmp	.+18     	; 0xf86 <vfprintf+0x55c>
     f74:	84 e0       	ldi	r24, 0x04	; 4
     f76:	a8 0e       	add	r10, r24
     f78:	b1 1c       	adc	r11, r1
     f7a:	f6 01       	movw	r30, r12
     f7c:	60 81       	ld	r22, Z
     f7e:	71 81       	ldd	r23, Z+1	; 0x01
     f80:	82 81       	ldd	r24, Z+2	; 0x02
     f82:	93 81       	ldd	r25, Z+3	; 0x03
     f84:	08 c0       	rjmp	.+16     	; 0xf96 <vfprintf+0x56c>
     f86:	f2 e0       	ldi	r31, 0x02	; 2
     f88:	af 0e       	add	r10, r31
     f8a:	b1 1c       	adc	r11, r1
     f8c:	f6 01       	movw	r30, r12
     f8e:	60 81       	ld	r22, Z
     f90:	71 81       	ldd	r23, Z+1	; 0x01
     f92:	80 e0       	ldi	r24, 0x00	; 0
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	a3 01       	movw	r20, r6
     f98:	0e 94 10 0a 	call	0x1420	; 0x1420 <__ultoa_invert>
     f9c:	c8 2e       	mov	r12, r24
     f9e:	c6 18       	sub	r12, r6
     fa0:	0f 77       	andi	r16, 0x7F	; 127
     fa2:	90 2e       	mov	r9, r16
     fa4:	96 fe       	sbrs	r9, 6
     fa6:	0b c0       	rjmp	.+22     	; 0xfbe <vfprintf+0x594>
     fa8:	09 2d       	mov	r16, r9
     faa:	0e 7f       	andi	r16, 0xFE	; 254
     fac:	c1 16       	cp	r12, r17
     fae:	50 f4       	brcc	.+20     	; 0xfc4 <vfprintf+0x59a>
     fb0:	94 fe       	sbrs	r9, 4
     fb2:	0a c0       	rjmp	.+20     	; 0xfc8 <vfprintf+0x59e>
     fb4:	92 fc       	sbrc	r9, 2
     fb6:	08 c0       	rjmp	.+16     	; 0xfc8 <vfprintf+0x59e>
     fb8:	09 2d       	mov	r16, r9
     fba:	0e 7e       	andi	r16, 0xEE	; 238
     fbc:	05 c0       	rjmp	.+10     	; 0xfc8 <vfprintf+0x59e>
     fbe:	dc 2c       	mov	r13, r12
     fc0:	09 2d       	mov	r16, r9
     fc2:	03 c0       	rjmp	.+6      	; 0xfca <vfprintf+0x5a0>
     fc4:	dc 2c       	mov	r13, r12
     fc6:	01 c0       	rjmp	.+2      	; 0xfca <vfprintf+0x5a0>
     fc8:	d1 2e       	mov	r13, r17
     fca:	04 ff       	sbrs	r16, 4
     fcc:	0d c0       	rjmp	.+26     	; 0xfe8 <vfprintf+0x5be>
     fce:	fe 01       	movw	r30, r28
     fd0:	ec 0d       	add	r30, r12
     fd2:	f1 1d       	adc	r31, r1
     fd4:	80 81       	ld	r24, Z
     fd6:	80 33       	cpi	r24, 0x30	; 48
     fd8:	11 f4       	brne	.+4      	; 0xfde <vfprintf+0x5b4>
     fda:	09 7e       	andi	r16, 0xE9	; 233
     fdc:	09 c0       	rjmp	.+18     	; 0xff0 <vfprintf+0x5c6>
     fde:	02 ff       	sbrs	r16, 2
     fe0:	06 c0       	rjmp	.+12     	; 0xfee <vfprintf+0x5c4>
     fe2:	d3 94       	inc	r13
     fe4:	d3 94       	inc	r13
     fe6:	04 c0       	rjmp	.+8      	; 0xff0 <vfprintf+0x5c6>
     fe8:	80 2f       	mov	r24, r16
     fea:	86 78       	andi	r24, 0x86	; 134
     fec:	09 f0       	breq	.+2      	; 0xff0 <vfprintf+0x5c6>
     fee:	d3 94       	inc	r13
     ff0:	03 fd       	sbrc	r16, 3
     ff2:	11 c0       	rjmp	.+34     	; 0x1016 <vfprintf+0x5ec>
     ff4:	00 ff       	sbrs	r16, 0
     ff6:	06 c0       	rjmp	.+12     	; 0x1004 <vfprintf+0x5da>
     ff8:	1c 2d       	mov	r17, r12
     ffa:	d5 14       	cp	r13, r5
     ffc:	80 f4       	brcc	.+32     	; 0x101e <vfprintf+0x5f4>
     ffe:	15 0d       	add	r17, r5
    1000:	1d 19       	sub	r17, r13
    1002:	0d c0       	rjmp	.+26     	; 0x101e <vfprintf+0x5f4>
    1004:	d5 14       	cp	r13, r5
    1006:	58 f4       	brcc	.+22     	; 0x101e <vfprintf+0x5f4>
    1008:	b7 01       	movw	r22, r14
    100a:	80 e2       	ldi	r24, 0x20	; 32
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
    1012:	d3 94       	inc	r13
    1014:	f7 cf       	rjmp	.-18     	; 0x1004 <vfprintf+0x5da>
    1016:	d5 14       	cp	r13, r5
    1018:	10 f4       	brcc	.+4      	; 0x101e <vfprintf+0x5f4>
    101a:	5d 18       	sub	r5, r13
    101c:	01 c0       	rjmp	.+2      	; 0x1020 <vfprintf+0x5f6>
    101e:	51 2c       	mov	r5, r1
    1020:	04 ff       	sbrs	r16, 4
    1022:	10 c0       	rjmp	.+32     	; 0x1044 <vfprintf+0x61a>
    1024:	b7 01       	movw	r22, r14
    1026:	80 e3       	ldi	r24, 0x30	; 48
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
    102e:	02 ff       	sbrs	r16, 2
    1030:	17 c0       	rjmp	.+46     	; 0x1060 <vfprintf+0x636>
    1032:	01 fd       	sbrc	r16, 1
    1034:	03 c0       	rjmp	.+6      	; 0x103c <vfprintf+0x612>
    1036:	88 e7       	ldi	r24, 0x78	; 120
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	02 c0       	rjmp	.+4      	; 0x1040 <vfprintf+0x616>
    103c:	88 e5       	ldi	r24, 0x58	; 88
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	b7 01       	movw	r22, r14
    1042:	0c c0       	rjmp	.+24     	; 0x105c <vfprintf+0x632>
    1044:	80 2f       	mov	r24, r16
    1046:	86 78       	andi	r24, 0x86	; 134
    1048:	59 f0       	breq	.+22     	; 0x1060 <vfprintf+0x636>
    104a:	01 ff       	sbrs	r16, 1
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <vfprintf+0x628>
    104e:	8b e2       	ldi	r24, 0x2B	; 43
    1050:	01 c0       	rjmp	.+2      	; 0x1054 <vfprintf+0x62a>
    1052:	80 e2       	ldi	r24, 0x20	; 32
    1054:	07 fd       	sbrc	r16, 7
    1056:	8d e2       	ldi	r24, 0x2D	; 45
    1058:	b7 01       	movw	r22, r14
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
    1060:	c1 16       	cp	r12, r17
    1062:	38 f4       	brcc	.+14     	; 0x1072 <vfprintf+0x648>
    1064:	b7 01       	movw	r22, r14
    1066:	80 e3       	ldi	r24, 0x30	; 48
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
    106e:	11 50       	subi	r17, 0x01	; 1
    1070:	f7 cf       	rjmp	.-18     	; 0x1060 <vfprintf+0x636>
    1072:	ca 94       	dec	r12
    1074:	f3 01       	movw	r30, r6
    1076:	ec 0d       	add	r30, r12
    1078:	f1 1d       	adc	r31, r1
    107a:	80 81       	ld	r24, Z
    107c:	b7 01       	movw	r22, r14
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
    1084:	c1 10       	cpse	r12, r1
    1086:	f5 cf       	rjmp	.-22     	; 0x1072 <vfprintf+0x648>
    1088:	15 c0       	rjmp	.+42     	; 0x10b4 <vfprintf+0x68a>
    108a:	f4 e0       	ldi	r31, 0x04	; 4
    108c:	f5 15       	cp	r31, r5
    108e:	60 f5       	brcc	.+88     	; 0x10e8 <vfprintf+0x6be>
    1090:	84 e0       	ldi	r24, 0x04	; 4
    1092:	58 1a       	sub	r5, r24
    1094:	93 fe       	sbrs	r9, 3
    1096:	1f c0       	rjmp	.+62     	; 0x10d6 <vfprintf+0x6ac>
    1098:	01 11       	cpse	r16, r1
    109a:	27 c0       	rjmp	.+78     	; 0x10ea <vfprintf+0x6c0>
    109c:	2c 85       	ldd	r18, Y+12	; 0x0c
    109e:	23 ff       	sbrs	r18, 3
    10a0:	2a c0       	rjmp	.+84     	; 0x10f6 <vfprintf+0x6cc>
    10a2:	08 e6       	ldi	r16, 0x68	; 104
    10a4:	10 e0       	ldi	r17, 0x00	; 0
    10a6:	39 2d       	mov	r19, r9
    10a8:	30 71       	andi	r19, 0x10	; 16
    10aa:	93 2e       	mov	r9, r19
    10ac:	f8 01       	movw	r30, r16
    10ae:	84 91       	lpm	r24, Z
    10b0:	81 11       	cpse	r24, r1
    10b2:	24 c0       	rjmp	.+72     	; 0x10fc <vfprintf+0x6d2>
    10b4:	55 20       	and	r5, r5
    10b6:	09 f4       	brne	.+2      	; 0x10ba <vfprintf+0x690>
    10b8:	e4 cc       	rjmp	.-1592   	; 0xa82 <vfprintf+0x58>
    10ba:	b7 01       	movw	r22, r14
    10bc:	80 e2       	ldi	r24, 0x20	; 32
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
    10c4:	5a 94       	dec	r5
    10c6:	f6 cf       	rjmp	.-20     	; 0x10b4 <vfprintf+0x68a>
    10c8:	f7 01       	movw	r30, r14
    10ca:	86 81       	ldd	r24, Z+6	; 0x06
    10cc:	97 81       	ldd	r25, Z+7	; 0x07
    10ce:	26 c0       	rjmp	.+76     	; 0x111c <vfprintf+0x6f2>
    10d0:	8f ef       	ldi	r24, 0xFF	; 255
    10d2:	9f ef       	ldi	r25, 0xFF	; 255
    10d4:	23 c0       	rjmp	.+70     	; 0x111c <vfprintf+0x6f2>
    10d6:	b7 01       	movw	r22, r14
    10d8:	80 e2       	ldi	r24, 0x20	; 32
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
    10e0:	5a 94       	dec	r5
    10e2:	51 10       	cpse	r5, r1
    10e4:	f8 cf       	rjmp	.-16     	; 0x10d6 <vfprintf+0x6ac>
    10e6:	d8 cf       	rjmp	.-80     	; 0x1098 <vfprintf+0x66e>
    10e8:	51 2c       	mov	r5, r1
    10ea:	b7 01       	movw	r22, r14
    10ec:	80 2f       	mov	r24, r16
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
    10f4:	d3 cf       	rjmp	.-90     	; 0x109c <vfprintf+0x672>
    10f6:	0c e6       	ldi	r16, 0x6C	; 108
    10f8:	10 e0       	ldi	r17, 0x00	; 0
    10fa:	d5 cf       	rjmp	.-86     	; 0x10a6 <vfprintf+0x67c>
    10fc:	91 10       	cpse	r9, r1
    10fe:	80 52       	subi	r24, 0x20	; 32
    1100:	b7 01       	movw	r22, r14
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
    1108:	0f 5f       	subi	r16, 0xFF	; 255
    110a:	1f 4f       	sbci	r17, 0xFF	; 255
    110c:	cf cf       	rjmp	.-98     	; 0x10ac <vfprintf+0x682>
    110e:	23 e0       	ldi	r18, 0x03	; 3
    1110:	25 15       	cp	r18, r5
    1112:	10 f4       	brcc	.+4      	; 0x1118 <vfprintf+0x6ee>
    1114:	83 e0       	ldi	r24, 0x03	; 3
    1116:	bd cf       	rjmp	.-134    	; 0x1092 <vfprintf+0x668>
    1118:	51 2c       	mov	r5, r1
    111a:	c0 cf       	rjmp	.-128    	; 0x109c <vfprintf+0x672>
    111c:	60 96       	adiw	r28, 0x10	; 16
    111e:	e2 e1       	ldi	r30, 0x12	; 18
    1120:	0c 94 ae 08 	jmp	0x115c	; 0x115c <__epilogue_restores__>

00001124 <__prologue_saves__>:
    1124:	2f 92       	push	r2
    1126:	3f 92       	push	r3
    1128:	4f 92       	push	r4
    112a:	5f 92       	push	r5
    112c:	6f 92       	push	r6
    112e:	7f 92       	push	r7
    1130:	8f 92       	push	r8
    1132:	9f 92       	push	r9
    1134:	af 92       	push	r10
    1136:	bf 92       	push	r11
    1138:	cf 92       	push	r12
    113a:	df 92       	push	r13
    113c:	ef 92       	push	r14
    113e:	ff 92       	push	r15
    1140:	0f 93       	push	r16
    1142:	1f 93       	push	r17
    1144:	cf 93       	push	r28
    1146:	df 93       	push	r29
    1148:	cd b7       	in	r28, 0x3d	; 61
    114a:	de b7       	in	r29, 0x3e	; 62
    114c:	ca 1b       	sub	r28, r26
    114e:	db 0b       	sbc	r29, r27
    1150:	0f b6       	in	r0, 0x3f	; 63
    1152:	f8 94       	cli
    1154:	de bf       	out	0x3e, r29	; 62
    1156:	0f be       	out	0x3f, r0	; 63
    1158:	cd bf       	out	0x3d, r28	; 61
    115a:	09 94       	ijmp

0000115c <__epilogue_restores__>:
    115c:	2a 88       	ldd	r2, Y+18	; 0x12
    115e:	39 88       	ldd	r3, Y+17	; 0x11
    1160:	48 88       	ldd	r4, Y+16	; 0x10
    1162:	5f 84       	ldd	r5, Y+15	; 0x0f
    1164:	6e 84       	ldd	r6, Y+14	; 0x0e
    1166:	7d 84       	ldd	r7, Y+13	; 0x0d
    1168:	8c 84       	ldd	r8, Y+12	; 0x0c
    116a:	9b 84       	ldd	r9, Y+11	; 0x0b
    116c:	aa 84       	ldd	r10, Y+10	; 0x0a
    116e:	b9 84       	ldd	r11, Y+9	; 0x09
    1170:	c8 84       	ldd	r12, Y+8	; 0x08
    1172:	df 80       	ldd	r13, Y+7	; 0x07
    1174:	ee 80       	ldd	r14, Y+6	; 0x06
    1176:	fd 80       	ldd	r15, Y+5	; 0x05
    1178:	0c 81       	ldd	r16, Y+4	; 0x04
    117a:	1b 81       	ldd	r17, Y+3	; 0x03
    117c:	aa 81       	ldd	r26, Y+2	; 0x02
    117e:	b9 81       	ldd	r27, Y+1	; 0x01
    1180:	ce 0f       	add	r28, r30
    1182:	d1 1d       	adc	r29, r1
    1184:	0f b6       	in	r0, 0x3f	; 63
    1186:	f8 94       	cli
    1188:	de bf       	out	0x3e, r29	; 62
    118a:	0f be       	out	0x3f, r0	; 63
    118c:	cd bf       	out	0x3d, r28	; 61
    118e:	ed 01       	movw	r28, r26
    1190:	08 95       	ret

00001192 <__ftoa_engine>:
    1192:	28 30       	cpi	r18, 0x08	; 8
    1194:	08 f0       	brcs	.+2      	; 0x1198 <__ftoa_engine+0x6>
    1196:	27 e0       	ldi	r18, 0x07	; 7
    1198:	33 27       	eor	r19, r19
    119a:	da 01       	movw	r26, r20
    119c:	99 0f       	add	r25, r25
    119e:	31 1d       	adc	r19, r1
    11a0:	87 fd       	sbrc	r24, 7
    11a2:	91 60       	ori	r25, 0x01	; 1
    11a4:	00 96       	adiw	r24, 0x00	; 0
    11a6:	61 05       	cpc	r22, r1
    11a8:	71 05       	cpc	r23, r1
    11aa:	39 f4       	brne	.+14     	; 0x11ba <__ftoa_engine+0x28>
    11ac:	32 60       	ori	r19, 0x02	; 2
    11ae:	2e 5f       	subi	r18, 0xFE	; 254
    11b0:	3d 93       	st	X+, r19
    11b2:	30 e3       	ldi	r19, 0x30	; 48
    11b4:	2a 95       	dec	r18
    11b6:	e1 f7       	brne	.-8      	; 0x11b0 <__ftoa_engine+0x1e>
    11b8:	08 95       	ret
    11ba:	9f 3f       	cpi	r25, 0xFF	; 255
    11bc:	30 f0       	brcs	.+12     	; 0x11ca <__ftoa_engine+0x38>
    11be:	80 38       	cpi	r24, 0x80	; 128
    11c0:	71 05       	cpc	r23, r1
    11c2:	61 05       	cpc	r22, r1
    11c4:	09 f0       	breq	.+2      	; 0x11c8 <__ftoa_engine+0x36>
    11c6:	3c 5f       	subi	r19, 0xFC	; 252
    11c8:	3c 5f       	subi	r19, 0xFC	; 252
    11ca:	3d 93       	st	X+, r19
    11cc:	91 30       	cpi	r25, 0x01	; 1
    11ce:	08 f0       	brcs	.+2      	; 0x11d2 <__ftoa_engine+0x40>
    11d0:	80 68       	ori	r24, 0x80	; 128
    11d2:	91 1d       	adc	r25, r1
    11d4:	df 93       	push	r29
    11d6:	cf 93       	push	r28
    11d8:	1f 93       	push	r17
    11da:	0f 93       	push	r16
    11dc:	ff 92       	push	r15
    11de:	ef 92       	push	r14
    11e0:	19 2f       	mov	r17, r25
    11e2:	98 7f       	andi	r25, 0xF8	; 248
    11e4:	96 95       	lsr	r25
    11e6:	e9 2f       	mov	r30, r25
    11e8:	96 95       	lsr	r25
    11ea:	96 95       	lsr	r25
    11ec:	e9 0f       	add	r30, r25
    11ee:	ff 27       	eor	r31, r31
    11f0:	e6 53       	subi	r30, 0x36	; 54
    11f2:	ff 4f       	sbci	r31, 0xFF	; 255
    11f4:	99 27       	eor	r25, r25
    11f6:	33 27       	eor	r19, r19
    11f8:	ee 24       	eor	r14, r14
    11fa:	ff 24       	eor	r15, r15
    11fc:	a7 01       	movw	r20, r14
    11fe:	e7 01       	movw	r28, r14
    1200:	05 90       	lpm	r0, Z+
    1202:	08 94       	sec
    1204:	07 94       	ror	r0
    1206:	28 f4       	brcc	.+10     	; 0x1212 <__ftoa_engine+0x80>
    1208:	36 0f       	add	r19, r22
    120a:	e7 1e       	adc	r14, r23
    120c:	f8 1e       	adc	r15, r24
    120e:	49 1f       	adc	r20, r25
    1210:	51 1d       	adc	r21, r1
    1212:	66 0f       	add	r22, r22
    1214:	77 1f       	adc	r23, r23
    1216:	88 1f       	adc	r24, r24
    1218:	99 1f       	adc	r25, r25
    121a:	06 94       	lsr	r0
    121c:	a1 f7       	brne	.-24     	; 0x1206 <__ftoa_engine+0x74>
    121e:	05 90       	lpm	r0, Z+
    1220:	07 94       	ror	r0
    1222:	28 f4       	brcc	.+10     	; 0x122e <__ftoa_engine+0x9c>
    1224:	e7 0e       	add	r14, r23
    1226:	f8 1e       	adc	r15, r24
    1228:	49 1f       	adc	r20, r25
    122a:	56 1f       	adc	r21, r22
    122c:	c1 1d       	adc	r28, r1
    122e:	77 0f       	add	r23, r23
    1230:	88 1f       	adc	r24, r24
    1232:	99 1f       	adc	r25, r25
    1234:	66 1f       	adc	r22, r22
    1236:	06 94       	lsr	r0
    1238:	a1 f7       	brne	.-24     	; 0x1222 <__ftoa_engine+0x90>
    123a:	05 90       	lpm	r0, Z+
    123c:	07 94       	ror	r0
    123e:	28 f4       	brcc	.+10     	; 0x124a <__ftoa_engine+0xb8>
    1240:	f8 0e       	add	r15, r24
    1242:	49 1f       	adc	r20, r25
    1244:	56 1f       	adc	r21, r22
    1246:	c7 1f       	adc	r28, r23
    1248:	d1 1d       	adc	r29, r1
    124a:	88 0f       	add	r24, r24
    124c:	99 1f       	adc	r25, r25
    124e:	66 1f       	adc	r22, r22
    1250:	77 1f       	adc	r23, r23
    1252:	06 94       	lsr	r0
    1254:	a1 f7       	brne	.-24     	; 0x123e <__ftoa_engine+0xac>
    1256:	05 90       	lpm	r0, Z+
    1258:	07 94       	ror	r0
    125a:	20 f4       	brcc	.+8      	; 0x1264 <__ftoa_engine+0xd2>
    125c:	49 0f       	add	r20, r25
    125e:	56 1f       	adc	r21, r22
    1260:	c7 1f       	adc	r28, r23
    1262:	d8 1f       	adc	r29, r24
    1264:	99 0f       	add	r25, r25
    1266:	66 1f       	adc	r22, r22
    1268:	77 1f       	adc	r23, r23
    126a:	88 1f       	adc	r24, r24
    126c:	06 94       	lsr	r0
    126e:	a9 f7       	brne	.-22     	; 0x125a <__ftoa_engine+0xc8>
    1270:	84 91       	lpm	r24, Z
    1272:	10 95       	com	r17
    1274:	17 70       	andi	r17, 0x07	; 7
    1276:	41 f0       	breq	.+16     	; 0x1288 <__ftoa_engine+0xf6>
    1278:	d6 95       	lsr	r29
    127a:	c7 95       	ror	r28
    127c:	57 95       	ror	r21
    127e:	47 95       	ror	r20
    1280:	f7 94       	ror	r15
    1282:	e7 94       	ror	r14
    1284:	1a 95       	dec	r17
    1286:	c1 f7       	brne	.-16     	; 0x1278 <__ftoa_engine+0xe6>
    1288:	e0 e7       	ldi	r30, 0x70	; 112
    128a:	f0 e0       	ldi	r31, 0x00	; 0
    128c:	68 94       	set
    128e:	15 90       	lpm	r1, Z+
    1290:	15 91       	lpm	r17, Z+
    1292:	35 91       	lpm	r19, Z+
    1294:	65 91       	lpm	r22, Z+
    1296:	95 91       	lpm	r25, Z+
    1298:	05 90       	lpm	r0, Z+
    129a:	7f e2       	ldi	r23, 0x2F	; 47
    129c:	73 95       	inc	r23
    129e:	e1 18       	sub	r14, r1
    12a0:	f1 0a       	sbc	r15, r17
    12a2:	43 0b       	sbc	r20, r19
    12a4:	56 0b       	sbc	r21, r22
    12a6:	c9 0b       	sbc	r28, r25
    12a8:	d0 09       	sbc	r29, r0
    12aa:	c0 f7       	brcc	.-16     	; 0x129c <__ftoa_engine+0x10a>
    12ac:	e1 0c       	add	r14, r1
    12ae:	f1 1e       	adc	r15, r17
    12b0:	43 1f       	adc	r20, r19
    12b2:	56 1f       	adc	r21, r22
    12b4:	c9 1f       	adc	r28, r25
    12b6:	d0 1d       	adc	r29, r0
    12b8:	7e f4       	brtc	.+30     	; 0x12d8 <__ftoa_engine+0x146>
    12ba:	70 33       	cpi	r23, 0x30	; 48
    12bc:	11 f4       	brne	.+4      	; 0x12c2 <__ftoa_engine+0x130>
    12be:	8a 95       	dec	r24
    12c0:	e6 cf       	rjmp	.-52     	; 0x128e <__ftoa_engine+0xfc>
    12c2:	e8 94       	clt
    12c4:	01 50       	subi	r16, 0x01	; 1
    12c6:	30 f0       	brcs	.+12     	; 0x12d4 <__ftoa_engine+0x142>
    12c8:	08 0f       	add	r16, r24
    12ca:	0a f4       	brpl	.+2      	; 0x12ce <__ftoa_engine+0x13c>
    12cc:	00 27       	eor	r16, r16
    12ce:	02 17       	cp	r16, r18
    12d0:	08 f4       	brcc	.+2      	; 0x12d4 <__ftoa_engine+0x142>
    12d2:	20 2f       	mov	r18, r16
    12d4:	23 95       	inc	r18
    12d6:	02 2f       	mov	r16, r18
    12d8:	7a 33       	cpi	r23, 0x3A	; 58
    12da:	28 f0       	brcs	.+10     	; 0x12e6 <__ftoa_engine+0x154>
    12dc:	79 e3       	ldi	r23, 0x39	; 57
    12de:	7d 93       	st	X+, r23
    12e0:	2a 95       	dec	r18
    12e2:	e9 f7       	brne	.-6      	; 0x12de <__ftoa_engine+0x14c>
    12e4:	10 c0       	rjmp	.+32     	; 0x1306 <__ftoa_engine+0x174>
    12e6:	7d 93       	st	X+, r23
    12e8:	2a 95       	dec	r18
    12ea:	89 f6       	brne	.-94     	; 0x128e <__ftoa_engine+0xfc>
    12ec:	06 94       	lsr	r0
    12ee:	97 95       	ror	r25
    12f0:	67 95       	ror	r22
    12f2:	37 95       	ror	r19
    12f4:	17 95       	ror	r17
    12f6:	17 94       	ror	r1
    12f8:	e1 18       	sub	r14, r1
    12fa:	f1 0a       	sbc	r15, r17
    12fc:	43 0b       	sbc	r20, r19
    12fe:	56 0b       	sbc	r21, r22
    1300:	c9 0b       	sbc	r28, r25
    1302:	d0 09       	sbc	r29, r0
    1304:	98 f0       	brcs	.+38     	; 0x132c <__ftoa_engine+0x19a>
    1306:	23 95       	inc	r18
    1308:	7e 91       	ld	r23, -X
    130a:	73 95       	inc	r23
    130c:	7a 33       	cpi	r23, 0x3A	; 58
    130e:	08 f0       	brcs	.+2      	; 0x1312 <__ftoa_engine+0x180>
    1310:	70 e3       	ldi	r23, 0x30	; 48
    1312:	7c 93       	st	X, r23
    1314:	20 13       	cpse	r18, r16
    1316:	b8 f7       	brcc	.-18     	; 0x1306 <__ftoa_engine+0x174>
    1318:	7e 91       	ld	r23, -X
    131a:	70 61       	ori	r23, 0x10	; 16
    131c:	7d 93       	st	X+, r23
    131e:	30 f0       	brcs	.+12     	; 0x132c <__ftoa_engine+0x19a>
    1320:	83 95       	inc	r24
    1322:	71 e3       	ldi	r23, 0x31	; 49
    1324:	7d 93       	st	X+, r23
    1326:	70 e3       	ldi	r23, 0x30	; 48
    1328:	2a 95       	dec	r18
    132a:	e1 f7       	brne	.-8      	; 0x1324 <__ftoa_engine+0x192>
    132c:	11 24       	eor	r1, r1
    132e:	ef 90       	pop	r14
    1330:	ff 90       	pop	r15
    1332:	0f 91       	pop	r16
    1334:	1f 91       	pop	r17
    1336:	cf 91       	pop	r28
    1338:	df 91       	pop	r29
    133a:	99 27       	eor	r25, r25
    133c:	87 fd       	sbrc	r24, 7
    133e:	90 95       	com	r25
    1340:	08 95       	ret

00001342 <strnlen_P>:
    1342:	fc 01       	movw	r30, r24
    1344:	05 90       	lpm	r0, Z+
    1346:	61 50       	subi	r22, 0x01	; 1
    1348:	70 40       	sbci	r23, 0x00	; 0
    134a:	01 10       	cpse	r0, r1
    134c:	d8 f7       	brcc	.-10     	; 0x1344 <strnlen_P+0x2>
    134e:	80 95       	com	r24
    1350:	90 95       	com	r25
    1352:	8e 0f       	add	r24, r30
    1354:	9f 1f       	adc	r25, r31
    1356:	08 95       	ret

00001358 <strnlen>:
    1358:	fc 01       	movw	r30, r24
    135a:	61 50       	subi	r22, 0x01	; 1
    135c:	70 40       	sbci	r23, 0x00	; 0
    135e:	01 90       	ld	r0, Z+
    1360:	01 10       	cpse	r0, r1
    1362:	d8 f7       	brcc	.-10     	; 0x135a <strnlen+0x2>
    1364:	80 95       	com	r24
    1366:	90 95       	com	r25
    1368:	8e 0f       	add	r24, r30
    136a:	9f 1f       	adc	r25, r31
    136c:	08 95       	ret

0000136e <fputc>:
    136e:	0f 93       	push	r16
    1370:	1f 93       	push	r17
    1372:	cf 93       	push	r28
    1374:	df 93       	push	r29
    1376:	fb 01       	movw	r30, r22
    1378:	23 81       	ldd	r18, Z+3	; 0x03
    137a:	21 fd       	sbrc	r18, 1
    137c:	03 c0       	rjmp	.+6      	; 0x1384 <fputc+0x16>
    137e:	8f ef       	ldi	r24, 0xFF	; 255
    1380:	9f ef       	ldi	r25, 0xFF	; 255
    1382:	2c c0       	rjmp	.+88     	; 0x13dc <fputc+0x6e>
    1384:	22 ff       	sbrs	r18, 2
    1386:	16 c0       	rjmp	.+44     	; 0x13b4 <fputc+0x46>
    1388:	46 81       	ldd	r20, Z+6	; 0x06
    138a:	57 81       	ldd	r21, Z+7	; 0x07
    138c:	24 81       	ldd	r18, Z+4	; 0x04
    138e:	35 81       	ldd	r19, Z+5	; 0x05
    1390:	42 17       	cp	r20, r18
    1392:	53 07       	cpc	r21, r19
    1394:	44 f4       	brge	.+16     	; 0x13a6 <fputc+0x38>
    1396:	a0 81       	ld	r26, Z
    1398:	b1 81       	ldd	r27, Z+1	; 0x01
    139a:	9d 01       	movw	r18, r26
    139c:	2f 5f       	subi	r18, 0xFF	; 255
    139e:	3f 4f       	sbci	r19, 0xFF	; 255
    13a0:	31 83       	std	Z+1, r19	; 0x01
    13a2:	20 83       	st	Z, r18
    13a4:	8c 93       	st	X, r24
    13a6:	26 81       	ldd	r18, Z+6	; 0x06
    13a8:	37 81       	ldd	r19, Z+7	; 0x07
    13aa:	2f 5f       	subi	r18, 0xFF	; 255
    13ac:	3f 4f       	sbci	r19, 0xFF	; 255
    13ae:	37 83       	std	Z+7, r19	; 0x07
    13b0:	26 83       	std	Z+6, r18	; 0x06
    13b2:	14 c0       	rjmp	.+40     	; 0x13dc <fputc+0x6e>
    13b4:	8b 01       	movw	r16, r22
    13b6:	ec 01       	movw	r28, r24
    13b8:	fb 01       	movw	r30, r22
    13ba:	00 84       	ldd	r0, Z+8	; 0x08
    13bc:	f1 85       	ldd	r31, Z+9	; 0x09
    13be:	e0 2d       	mov	r30, r0
    13c0:	09 95       	icall
    13c2:	89 2b       	or	r24, r25
    13c4:	e1 f6       	brne	.-72     	; 0x137e <fputc+0x10>
    13c6:	d8 01       	movw	r26, r16
    13c8:	16 96       	adiw	r26, 0x06	; 6
    13ca:	8d 91       	ld	r24, X+
    13cc:	9c 91       	ld	r25, X
    13ce:	17 97       	sbiw	r26, 0x07	; 7
    13d0:	01 96       	adiw	r24, 0x01	; 1
    13d2:	17 96       	adiw	r26, 0x07	; 7
    13d4:	9c 93       	st	X, r25
    13d6:	8e 93       	st	-X, r24
    13d8:	16 97       	sbiw	r26, 0x06	; 6
    13da:	ce 01       	movw	r24, r28
    13dc:	df 91       	pop	r29
    13de:	cf 91       	pop	r28
    13e0:	1f 91       	pop	r17
    13e2:	0f 91       	pop	r16
    13e4:	08 95       	ret

000013e6 <printf>:
    13e6:	a0 e0       	ldi	r26, 0x00	; 0
    13e8:	b0 e0       	ldi	r27, 0x00	; 0
    13ea:	e9 ef       	ldi	r30, 0xF9	; 249
    13ec:	f9 e0       	ldi	r31, 0x09	; 9
    13ee:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__prologue_saves__+0x20>
    13f2:	ae 01       	movw	r20, r28
    13f4:	4b 5f       	subi	r20, 0xFB	; 251
    13f6:	5f 4f       	sbci	r21, 0xFF	; 255
    13f8:	fa 01       	movw	r30, r20
    13fa:	61 91       	ld	r22, Z+
    13fc:	71 91       	ld	r23, Z+
    13fe:	af 01       	movw	r20, r30
    1400:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <__iob+0x2>
    1404:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <__iob+0x3>
    1408:	0e 94 15 05 	call	0xa2a	; 0xa2a <vfprintf>
    140c:	e2 e0       	ldi	r30, 0x02	; 2
    140e:	0c 94 be 08 	jmp	0x117c	; 0x117c <__epilogue_restores__+0x20>

00001412 <putchar>:
    1412:	60 91 20 02 	lds	r22, 0x0220	; 0x800220 <__iob+0x2>
    1416:	70 91 21 02 	lds	r23, 0x0221	; 0x800221 <__iob+0x3>
    141a:	0e 94 b7 09 	call	0x136e	; 0x136e <fputc>
    141e:	08 95       	ret

00001420 <__ultoa_invert>:
    1420:	fa 01       	movw	r30, r20
    1422:	aa 27       	eor	r26, r26
    1424:	28 30       	cpi	r18, 0x08	; 8
    1426:	51 f1       	breq	.+84     	; 0x147c <__ultoa_invert+0x5c>
    1428:	20 31       	cpi	r18, 0x10	; 16
    142a:	81 f1       	breq	.+96     	; 0x148c <__ultoa_invert+0x6c>
    142c:	e8 94       	clt
    142e:	6f 93       	push	r22
    1430:	6e 7f       	andi	r22, 0xFE	; 254
    1432:	6e 5f       	subi	r22, 0xFE	; 254
    1434:	7f 4f       	sbci	r23, 0xFF	; 255
    1436:	8f 4f       	sbci	r24, 0xFF	; 255
    1438:	9f 4f       	sbci	r25, 0xFF	; 255
    143a:	af 4f       	sbci	r26, 0xFF	; 255
    143c:	b1 e0       	ldi	r27, 0x01	; 1
    143e:	3e d0       	rcall	.+124    	; 0x14bc <__ultoa_invert+0x9c>
    1440:	b4 e0       	ldi	r27, 0x04	; 4
    1442:	3c d0       	rcall	.+120    	; 0x14bc <__ultoa_invert+0x9c>
    1444:	67 0f       	add	r22, r23
    1446:	78 1f       	adc	r23, r24
    1448:	89 1f       	adc	r24, r25
    144a:	9a 1f       	adc	r25, r26
    144c:	a1 1d       	adc	r26, r1
    144e:	68 0f       	add	r22, r24
    1450:	79 1f       	adc	r23, r25
    1452:	8a 1f       	adc	r24, r26
    1454:	91 1d       	adc	r25, r1
    1456:	a1 1d       	adc	r26, r1
    1458:	6a 0f       	add	r22, r26
    145a:	71 1d       	adc	r23, r1
    145c:	81 1d       	adc	r24, r1
    145e:	91 1d       	adc	r25, r1
    1460:	a1 1d       	adc	r26, r1
    1462:	20 d0       	rcall	.+64     	; 0x14a4 <__ultoa_invert+0x84>
    1464:	09 f4       	brne	.+2      	; 0x1468 <__ultoa_invert+0x48>
    1466:	68 94       	set
    1468:	3f 91       	pop	r19
    146a:	2a e0       	ldi	r18, 0x0A	; 10
    146c:	26 9f       	mul	r18, r22
    146e:	11 24       	eor	r1, r1
    1470:	30 19       	sub	r19, r0
    1472:	30 5d       	subi	r19, 0xD0	; 208
    1474:	31 93       	st	Z+, r19
    1476:	de f6       	brtc	.-74     	; 0x142e <__ultoa_invert+0xe>
    1478:	cf 01       	movw	r24, r30
    147a:	08 95       	ret
    147c:	46 2f       	mov	r20, r22
    147e:	47 70       	andi	r20, 0x07	; 7
    1480:	40 5d       	subi	r20, 0xD0	; 208
    1482:	41 93       	st	Z+, r20
    1484:	b3 e0       	ldi	r27, 0x03	; 3
    1486:	0f d0       	rcall	.+30     	; 0x14a6 <__ultoa_invert+0x86>
    1488:	c9 f7       	brne	.-14     	; 0x147c <__ultoa_invert+0x5c>
    148a:	f6 cf       	rjmp	.-20     	; 0x1478 <__ultoa_invert+0x58>
    148c:	46 2f       	mov	r20, r22
    148e:	4f 70       	andi	r20, 0x0F	; 15
    1490:	40 5d       	subi	r20, 0xD0	; 208
    1492:	4a 33       	cpi	r20, 0x3A	; 58
    1494:	18 f0       	brcs	.+6      	; 0x149c <__ultoa_invert+0x7c>
    1496:	49 5d       	subi	r20, 0xD9	; 217
    1498:	31 fd       	sbrc	r19, 1
    149a:	40 52       	subi	r20, 0x20	; 32
    149c:	41 93       	st	Z+, r20
    149e:	02 d0       	rcall	.+4      	; 0x14a4 <__ultoa_invert+0x84>
    14a0:	a9 f7       	brne	.-22     	; 0x148c <__ultoa_invert+0x6c>
    14a2:	ea cf       	rjmp	.-44     	; 0x1478 <__ultoa_invert+0x58>
    14a4:	b4 e0       	ldi	r27, 0x04	; 4
    14a6:	a6 95       	lsr	r26
    14a8:	97 95       	ror	r25
    14aa:	87 95       	ror	r24
    14ac:	77 95       	ror	r23
    14ae:	67 95       	ror	r22
    14b0:	ba 95       	dec	r27
    14b2:	c9 f7       	brne	.-14     	; 0x14a6 <__ultoa_invert+0x86>
    14b4:	00 97       	sbiw	r24, 0x00	; 0
    14b6:	61 05       	cpc	r22, r1
    14b8:	71 05       	cpc	r23, r1
    14ba:	08 95       	ret
    14bc:	9b 01       	movw	r18, r22
    14be:	ac 01       	movw	r20, r24
    14c0:	0a 2e       	mov	r0, r26
    14c2:	06 94       	lsr	r0
    14c4:	57 95       	ror	r21
    14c6:	47 95       	ror	r20
    14c8:	37 95       	ror	r19
    14ca:	27 95       	ror	r18
    14cc:	ba 95       	dec	r27
    14ce:	c9 f7       	brne	.-14     	; 0x14c2 <__ultoa_invert+0xa2>
    14d0:	62 0f       	add	r22, r18
    14d2:	73 1f       	adc	r23, r19
    14d4:	84 1f       	adc	r24, r20
    14d6:	95 1f       	adc	r25, r21
    14d8:	a0 1d       	adc	r26, r0
    14da:	08 95       	ret

000014dc <_exit>:
    14dc:	f8 94       	cli

000014de <__stop_program>:
    14de:	ff cf       	rjmp	.-2      	; 0x14de <__stop_program>
