
controller_software.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f2  00800100  000014f6  0000158a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007c  008001f2  008001f2  0000167c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000167c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00001718  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000100b  00000000  00000000  00001810  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a4d  00000000  00000000  0000281b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008f8  00000000  00000000  00003268  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002bc  00000000  00000000  00003b60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000769  00000000  00000000  00003e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000755  00000000  00000000  00004585  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00004cda  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__vector_9>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 9c 02 	jmp	0x538	; 0x538 <__vector_16>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 b0 02 	jmp	0x560	; 0x560 <__vector_21>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e6 ef       	ldi	r30, 0xF6	; 246
     17e:	f4 e1       	ldi	r31, 0x14	; 20
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a2 3f       	cpi	r26, 0xF2	; 242
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	22 e0       	ldi	r18, 0x02	; 2
     18e:	a2 ef       	ldi	r26, 0xF2	; 242
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	ae 36       	cpi	r26, 0x6E	; 110
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 a8 01 	call	0x350	; 0x350 <main>
     1a0:	0c 94 79 0a 	jmp	0x14f2	; 0x14f2 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <adc_init>:
/*** Function Definitions ***/
void adc_init(){
	
	/** ADCMUX: ADC Multiplexer Selection Register **/
	/* Voltage Reference Selection */
	ADMUX &= ~(1 << REFS1);			// Use Vcc as reference voltage
     1a8:	ec e7       	ldi	r30, 0x7C	; 124
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	80 81       	ld	r24, Z
     1ae:	8f 77       	andi	r24, 0x7F	; 127
     1b0:	80 83       	st	Z, r24
	ADMUX |=  (1 << REFS0);
     1b2:	80 81       	ld	r24, Z
     1b4:	80 64       	ori	r24, 0x40	; 64
     1b6:	80 83       	st	Z, r24
	/* ADC Left Adjust Result */
	ADMUX &= ~(1 << ADLAR);			// Right adjust ADC reading to ADCH
     1b8:	80 81       	ld	r24, Z
     1ba:	8f 7d       	andi	r24, 0xDF	; 223
     1bc:	80 83       	st	Z, r24
	/* Analog Channel Selection Bits */
	// Change input pin as specified by the data sheet...
	#ifdef DISABLE_HALL_EFFECT_SENSORS
		ADMUX &= ~(1 << MUX3);							// Channel 2 (Coil Voltage Sensor): Input pin is PC2
     1be:	80 81       	ld	r24, Z
     1c0:	87 7f       	andi	r24, 0xF7	; 247
     1c2:	80 83       	st	Z, r24
		ADMUX &= ~(1 << MUX2);
     1c4:	80 81       	ld	r24, Z
     1c6:	8b 7f       	andi	r24, 0xFB	; 251
     1c8:	80 83       	st	Z, r24
		ADMUX |=  (1 << MUX1);
     1ca:	80 81       	ld	r24, Z
     1cc:	82 60       	ori	r24, 0x02	; 2
     1ce:	80 83       	st	Z, r24
		ADMUX &= ~(1 << MUX0);
     1d0:	80 81       	ld	r24, Z
     1d2:	8e 7f       	andi	r24, 0xFE	; 254
     1d4:	80 83       	st	Z, r24
		ADC_next_channel = ADC_COIL_VOLTAGE_CHANNEL;	// Note: Although it is named ADC_next_channel, in this function specifically this variable signifies initial state of the ADC Channel.
     1d6:	82 e0       	ldi	r24, 0x02	; 2
     1d8:	80 93 f5 01 	sts	0x01F5, r24	; 0x8001f5 <ADC_next_channel>
		ADC_next_channel = ADC_RIGHT_HALL_CHANNEL;		// Note: Although it is named ADC_next_channel, in this function specifically this variable signifies initial state of the ADC Channel.
	#endif
	
	/** ADCSRA: ADC Control and Status Register A **/
	/* ADC Enable */
	ADCSRA |= (1 << ADEN);			// ADC Power 'On'
     1dc:	ea e7       	ldi	r30, 0x7A	; 122
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	80 81       	ld	r24, Z
     1e2:	80 68       	ori	r24, 0x80	; 128
     1e4:	80 83       	st	Z, r24
	#ifdef ADC_ENABLE_AUTO_TRIGGER
		ADCSRA |= (1 << ADATE);			// Auto Trigger 'On'
	#endif
	/* ADC Interrupt Setting */
	//	ADCSRA &=~(1 << ADIF);
	ADCSRA |= (1 << ADIE);			// Interrupt 'On'
     1e6:	80 81       	ld	r24, Z
     1e8:	88 60       	ori	r24, 0x08	; 8
     1ea:	80 83       	st	Z, r24
	/* Pre-scaler Setup */
	ADCSRA |= (1 << ADPS2);			// Pre-scaler Division factor to 64
     1ec:	80 81       	ld	r24, Z
     1ee:	84 60       	ori	r24, 0x04	; 4
     1f0:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS1);			// ADC Frequency = 250 KHz @Xplained Mini (F_CPU 16MHz)
     1f2:	80 81       	ld	r24, Z
     1f4:	82 60       	ori	r24, 0x02	; 2
     1f6:	80 83       	st	Z, r24
	ADCSRA &=~(1 << ADPS0);			// ADC Frequency = 125 KHz @PCB (F_CPU 8MHz)
     1f8:	80 81       	ld	r24, Z
     1fa:	8e 7f       	andi	r24, 0xFE	; 254
     1fc:	80 83       	st	Z, r24
		ADCSRB |= (1 << ADTS1);
		ADCSRB |= (1 << ADTS2);
	#endif

	/** ADC Begin **/
	ADCSRA |= (1 << ADSC);			// Start new conversion
     1fe:	80 81       	ld	r24, Z
     200:	80 64       	ori	r24, 0x40	; 64
     202:	80 83       	st	Z, r24
     204:	08 95       	ret

00000206 <debug_adc_digitize>:
}

double debug_adc_digitize(uint16_t debug_raw_output){
	
	double digitized_ADC_output = (double) debug_raw_output * ADC_REFERENCE_VOLTAGE / ADC_RESOLUTION;
	return digitized_ADC_output;
     206:	bc 01       	movw	r22, r24
     208:	80 e0       	ldi	r24, 0x00	; 0
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	0e 94 25 04 	call	0x84a	; 0x84a <__floatunsisf>
     210:	20 e0       	ldi	r18, 0x00	; 0
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 ea       	ldi	r20, 0xA0	; 160
     216:	50 e4       	ldi	r21, 0x40	; 64
     218:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
     21c:	20 e0       	ldi	r18, 0x00	; 0
     21e:	30 e0       	ldi	r19, 0x00	; 0
     220:	40 e8       	ldi	r20, 0x80	; 128
     222:	5a e3       	ldi	r21, 0x3A	; 58
     224:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
	
     228:	08 95       	ret

0000022a <calculate_power>:
		return flow_rate;
	#endif

}

double calculate_power(double coil_voltage, double coil_current, double PWM_live_time, double cycle_period){
     22a:	4f 92       	push	r4
     22c:	5f 92       	push	r5
     22e:	6f 92       	push	r6
     230:	7f 92       	push	r7
     232:	af 92       	push	r10
     234:	bf 92       	push	r11
     236:	cf 92       	push	r12
     238:	df 92       	push	r13
     23a:	ef 92       	push	r14
     23c:	ff 92       	push	r15
     23e:	0f 93       	push	r16
     240:	1f 93       	push	r17
     242:	cf 93       	push	r28
     244:	df 93       	push	r29
     246:	cd b7       	in	r28, 0x3d	; 61
     248:	de b7       	in	r29, 0x3e	; 62
     24a:	28 97       	sbiw	r28, 0x08	; 8
     24c:	0f b6       	in	r0, 0x3f	; 63
     24e:	f8 94       	cli
     250:	de bf       	out	0x3e, r29	; 62
     252:	0f be       	out	0x3f, r0	; 63
     254:	cd bf       	out	0x3d, r28	; 61
     256:	29 01       	movw	r4, r18
     258:	3a 01       	movw	r6, r20
     25a:	e9 82       	std	Y+1, r14	; 0x01
     25c:	fa 82       	std	Y+2, r15	; 0x02
     25e:	0b 83       	std	Y+3, r16	; 0x03
     260:	1c 83       	std	Y+4, r17	; 0x04
	analog_coil_voltage = coil_voltage * (1 + VOLTAGE_SHUNT_A/VOLTAGE_SHUNT_B);	 
	// coil shunt current into a real value...
	analog_coil_current = coil_current / CURRENT_RESISTOR_C;
	total_power = analog_coil_voltage * analog_coil_current;
	average_power = total_power * (PWM_live_time / cycle_period);
	return average_power;
     262:	26 e6       	ldi	r18, 0x66	; 102
     264:	36 e6       	ldi	r19, 0x66	; 102
     266:	46 e2       	ldi	r20, 0x26	; 38
     268:	50 e4       	ldi	r21, 0x40	; 64
     26a:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
     26e:	6d 83       	std	Y+5, r22	; 0x05
     270:	7e 83       	std	Y+6, r23	; 0x06
     272:	8f 83       	std	Y+7, r24	; 0x07
     274:	98 87       	std	Y+8, r25	; 0x08
     276:	2a e9       	ldi	r18, 0x9A	; 154
     278:	39 e9       	ldi	r19, 0x99	; 153
     27a:	49 e1       	ldi	r20, 0x19	; 25
     27c:	5e e3       	ldi	r21, 0x3E	; 62
     27e:	c3 01       	movw	r24, r6
     280:	b2 01       	movw	r22, r4
     282:	0e 94 b3 03 	call	0x766	; 0x766 <__divsf3>
     286:	9b 01       	movw	r18, r22
     288:	ac 01       	movw	r20, r24
     28a:	6d 81       	ldd	r22, Y+5	; 0x05
     28c:	7e 81       	ldd	r23, Y+6	; 0x06
     28e:	8f 81       	ldd	r24, Y+7	; 0x07
     290:	98 85       	ldd	r25, Y+8	; 0x08
     292:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
     296:	2b 01       	movw	r4, r22
     298:	3c 01       	movw	r6, r24
     29a:	a6 01       	movw	r20, r12
     29c:	95 01       	movw	r18, r10
     29e:	c8 01       	movw	r24, r16
     2a0:	b7 01       	movw	r22, r14
     2a2:	0e 94 b3 03 	call	0x766	; 0x766 <__divsf3>
     2a6:	9b 01       	movw	r18, r22
     2a8:	ac 01       	movw	r20, r24
     2aa:	c3 01       	movw	r24, r6
     2ac:	b2 01       	movw	r22, r4
     2ae:	0e 94 b3 04 	call	0x966	; 0x966 <__mulsf3>
	
     2b2:	28 96       	adiw	r28, 0x08	; 8
     2b4:	0f b6       	in	r0, 0x3f	; 63
     2b6:	f8 94       	cli
     2b8:	de bf       	out	0x3e, r29	; 62
     2ba:	0f be       	out	0x3f, r0	; 63
     2bc:	cd bf       	out	0x3d, r28	; 61
     2be:	df 91       	pop	r29
     2c0:	cf 91       	pop	r28
     2c2:	1f 91       	pop	r17
     2c4:	0f 91       	pop	r16
     2c6:	ff 90       	pop	r15
     2c8:	ef 90       	pop	r14
     2ca:	df 90       	pop	r13
     2cc:	cf 90       	pop	r12
     2ce:	bf 90       	pop	r11
     2d0:	af 90       	pop	r10
     2d2:	7f 90       	pop	r7
     2d4:	6f 90       	pop	r6
     2d6:	5f 90       	pop	r5
     2d8:	4f 90       	pop	r4
     2da:	08 95       	ret

000002dc <debug_usart_init>:
	input = input * 100;
	output[2] = (uint16_t)(input / 100);
	output[1] = (uint16_t)(input / 10) % 10;
	output[0] = (uint16_t)input % 10;
	
}
     2dc:	a1 ec       	ldi	r26, 0xC1	; 193
     2de:	b0 e0       	ldi	r27, 0x00	; 0
     2e0:	2c 91       	ld	r18, X
     2e2:	28 60       	ori	r18, 0x08	; 8
     2e4:	2c 93       	st	X, r18
     2e6:	2c 91       	ld	r18, X
     2e8:	20 68       	ori	r18, 0x80	; 128
     2ea:	2c 93       	st	X, r18
     2ec:	e2 ec       	ldi	r30, 0xC2	; 194
     2ee:	f0 e0       	ldi	r31, 0x00	; 0
     2f0:	20 81       	ld	r18, Z
     2f2:	2f 77       	andi	r18, 0x7F	; 127
     2f4:	20 83       	st	Z, r18
     2f6:	20 81       	ld	r18, Z
     2f8:	2f 7b       	andi	r18, 0xBF	; 191
     2fa:	20 83       	st	Z, r18
     2fc:	20 81       	ld	r18, Z
     2fe:	2f 7d       	andi	r18, 0xDF	; 223
     300:	20 83       	st	Z, r18
     302:	20 81       	ld	r18, Z
     304:	2f 7e       	andi	r18, 0xEF	; 239
     306:	20 83       	st	Z, r18
     308:	20 81       	ld	r18, Z
     30a:	27 7f       	andi	r18, 0xF7	; 247
     30c:	20 83       	st	Z, r18
     30e:	2c 91       	ld	r18, X
     310:	2b 7f       	andi	r18, 0xFB	; 251
     312:	2c 93       	st	X, r18
     314:	20 81       	ld	r18, Z
     316:	26 60       	ori	r18, 0x06	; 6
     318:	20 83       	st	Z, r18
     31a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     31e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     322:	08 95       	ret

00000324 <debug_usart_transmit>:
     324:	e0 ec       	ldi	r30, 0xC0	; 192
     326:	f0 e0       	ldi	r31, 0x00	; 0
     328:	90 81       	ld	r25, Z
     32a:	95 ff       	sbrs	r25, 5
     32c:	fd cf       	rjmp	.-6      	; 0x328 <debug_usart_transmit+0x4>
     32e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     332:	08 95       	ret

00000334 <usart_putchar_printf>:

int usart_putchar_printf(char var, FILE *stream){
     334:	cf 93       	push	r28
     336:	c8 2f       	mov	r28, r24

	if(var == '\n'){
     338:	8a 30       	cpi	r24, 0x0A	; 10
     33a:	19 f4       	brne	.+6      	; 0x342 <usart_putchar_printf+0xe>
		debug_usart_transmit('\r');
     33c:	8d e0       	ldi	r24, 0x0D	; 13
     33e:	0e 94 92 01 	call	0x324	; 0x324 <debug_usart_transmit>
	}
	debug_usart_transmit(var);
     342:	8c 2f       	mov	r24, r28
     344:	0e 94 92 01 	call	0x324	; 0x324 <debug_usart_transmit>
	return 0;	

     348:	80 e0       	ldi	r24, 0x00	; 0
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	cf 91       	pop	r28
     34e:	08 95       	ret

00000350 <main>:
int main(void){
	
	/*** Run Once Code ***/
	/* PIN I/O Setup */
	// Set all pins to output. Change mode to input when necessary
	DDRB = 0xff;
     350:	8f ef       	ldi	r24, 0xFF	; 255
     352:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xff;
     354:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xff;
     356:	8a b9       	out	0x0a, r24	; 10
	
	// Set ADC Input Gates...
	DDRC &= ~(1 << PC0); // ADC Channel 0... left hall effect sensor
     358:	38 98       	cbi	0x07, 0	; 7
	DDRC &= ~(1 << PC2); // ADC Channel 2... Coil Voltage Shunt
     35a:	3a 98       	cbi	0x07, 2	; 7
	DDRC &= ~(1 << PC3); // ADC Channel 3... Coil Current Shunt
     35c:	3b 98       	cbi	0x07, 3	; 7
	DDRC &= ~(1 << PC5); // ADC Channel 5... Right hall effect sensor
     35e:	3d 98       	cbi	0x07, 5	; 7
		
	/* ATMEGA328P Module Initialization */
	// Remove double slashes to activate...
	timer0_init();	// Set up Timer 0 and Pulse Width Modulation.
     360:	0e 94 6e 03 	call	0x6dc	; 0x6dc <timer0_init>
	timer2_init();	// Set up Timer 2 and Pulse Width Modulation
     364:	0e 94 8e 03 	call	0x71c	; 0x71c <timer2_init>
	adc_init();		// Set up ADC
     368:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <adc_init>
	#ifdef TRANSMIT_DEBUG_MODE
		stdout = &mystdout;
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	91 e0       	ldi	r25, 0x01	; 1
     370:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <__iob+0x3>
     374:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <__iob+0x2>
		// enable USART for transmitting digital conversion result to PuTTy...
		debug_usart_init(debug_UBRR);
     378:	87 e6       	ldi	r24, 0x67	; 103
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	0e 94 6e 01 	call	0x2dc	; 0x2dc <debug_usart_init>
	#endif
	
	sei();
     380:	78 94       	sei
		
		#ifdef TRANSMIT_DEBUG_MODE
		//debug mode... ignore normal operational cycle
			#ifdef ADC_DEBUG_MODE
				// try analog to digital conversion on the ADC, and display its output to the PuTTy.
				printf("Current ADC Channel: %d\n", debug_ADC_channel);
     382:	0f 2e       	mov	r0, r31
     384:	fe e0       	ldi	r31, 0x0E	; 14
     386:	8f 2e       	mov	r8, r31
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	9f 2e       	mov	r9, r31
     38c:	f0 2d       	mov	r31, r0
				#ifdef DISABLE_HALL_EFFECT_SENSORS
					printf("Channel 2 Raw ADC Output: %d\n", raw_ADC_output_PC2);
					printf("Channel 3 Raw ADC Output: %d\n", raw_ADC_output_PC3);
					double digitized_adc_output_PC2 = debug_adc_digitize(raw_ADC_output_PC2);
					double digitized_adc_output_PC3 = debug_adc_digitize(raw_ADC_output_PC3);
					printf("Digitized ADC Output: %fV\n",digitized_adc_output_PC2);
     38e:	c9 e7       	ldi	r28, 0x79	; 121
     390:	d1 e0       	ldi	r29, 0x01	; 1
			sei();
		}
		#endif
		
		#ifdef XPLAINED_MINI_LED_STROBE
			PORTB ^= (1 << PB5);
     392:	68 94       	set
     394:	66 24       	eor	r6, r6
     396:	65 f8       	bld	r6, 5
		
		#ifdef TRANSMIT_DEBUG_MODE
		//debug mode... ignore normal operational cycle
			#ifdef ADC_DEBUG_MODE
				// try analog to digital conversion on the ADC, and display its output to the PuTTy.
				printf("Current ADC Channel: %d\n", debug_ADC_channel);
     398:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <debug_ADC_channel>
     39c:	1f 92       	push	r1
     39e:	8f 93       	push	r24
     3a0:	9f 92       	push	r9
     3a2:	8f 92       	push	r8
     3a4:	0e 94 fe 09 	call	0x13fc	; 0x13fc <printf>
				printf("Next ADC Channel: %d\n", ADC_next_channel);
     3a8:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <ADC_next_channel>
     3ac:	1f 92       	push	r1
     3ae:	8f 93       	push	r24
     3b0:	27 e2       	ldi	r18, 0x27	; 39
     3b2:	31 e0       	ldi	r19, 0x01	; 1
     3b4:	3f 93       	push	r19
     3b6:	2f 93       	push	r18
     3b8:	0e 94 fe 09 	call	0x13fc	; 0x13fc <printf>
				#ifdef DISABLE_HALL_EFFECT_SENSORS
					printf("Channel 2 Raw ADC Output: %d\n", raw_ADC_output_PC2);
     3bc:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <raw_ADC_output_PC2+0x1>
     3c0:	8f 93       	push	r24
     3c2:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <raw_ADC_output_PC2>
     3c6:	8f 93       	push	r24
     3c8:	2d e3       	ldi	r18, 0x3D	; 61
     3ca:	31 e0       	ldi	r19, 0x01	; 1
     3cc:	3f 93       	push	r19
     3ce:	2f 93       	push	r18
     3d0:	0e 94 fe 09 	call	0x13fc	; 0x13fc <printf>
					printf("Channel 3 Raw ADC Output: %d\n", raw_ADC_output_PC3);
     3d4:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <raw_ADC_output_PC3+0x1>
     3d8:	8f 93       	push	r24
     3da:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <raw_ADC_output_PC3>
     3de:	8f 93       	push	r24
     3e0:	2b e5       	ldi	r18, 0x5B	; 91
     3e2:	31 e0       	ldi	r19, 0x01	; 1
     3e4:	3f 93       	push	r19
     3e6:	2f 93       	push	r18
     3e8:	0e 94 fe 09 	call	0x13fc	; 0x13fc <printf>
					double digitized_adc_output_PC2 = debug_adc_digitize(raw_ADC_output_PC2);
     3ec:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <raw_ADC_output_PC2>
     3f0:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <raw_ADC_output_PC2+0x1>
     3f4:	0e 94 03 01 	call	0x206	; 0x206 <debug_adc_digitize>
     3f8:	36 2e       	mov	r3, r22
     3fa:	47 2e       	mov	r4, r23
     3fc:	58 2e       	mov	r5, r24
     3fe:	79 2e       	mov	r7, r25
					double digitized_adc_output_PC3 = debug_adc_digitize(raw_ADC_output_PC3);
     400:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <raw_ADC_output_PC3>
     404:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <raw_ADC_output_PC3+0x1>
     408:	0e 94 03 01 	call	0x206	; 0x206 <debug_adc_digitize>
     40c:	16 2f       	mov	r17, r22
     40e:	07 2f       	mov	r16, r23
     410:	f8 2e       	mov	r15, r24
     412:	e9 2e       	mov	r14, r25
					printf("Digitized ADC Output: %fV\n",digitized_adc_output_PC2);
     414:	7f 92       	push	r7
     416:	5f 92       	push	r5
     418:	4f 92       	push	r4
     41a:	3f 92       	push	r3
     41c:	df 93       	push	r29
     41e:	cf 93       	push	r28
     420:	0e 94 fe 09 	call	0x13fc	; 0x13fc <printf>
					printf("Digitized ADC Output: %fV\n",digitized_adc_output_PC3);
     424:	ef 92       	push	r14
     426:	ff 92       	push	r15
     428:	0f 93       	push	r16
     42a:	1f 93       	push	r17
     42c:	df 93       	push	r29
     42e:	cf 93       	push	r28
     430:	0e 94 fe 09 	call	0x13fc	; 0x13fc <printf>
					#ifdef CALCULATION_DEBUG_MODE
						double expected_power = calculate_power(digitized_adc_output_PC2, debug_COIL_CURRENT, debug_PWM_LIVE_TIME, debug_PWM_PERIOD);
     434:	0f 2e       	mov	r0, r31
     436:	fa e0       	ldi	r31, 0x0A	; 10
     438:	af 2e       	mov	r10, r31
     43a:	f7 ed       	ldi	r31, 0xD7	; 215
     43c:	bf 2e       	mov	r11, r31
     43e:	f3 ea       	ldi	r31, 0xA3	; 163
     440:	cf 2e       	mov	r12, r31
     442:	fc e3       	ldi	r31, 0x3C	; 60
     444:	df 2e       	mov	r13, r31
     446:	f0 2d       	mov	r31, r0
     448:	16 ea       	ldi	r17, 0xA6	; 166
     44a:	e1 2e       	mov	r14, r17
     44c:	1b e9       	ldi	r17, 0x9B	; 155
     44e:	f1 2e       	mov	r15, r17
     450:	04 ec       	ldi	r16, 0xC4	; 196
     452:	1b e3       	ldi	r17, 0x3B	; 59
     454:	20 e0       	ldi	r18, 0x00	; 0
     456:	30 e0       	ldi	r19, 0x00	; 0
     458:	40 e0       	ldi	r20, 0x00	; 0
     45a:	5f e3       	ldi	r21, 0x3F	; 63
     45c:	63 2d       	mov	r22, r3
     45e:	74 2d       	mov	r23, r4
     460:	85 2d       	mov	r24, r5
     462:	97 2d       	mov	r25, r7
     464:	0e 94 15 01 	call	0x22a	; 0x22a <calculate_power>
						printf("Expected Power Consumption: %fW\n", expected_power);
     468:	9f 93       	push	r25
     46a:	8f 93       	push	r24
     46c:	7f 93       	push	r23
     46e:	6f 93       	push	r22
     470:	24 e9       	ldi	r18, 0x94	; 148
     472:	31 e0       	ldi	r19, 0x01	; 1
     474:	3f 93       	push	r19
     476:	2f 93       	push	r18
     478:	0e 94 fe 09 	call	0x13fc	; 0x13fc <printf>
					#endif
					double maximum_voltage = debug_adc_digitize(raw_maximum_voltage);
     47c:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <raw_maximum_voltage>
     480:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <raw_maximum_voltage+0x1>
     484:	2d b7       	in	r18, 0x3d	; 61
     486:	3e b7       	in	r19, 0x3e	; 62
     488:	2e 5d       	subi	r18, 0xDE	; 222
     48a:	3f 4f       	sbci	r19, 0xFF	; 255
     48c:	0f b6       	in	r0, 0x3f	; 63
     48e:	f8 94       	cli
     490:	3e bf       	out	0x3e, r19	; 62
     492:	0f be       	out	0x3f, r0	; 63
     494:	2d bf       	out	0x3d, r18	; 61
     496:	0e 94 03 01 	call	0x206	; 0x206 <debug_adc_digitize>
     49a:	76 2e       	mov	r7, r22
     49c:	57 2e       	mov	r5, r23
     49e:	48 2e       	mov	r4, r24
     4a0:	39 2e       	mov	r3, r25
					double minimum_voltage = debug_adc_digitize(raw_minimum_voltage);
     4a2:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <raw_minimum_voltage>
     4a6:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <raw_minimum_voltage+0x1>
     4aa:	0e 94 03 01 	call	0x206	; 0x206 <debug_adc_digitize>
     4ae:	16 2f       	mov	r17, r22
     4b0:	07 2f       	mov	r16, r23
     4b2:	f8 2e       	mov	r15, r24
     4b4:	e9 2e       	mov	r14, r25
					printf("Maximum Voltage Detected: %f\n", maximum_voltage);
     4b6:	3f 92       	push	r3
     4b8:	4f 92       	push	r4
     4ba:	5f 92       	push	r5
     4bc:	7f 92       	push	r7
     4be:	85 eb       	ldi	r24, 0xB5	; 181
     4c0:	91 e0       	ldi	r25, 0x01	; 1
     4c2:	9f 93       	push	r25
     4c4:	8f 93       	push	r24
     4c6:	0e 94 fe 09 	call	0x13fc	; 0x13fc <printf>
					printf("Minimum Voltage Detected: %f\n", minimum_voltage);
     4ca:	ef 92       	push	r14
     4cc:	ff 92       	push	r15
     4ce:	0f 93       	push	r16
     4d0:	1f 93       	push	r17
     4d2:	83 ed       	ldi	r24, 0xD3	; 211
     4d4:	91 e0       	ldi	r25, 0x01	; 1
     4d6:	9f 93       	push	r25
     4d8:	8f 93       	push	r24
     4da:	0e 94 fe 09 	call	0x13fc	; 0x13fc <printf>
					if(samples_counter == 24){
     4de:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <samples_counter>
     4e2:	2d b7       	in	r18, 0x3d	; 61
     4e4:	3e b7       	in	r19, 0x3e	; 62
     4e6:	24 5f       	subi	r18, 0xF4	; 244
     4e8:	3f 4f       	sbci	r19, 0xFF	; 255
     4ea:	0f b6       	in	r0, 0x3f	; 63
     4ec:	f8 94       	cli
     4ee:	3e bf       	out	0x3e, r19	; 62
     4f0:	0f be       	out	0x3f, r0	; 63
     4f2:	2d bf       	out	0x3d, r18	; 61
     4f4:	88 31       	cpi	r24, 0x18	; 24
     4f6:	31 f4       	brne	.+12     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
						samples_counter = 0;
     4f8:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <samples_counter>
						raw_coil_voltage_index = 0;
     4fc:	10 92 f3 01 	sts	0x01F3, r1	; 0x8001f3 <raw_coil_voltage_index>
						raw_coil_current_index = 0;
     500:	10 92 f2 01 	sts	0x01F2, r1	; 0x8001f2 <__data_end>
					#ifdef CALCULATION_DEBUG_MODE
						double expected_power = calculate_power(digitized_adc_output_PC5, debug_COIL_CURRENT, debug_PWM_LIVE_TIME, debug_PWM_PERIOD);
						printf("Expected Power Consumption: %fW\n", expected_power);
					#endif
				#endif
				printf("\n");
     504:	8a e0       	ldi	r24, 0x0A	; 10
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	0e 94 14 0a 	call	0x1428	; 0x1428 <putchar>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     50c:	3f ef       	ldi	r19, 0xFF	; 255
     50e:	81 ee       	ldi	r24, 0xE1	; 225
     510:	94 e0       	ldi	r25, 0x04	; 4
     512:	31 50       	subi	r19, 0x01	; 1
     514:	80 40       	sbci	r24, 0x00	; 0
     516:	90 40       	sbci	r25, 0x00	; 0
     518:	e1 f7       	brne	.-8      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
     51a:	00 c0       	rjmp	.+0      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     51c:	00 00       	nop
			sei();
		}
		#endif
		
		#ifdef XPLAINED_MINI_LED_STROBE
			PORTB ^= (1 << PB5);
     51e:	85 b1       	in	r24, 0x05	; 5
     520:	86 25       	eor	r24, r6
     522:	85 b9       	out	0x05, r24	; 5
     524:	2f ef       	ldi	r18, 0xFF	; 255
     526:	31 ee       	ldi	r19, 0xE1	; 225
     528:	84 e0       	ldi	r24, 0x04	; 4
     52a:	21 50       	subi	r18, 0x01	; 1
     52c:	30 40       	sbci	r19, 0x00	; 0
     52e:	80 40       	sbci	r24, 0x00	; 0
     530:	e1 f7       	brne	.-8      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
     532:	00 c0       	rjmp	.+0      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
     534:	00 00       	nop
     536:	30 cf       	rjmp	.-416    	; 0x398 <main+0x48>

00000538 <__vector_16>:
	
	return 0;
}

/*** Interrupt Service Routine Definitions ***/
ISR(TIMER0_OVF_vect){
     538:	1f 92       	push	r1
     53a:	0f 92       	push	r0
     53c:	0f b6       	in	r0, 0x3f	; 63
     53e:	0f 92       	push	r0
     540:	11 24       	eor	r1, r1
	#else
	// Normal Operation Mode...
	OCR0A = new_PWM_frequency;			// this parameter needs a function to determine its values.
	#endif
	
}
     542:	0f 90       	pop	r0
     544:	0f be       	out	0x3f, r0	; 63
     546:	0f 90       	pop	r0
     548:	1f 90       	pop	r1
     54a:	18 95       	reti

0000054c <__vector_9>:

ISR(TIMER2_OVF_vect){
     54c:	1f 92       	push	r1
     54e:	0f 92       	push	r0
     550:	0f b6       	in	r0, 0x3f	; 63
     552:	0f 92       	push	r0
     554:	11 24       	eor	r1, r1
	#else
	// Normal Operation Mode
	OCR2A = new_PWM_frequency;
	#endif
	
}
     556:	0f 90       	pop	r0
     558:	0f be       	out	0x3f, r0	; 63
     55a:	0f 90       	pop	r0
     55c:	1f 90       	pop	r1
     55e:	18 95       	reti

00000560 <__vector_21>:

/*** Analog to Digital Conversion Complete Interrupt ***/
ISR(ADC_vect){
     560:	1f 92       	push	r1
     562:	0f 92       	push	r0
     564:	0f b6       	in	r0, 0x3f	; 63
     566:	0f 92       	push	r0
     568:	11 24       	eor	r1, r1
     56a:	2f 93       	push	r18
     56c:	3f 93       	push	r19
     56e:	8f 93       	push	r24
     570:	9f 93       	push	r25
     572:	ef 93       	push	r30
     574:	ff 93       	push	r31
	
	#ifdef ADC_DEBUG_MODE
	// Debugger Mode...
		#ifdef DISABLE_HALL_EFFECT_SENSORS
			if (samples_counter == 0 && ADC_next_channel == ADC_COIL_VOLTAGE_CHANNEL){
     576:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <samples_counter>
     57a:	81 11       	cpse	r24, r1
     57c:	14 c0       	rjmp	.+40     	; 0x5a6 <__vector_21+0x46>
     57e:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <ADC_next_channel>
     582:	82 30       	cpi	r24, 0x02	; 2
     584:	09 f0       	breq	.+2      	; 0x588 <__vector_21+0x28>
     586:	67 c0       	rjmp	.+206    	; 0x656 <__vector_21+0xf6>
				raw_maximum_voltage = ADC;	// Note: Only input in Channel 2 will be considered
     588:	e8 e7       	ldi	r30, 0x78	; 120
     58a:	f0 e0       	ldi	r31, 0x00	; 0
     58c:	80 81       	ld	r24, Z
     58e:	91 81       	ldd	r25, Z+1	; 0x01
     590:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <raw_maximum_voltage+0x1>
     594:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <raw_maximum_voltage>
				raw_minimum_voltage = ADC;
     598:	80 81       	ld	r24, Z
     59a:	91 81       	ldd	r25, Z+1	; 0x01
     59c:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <raw_minimum_voltage+0x1>
     5a0:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <raw_minimum_voltage>
     5a4:	05 c0       	rjmp	.+10     	; 0x5b0 <__vector_21+0x50>
			}
			if (ADC_next_channel == ADC_COIL_VOLTAGE_CHANNEL){
     5a6:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <ADC_next_channel>
     5aa:	82 30       	cpi	r24, 0x02	; 2
     5ac:	09 f0       	breq	.+2      	; 0x5b0 <__vector_21+0x50>
     5ae:	53 c0       	rjmp	.+166    	; 0x656 <__vector_21+0xf6>
				if(raw_coil_voltage_index < 24){
     5b0:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <raw_coil_voltage_index>
     5b4:	88 31       	cpi	r24, 0x18	; 24
     5b6:	68 f4       	brcc	.+26     	; 0x5d2 <__vector_21+0x72>
					raw_coil_voltages[raw_coil_voltage_index] = ADC;
     5b8:	e0 91 f3 01 	lds	r30, 0x01F3	; 0x8001f3 <raw_coil_voltage_index>
     5bc:	f0 e0       	ldi	r31, 0x00	; 0
     5be:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     5c2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     5c6:	ee 0f       	add	r30, r30
     5c8:	ff 1f       	adc	r31, r31
     5ca:	e8 5c       	subi	r30, 0xC8	; 200
     5cc:	fd 4f       	sbci	r31, 0xFD	; 253
     5ce:	91 83       	std	Z+1, r25	; 0x01
     5d0:	80 83       	st	Z, r24
				}
				if(ADC > raw_maximum_voltage){
     5d2:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     5d6:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     5da:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <raw_maximum_voltage>
     5de:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <raw_maximum_voltage+0x1>
     5e2:	82 17       	cp	r24, r18
     5e4:	93 07       	cpc	r25, r19
     5e6:	40 f4       	brcc	.+16     	; 0x5f8 <__vector_21+0x98>
					raw_maximum_voltage = ADC;
     5e8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     5ec:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     5f0:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <raw_maximum_voltage+0x1>
     5f4:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <raw_maximum_voltage>
				}
				if(ADC < raw_minimum_voltage){
     5f8:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     5fc:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     600:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <raw_minimum_voltage>
     604:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <raw_minimum_voltage+0x1>
     608:	28 17       	cp	r18, r24
     60a:	39 07       	cpc	r19, r25
     60c:	40 f4       	brcc	.+16     	; 0x61e <__vector_21+0xbe>
					raw_minimum_voltage = ADC;
     60e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     612:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     616:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <raw_minimum_voltage+0x1>
     61a:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <raw_minimum_voltage>
				}
				raw_coil_voltage_index++;
     61e:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <raw_coil_voltage_index>
     622:	8f 5f       	subi	r24, 0xFF	; 255
     624:	80 93 f3 01 	sts	0x01F3, r24	; 0x8001f3 <raw_coil_voltage_index>
				raw_ADC_output_PC2 = ADC;
     628:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     62c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     630:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <raw_ADC_output_PC2+0x1>
     634:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <raw_ADC_output_PC2>
				debug_ADC_channel = ADC_next_channel;
     638:	82 e0       	ldi	r24, 0x02	; 2
     63a:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <debug_ADC_channel>
				ADC_next_channel = ADC_COIL_CURRENT_CHANNEL;	// Next conversion is coil current shunt
     63e:	83 e0       	ldi	r24, 0x03	; 3
     640:	80 93 f5 01 	sts	0x01F5, r24	; 0x8001f5 <ADC_next_channel>
				ADMUX &= 0xf0;									// Reset to Channel 0
     644:	ec e7       	ldi	r30, 0x7C	; 124
     646:	f0 e0       	ldi	r31, 0x00	; 0
     648:	80 81       	ld	r24, Z
     64a:	80 7f       	andi	r24, 0xF0	; 240
     64c:	80 83       	st	Z, r24
				ADMUX |= 0x03;									// Set to Channel 3. (coil current shunt)
     64e:	80 81       	ld	r24, Z
     650:	83 60       	ori	r24, 0x03	; 3
     652:	80 83       	st	Z, r24
     654:	2e c0       	rjmp	.+92     	; 0x6b2 <__vector_21+0x152>
			}
			else if(ADC_next_channel == ADC_COIL_CURRENT_CHANNEL){
     656:	83 30       	cpi	r24, 0x03	; 3
     658:	61 f5       	brne	.+88     	; 0x6b2 <__vector_21+0x152>
				if(raw_coil_current_index < 24){
     65a:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__data_end>
     65e:	88 31       	cpi	r24, 0x18	; 24
     660:	68 f4       	brcc	.+26     	; 0x67c <__vector_21+0x11c>
					raw_coil_currents[raw_coil_current_index] = ADC;
     662:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <__data_end>
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     66c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     670:	ee 0f       	add	r30, r30
     672:	ff 1f       	adc	r31, r31
     674:	ea 50       	subi	r30, 0x0A	; 10
     676:	fe 4f       	sbci	r31, 0xFE	; 254
     678:	91 83       	std	Z+1, r25	; 0x01
     67a:	80 83       	st	Z, r24
				}
				raw_coil_current_index++;
     67c:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__data_end>
     680:	8f 5f       	subi	r24, 0xFF	; 255
     682:	80 93 f2 01 	sts	0x01F2, r24	; 0x8001f2 <__data_end>
				raw_ADC_output_PC3 = ADC;
     686:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     68a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     68e:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <raw_ADC_output_PC3+0x1>
     692:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <raw_ADC_output_PC3>
				debug_ADC_channel = ADC_next_channel;
     696:	83 e0       	ldi	r24, 0x03	; 3
     698:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <debug_ADC_channel>
				ADC_next_channel = ADC_COIL_VOLTAGE_CHANNEL;	// Next conversion is back to coil voltage sensor
     69c:	82 e0       	ldi	r24, 0x02	; 2
     69e:	80 93 f5 01 	sts	0x01F5, r24	; 0x8001f5 <ADC_next_channel>
				ADMUX &= 0xf0;									// Reset to Channel 0.
     6a2:	ec e7       	ldi	r30, 0x7C	; 124
     6a4:	f0 e0       	ldi	r31, 0x00	; 0
     6a6:	80 81       	ld	r24, Z
     6a8:	80 7f       	andi	r24, 0xF0	; 240
     6aa:	80 83       	st	Z, r24
				ADMUX |= 0x02;									// Set to Channel 5. (right hall effect sensor)
     6ac:	80 81       	ld	r24, Z
     6ae:	82 60       	ori	r24, 0x02	; 2
     6b0:	80 83       	st	Z, r24
			}
			samples_counter++;
     6b2:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <samples_counter>
     6b6:	8f 5f       	subi	r24, 0xFF	; 255
     6b8:	80 93 f4 01 	sts	0x01F4, r24	; 0x8001f4 <samples_counter>
				debug_ADC_channel = ADC_next_channel;
				ADC_next_channel = ADC_LEFT_HALL_CHANNEL;		// Next conversion is left hall effect sensor.
				ADMUX &= 0xf0;									// Reset to Channel 0. (left hall effect sensor)
			}
		#endif
		ADCSRA |= (1 << ADSC);
     6bc:	ea e7       	ldi	r30, 0x7A	; 122
     6be:	f0 e0       	ldi	r31, 0x00	; 0
     6c0:	80 81       	ld	r24, Z
     6c2:	80 64       	ori	r24, 0x40	; 64
     6c4:	80 83       	st	Z, r24
			}
		#endif
		ADCSRA |= (1 << ADSC);
	#endif
	
}
     6c6:	ff 91       	pop	r31
     6c8:	ef 91       	pop	r30
     6ca:	9f 91       	pop	r25
     6cc:	8f 91       	pop	r24
     6ce:	3f 91       	pop	r19
     6d0:	2f 91       	pop	r18
     6d2:	0f 90       	pop	r0
     6d4:	0f be       	out	0x3f, r0	; 63
     6d6:	0f 90       	pop	r0
     6d8:	1f 90       	pop	r1
     6da:	18 95       	reti

000006dc <timer0_init>:


void timer0_init(){
	
	/*** OCR0A: Output Compare Register A ***/
	OCR0A = 64;
     6dc:	80 e4       	ldi	r24, 0x40	; 64
     6de:	87 bd       	out	0x27, r24	; 39

	/*** TCCR0A: Timer/Counter Control Register A ***/
	/*** Compare Match Output A Mode ***/
	TCCR0A |=   (1 << COM0A1);		// Clear Output Compare Pin (OC0A) on Compare Match (non-inverting), Set OC0A at BOTTOM.
     6e0:	84 b5       	in	r24, 0x24	; 36
     6e2:	80 68       	ori	r24, 0x80	; 128
     6e4:	84 bd       	out	0x24, r24	; 36
	TCCR0A &=  ~(1 << COM0A0);
     6e6:	84 b5       	in	r24, 0x24	; 36
     6e8:	8f 7b       	andi	r24, 0xBF	; 191
     6ea:	84 bd       	out	0x24, r24	; 36
	
	/*** Waveform Generation Mode ***/
	TCCR0A |=  (1<< WGM02);			// Fast PWM Mode TOP = 0xff, Update OCR0A at BOTTOM, TOV at 0xff
     6ec:	84 b5       	in	r24, 0x24	; 36
     6ee:	88 60       	ori	r24, 0x08	; 8
     6f0:	84 bd       	out	0x24, r24	; 36
	TCCR0A |=  (1<< WGM01);
     6f2:	84 b5       	in	r24, 0x24	; 36
     6f4:	82 60       	ori	r24, 0x02	; 2
     6f6:	84 bd       	out	0x24, r24	; 36
	TCCR0A |=  (1<< WGM00);
     6f8:	84 b5       	in	r24, 0x24	; 36
     6fa:	81 60       	ori	r24, 0x01	; 1
     6fc:	84 bd       	out	0x24, r24	; 36
	/*** Force Output Compare B ***/
	//TCCR0B &= ~(1 << FOC0B);		// Force Output Compare B 'off'.
	
	/*** Clock Select Bits ***/
	// NOTES: CHANGE PRESCALER VALUE IF WE WANT TO PRODUCE SMALLER COUNT
	TCCR0B |= (1 << CS02);			// Pre-scaler 256
     6fe:	85 b5       	in	r24, 0x25	; 37
     700:	84 60       	ori	r24, 0x04	; 4
     702:	85 bd       	out	0x25, r24	; 37
	TCCR0B &= ~(1 << CS01);			// Timer Frequency = 62.5 KHz @Xplained Mini (F_CPU = 16MHz)
     704:	85 b5       	in	r24, 0x25	; 37
     706:	8d 7f       	andi	r24, 0xFD	; 253
     708:	85 bd       	out	0x25, r24	; 37
	TCCR0B &= ~(1 << CS00);			// Timer Frequency = 31.25 KHz @PCB (F_CPU = 8MHz)
     70a:	85 b5       	in	r24, 0x25	; 37
     70c:	8e 7f       	andi	r24, 0xFE	; 254
     70e:	85 bd       	out	0x25, r24	; 37
	/*** Timer / Counter 0 Output Compare Match A Interrupt ***/
	//TIMSK0 |=  (1 << OCIE0A);						// Interrupt when TCNT0 = OCR0A 'On'
	/*** Timer / Counter 0 Output Compare Match B Interrupt ***/
	//TIMSK0 &= ~(1 << OCIE0B);						// Interrupt when TCNT0 = OCR0B 'Off'
	/*** Timer / Counter 0 Overflow Interrupt Enable ***/
	TIMSK0 |=  (1 << TOIE0);						// Interrupt when Overflow On 
     710:	ee e6       	ldi	r30, 0x6E	; 110
     712:	f0 e0       	ldi	r31, 0x00	; 0
     714:	80 81       	ld	r24, Z
     716:	81 60       	ori	r24, 0x01	; 1
     718:	80 83       	st	Z, r24
     71a:	08 95       	ret

0000071c <timer2_init>:
}

void timer2_init(){
	
	/*** OCR2A: Output Compare Register A ***/
	OCR2A = 64;
     71c:	80 e4       	ldi	r24, 0x40	; 64
     71e:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>

	/*** TCCR2A: Timer/Counter Control Register A ***/
	/*** Compare Match Output A Mode ***/
	TCCR2A |=   (1 << COM2A1);		// Clear Output Compare Pin (OC2A) on Compare Match (non-inverting), Set OC2A at BOTTOM.
     722:	e0 eb       	ldi	r30, 0xB0	; 176
     724:	f0 e0       	ldi	r31, 0x00	; 0
     726:	80 81       	ld	r24, Z
     728:	80 68       	ori	r24, 0x80	; 128
     72a:	80 83       	st	Z, r24
	TCCR2A &=  ~(1 << COM2A0);
     72c:	80 81       	ld	r24, Z
     72e:	8f 7b       	andi	r24, 0xBF	; 191
     730:	80 83       	st	Z, r24
	
	/*** Waveform Generation Mode ***/
	TCCR2A |=  (1<< WGM22);			// Fast PWM Mode TOP = 0xff, Update OCR0A at BOTTOM, TOV at 0xff
     732:	80 81       	ld	r24, Z
     734:	88 60       	ori	r24, 0x08	; 8
     736:	80 83       	st	Z, r24
	TCCR2A |=  (1<< WGM21);
     738:	80 81       	ld	r24, Z
     73a:	82 60       	ori	r24, 0x02	; 2
     73c:	80 83       	st	Z, r24
	TCCR2A |=  (1<< WGM20);
     73e:	80 81       	ld	r24, Z
     740:	81 60       	ori	r24, 0x01	; 1
     742:	80 83       	st	Z, r24
	
	/*** Clock Select Bits ***/
	// NOTES: CHANGE PRESCALER VALUE IF WE WANT TO PRODUCE SMALLER COUNT
	TCCR2B |=  (1 << CS22);			// Pre-scaler 256
     744:	e1 eb       	ldi	r30, 0xB1	; 177
     746:	f0 e0       	ldi	r31, 0x00	; 0
     748:	80 81       	ld	r24, Z
     74a:	84 60       	ori	r24, 0x04	; 4
     74c:	80 83       	st	Z, r24
	TCCR2B |=  (1 << CS21);			// Timer Frequency = 62.5 KHz @Xplained Mini (F_CPU = 16MHz)
     74e:	80 81       	ld	r24, Z
     750:	82 60       	ori	r24, 0x02	; 2
     752:	80 83       	st	Z, r24
	TCCR2B &= ~(1 << CS20);			// Timer Frequency = 31.25 KHz @PCB (F_CPU = 8MHz)
     754:	80 81       	ld	r24, Z
     756:	8e 7f       	andi	r24, 0xFE	; 254
     758:	80 83       	st	Z, r24
	/*** Timer / Counter 0 Output Compare Match A Interrupt ***/
	//TIMSK0 |=  (1 << OCIE0A);						// Interrupt when TCNT0 = OCR0A 'On'
	/*** Timer / Counter 0 Output Compare Match B Interrupt ***/
	//TIMSK0 &= ~(1 << OCIE0B);						// Interrupt when TCNT0 = OCR0B 'Off'
	/*** Timer / Counter 0 Overflow Interrupt Enable ***/
	TIMSK2 |=  (1 << TOIE2);						// Interrupt when Overflow On
     75a:	e0 e7       	ldi	r30, 0x70	; 112
     75c:	f0 e0       	ldi	r31, 0x00	; 0
     75e:	80 81       	ld	r24, Z
     760:	81 60       	ori	r24, 0x01	; 1
     762:	80 83       	st	Z, r24
     764:	08 95       	ret

00000766 <__divsf3>:
     766:	0e 94 c7 03 	call	0x78e	; 0x78e <__divsf3x>
     76a:	0c 94 79 04 	jmp	0x8f2	; 0x8f2 <__fp_round>
     76e:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__fp_pscB>
     772:	58 f0       	brcs	.+22     	; 0x78a <__divsf3+0x24>
     774:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__fp_pscA>
     778:	40 f0       	brcs	.+16     	; 0x78a <__divsf3+0x24>
     77a:	29 f4       	brne	.+10     	; 0x786 <__divsf3+0x20>
     77c:	5f 3f       	cpi	r21, 0xFF	; 255
     77e:	29 f0       	breq	.+10     	; 0x78a <__divsf3+0x24>
     780:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_inf>
     784:	51 11       	cpse	r21, r1
     786:	0c 94 ad 04 	jmp	0x95a	; 0x95a <__fp_szero>
     78a:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <__fp_nan>

0000078e <__divsf3x>:
     78e:	0e 94 8a 04 	call	0x914	; 0x914 <__fp_split3>
     792:	68 f3       	brcs	.-38     	; 0x76e <__divsf3+0x8>

00000794 <__divsf3_pse>:
     794:	99 23       	and	r25, r25
     796:	b1 f3       	breq	.-20     	; 0x784 <__divsf3+0x1e>
     798:	55 23       	and	r21, r21
     79a:	91 f3       	breq	.-28     	; 0x780 <__divsf3+0x1a>
     79c:	95 1b       	sub	r25, r21
     79e:	55 0b       	sbc	r21, r21
     7a0:	bb 27       	eor	r27, r27
     7a2:	aa 27       	eor	r26, r26
     7a4:	62 17       	cp	r22, r18
     7a6:	73 07       	cpc	r23, r19
     7a8:	84 07       	cpc	r24, r20
     7aa:	38 f0       	brcs	.+14     	; 0x7ba <__divsf3_pse+0x26>
     7ac:	9f 5f       	subi	r25, 0xFF	; 255
     7ae:	5f 4f       	sbci	r21, 0xFF	; 255
     7b0:	22 0f       	add	r18, r18
     7b2:	33 1f       	adc	r19, r19
     7b4:	44 1f       	adc	r20, r20
     7b6:	aa 1f       	adc	r26, r26
     7b8:	a9 f3       	breq	.-22     	; 0x7a4 <__divsf3_pse+0x10>
     7ba:	35 d0       	rcall	.+106    	; 0x826 <__divsf3_pse+0x92>
     7bc:	0e 2e       	mov	r0, r30
     7be:	3a f0       	brmi	.+14     	; 0x7ce <__divsf3_pse+0x3a>
     7c0:	e0 e8       	ldi	r30, 0x80	; 128
     7c2:	32 d0       	rcall	.+100    	; 0x828 <__divsf3_pse+0x94>
     7c4:	91 50       	subi	r25, 0x01	; 1
     7c6:	50 40       	sbci	r21, 0x00	; 0
     7c8:	e6 95       	lsr	r30
     7ca:	00 1c       	adc	r0, r0
     7cc:	ca f7       	brpl	.-14     	; 0x7c0 <__divsf3_pse+0x2c>
     7ce:	2b d0       	rcall	.+86     	; 0x826 <__divsf3_pse+0x92>
     7d0:	fe 2f       	mov	r31, r30
     7d2:	29 d0       	rcall	.+82     	; 0x826 <__divsf3_pse+0x92>
     7d4:	66 0f       	add	r22, r22
     7d6:	77 1f       	adc	r23, r23
     7d8:	88 1f       	adc	r24, r24
     7da:	bb 1f       	adc	r27, r27
     7dc:	26 17       	cp	r18, r22
     7de:	37 07       	cpc	r19, r23
     7e0:	48 07       	cpc	r20, r24
     7e2:	ab 07       	cpc	r26, r27
     7e4:	b0 e8       	ldi	r27, 0x80	; 128
     7e6:	09 f0       	breq	.+2      	; 0x7ea <__divsf3_pse+0x56>
     7e8:	bb 0b       	sbc	r27, r27
     7ea:	80 2d       	mov	r24, r0
     7ec:	bf 01       	movw	r22, r30
     7ee:	ff 27       	eor	r31, r31
     7f0:	93 58       	subi	r25, 0x83	; 131
     7f2:	5f 4f       	sbci	r21, 0xFF	; 255
     7f4:	3a f0       	brmi	.+14     	; 0x804 <__divsf3_pse+0x70>
     7f6:	9e 3f       	cpi	r25, 0xFE	; 254
     7f8:	51 05       	cpc	r21, r1
     7fa:	78 f0       	brcs	.+30     	; 0x81a <__divsf3_pse+0x86>
     7fc:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_inf>
     800:	0c 94 ad 04 	jmp	0x95a	; 0x95a <__fp_szero>
     804:	5f 3f       	cpi	r21, 0xFF	; 255
     806:	e4 f3       	brlt	.-8      	; 0x800 <__divsf3_pse+0x6c>
     808:	98 3e       	cpi	r25, 0xE8	; 232
     80a:	d4 f3       	brlt	.-12     	; 0x800 <__divsf3_pse+0x6c>
     80c:	86 95       	lsr	r24
     80e:	77 95       	ror	r23
     810:	67 95       	ror	r22
     812:	b7 95       	ror	r27
     814:	f7 95       	ror	r31
     816:	9f 5f       	subi	r25, 0xFF	; 255
     818:	c9 f7       	brne	.-14     	; 0x80c <__divsf3_pse+0x78>
     81a:	88 0f       	add	r24, r24
     81c:	91 1d       	adc	r25, r1
     81e:	96 95       	lsr	r25
     820:	87 95       	ror	r24
     822:	97 f9       	bld	r25, 7
     824:	08 95       	ret
     826:	e1 e0       	ldi	r30, 0x01	; 1
     828:	66 0f       	add	r22, r22
     82a:	77 1f       	adc	r23, r23
     82c:	88 1f       	adc	r24, r24
     82e:	bb 1f       	adc	r27, r27
     830:	62 17       	cp	r22, r18
     832:	73 07       	cpc	r23, r19
     834:	84 07       	cpc	r24, r20
     836:	ba 07       	cpc	r27, r26
     838:	20 f0       	brcs	.+8      	; 0x842 <__divsf3_pse+0xae>
     83a:	62 1b       	sub	r22, r18
     83c:	73 0b       	sbc	r23, r19
     83e:	84 0b       	sbc	r24, r20
     840:	ba 0b       	sbc	r27, r26
     842:	ee 1f       	adc	r30, r30
     844:	88 f7       	brcc	.-30     	; 0x828 <__divsf3_pse+0x94>
     846:	e0 95       	com	r30
     848:	08 95       	ret

0000084a <__floatunsisf>:
     84a:	e8 94       	clt
     84c:	09 c0       	rjmp	.+18     	; 0x860 <__floatsisf+0x12>

0000084e <__floatsisf>:
     84e:	97 fb       	bst	r25, 7
     850:	3e f4       	brtc	.+14     	; 0x860 <__floatsisf+0x12>
     852:	90 95       	com	r25
     854:	80 95       	com	r24
     856:	70 95       	com	r23
     858:	61 95       	neg	r22
     85a:	7f 4f       	sbci	r23, 0xFF	; 255
     85c:	8f 4f       	sbci	r24, 0xFF	; 255
     85e:	9f 4f       	sbci	r25, 0xFF	; 255
     860:	99 23       	and	r25, r25
     862:	a9 f0       	breq	.+42     	; 0x88e <__floatsisf+0x40>
     864:	f9 2f       	mov	r31, r25
     866:	96 e9       	ldi	r25, 0x96	; 150
     868:	bb 27       	eor	r27, r27
     86a:	93 95       	inc	r25
     86c:	f6 95       	lsr	r31
     86e:	87 95       	ror	r24
     870:	77 95       	ror	r23
     872:	67 95       	ror	r22
     874:	b7 95       	ror	r27
     876:	f1 11       	cpse	r31, r1
     878:	f8 cf       	rjmp	.-16     	; 0x86a <__floatsisf+0x1c>
     87a:	fa f4       	brpl	.+62     	; 0x8ba <__floatsisf+0x6c>
     87c:	bb 0f       	add	r27, r27
     87e:	11 f4       	brne	.+4      	; 0x884 <__floatsisf+0x36>
     880:	60 ff       	sbrs	r22, 0
     882:	1b c0       	rjmp	.+54     	; 0x8ba <__floatsisf+0x6c>
     884:	6f 5f       	subi	r22, 0xFF	; 255
     886:	7f 4f       	sbci	r23, 0xFF	; 255
     888:	8f 4f       	sbci	r24, 0xFF	; 255
     88a:	9f 4f       	sbci	r25, 0xFF	; 255
     88c:	16 c0       	rjmp	.+44     	; 0x8ba <__floatsisf+0x6c>
     88e:	88 23       	and	r24, r24
     890:	11 f0       	breq	.+4      	; 0x896 <__floatsisf+0x48>
     892:	96 e9       	ldi	r25, 0x96	; 150
     894:	11 c0       	rjmp	.+34     	; 0x8b8 <__floatsisf+0x6a>
     896:	77 23       	and	r23, r23
     898:	21 f0       	breq	.+8      	; 0x8a2 <__floatsisf+0x54>
     89a:	9e e8       	ldi	r25, 0x8E	; 142
     89c:	87 2f       	mov	r24, r23
     89e:	76 2f       	mov	r23, r22
     8a0:	05 c0       	rjmp	.+10     	; 0x8ac <__floatsisf+0x5e>
     8a2:	66 23       	and	r22, r22
     8a4:	71 f0       	breq	.+28     	; 0x8c2 <__floatsisf+0x74>
     8a6:	96 e8       	ldi	r25, 0x86	; 134
     8a8:	86 2f       	mov	r24, r22
     8aa:	70 e0       	ldi	r23, 0x00	; 0
     8ac:	60 e0       	ldi	r22, 0x00	; 0
     8ae:	2a f0       	brmi	.+10     	; 0x8ba <__floatsisf+0x6c>
     8b0:	9a 95       	dec	r25
     8b2:	66 0f       	add	r22, r22
     8b4:	77 1f       	adc	r23, r23
     8b6:	88 1f       	adc	r24, r24
     8b8:	da f7       	brpl	.-10     	; 0x8b0 <__floatsisf+0x62>
     8ba:	88 0f       	add	r24, r24
     8bc:	96 95       	lsr	r25
     8be:	87 95       	ror	r24
     8c0:	97 f9       	bld	r25, 7
     8c2:	08 95       	ret

000008c4 <__fp_inf>:
     8c4:	97 f9       	bld	r25, 7
     8c6:	9f 67       	ori	r25, 0x7F	; 127
     8c8:	80 e8       	ldi	r24, 0x80	; 128
     8ca:	70 e0       	ldi	r23, 0x00	; 0
     8cc:	60 e0       	ldi	r22, 0x00	; 0
     8ce:	08 95       	ret

000008d0 <__fp_nan>:
     8d0:	9f ef       	ldi	r25, 0xFF	; 255
     8d2:	80 ec       	ldi	r24, 0xC0	; 192
     8d4:	08 95       	ret

000008d6 <__fp_pscA>:
     8d6:	00 24       	eor	r0, r0
     8d8:	0a 94       	dec	r0
     8da:	16 16       	cp	r1, r22
     8dc:	17 06       	cpc	r1, r23
     8de:	18 06       	cpc	r1, r24
     8e0:	09 06       	cpc	r0, r25
     8e2:	08 95       	ret

000008e4 <__fp_pscB>:
     8e4:	00 24       	eor	r0, r0
     8e6:	0a 94       	dec	r0
     8e8:	12 16       	cp	r1, r18
     8ea:	13 06       	cpc	r1, r19
     8ec:	14 06       	cpc	r1, r20
     8ee:	05 06       	cpc	r0, r21
     8f0:	08 95       	ret

000008f2 <__fp_round>:
     8f2:	09 2e       	mov	r0, r25
     8f4:	03 94       	inc	r0
     8f6:	00 0c       	add	r0, r0
     8f8:	11 f4       	brne	.+4      	; 0x8fe <__fp_round+0xc>
     8fa:	88 23       	and	r24, r24
     8fc:	52 f0       	brmi	.+20     	; 0x912 <__stack+0x13>
     8fe:	bb 0f       	add	r27, r27
     900:	40 f4       	brcc	.+16     	; 0x912 <__stack+0x13>
     902:	bf 2b       	or	r27, r31
     904:	11 f4       	brne	.+4      	; 0x90a <__stack+0xb>
     906:	60 ff       	sbrs	r22, 0
     908:	04 c0       	rjmp	.+8      	; 0x912 <__stack+0x13>
     90a:	6f 5f       	subi	r22, 0xFF	; 255
     90c:	7f 4f       	sbci	r23, 0xFF	; 255
     90e:	8f 4f       	sbci	r24, 0xFF	; 255
     910:	9f 4f       	sbci	r25, 0xFF	; 255
     912:	08 95       	ret

00000914 <__fp_split3>:
     914:	57 fd       	sbrc	r21, 7
     916:	90 58       	subi	r25, 0x80	; 128
     918:	44 0f       	add	r20, r20
     91a:	55 1f       	adc	r21, r21
     91c:	59 f0       	breq	.+22     	; 0x934 <__fp_splitA+0x10>
     91e:	5f 3f       	cpi	r21, 0xFF	; 255
     920:	71 f0       	breq	.+28     	; 0x93e <__fp_splitA+0x1a>
     922:	47 95       	ror	r20

00000924 <__fp_splitA>:
     924:	88 0f       	add	r24, r24
     926:	97 fb       	bst	r25, 7
     928:	99 1f       	adc	r25, r25
     92a:	61 f0       	breq	.+24     	; 0x944 <__fp_splitA+0x20>
     92c:	9f 3f       	cpi	r25, 0xFF	; 255
     92e:	79 f0       	breq	.+30     	; 0x94e <__fp_splitA+0x2a>
     930:	87 95       	ror	r24
     932:	08 95       	ret
     934:	12 16       	cp	r1, r18
     936:	13 06       	cpc	r1, r19
     938:	14 06       	cpc	r1, r20
     93a:	55 1f       	adc	r21, r21
     93c:	f2 cf       	rjmp	.-28     	; 0x922 <__fp_split3+0xe>
     93e:	46 95       	lsr	r20
     940:	f1 df       	rcall	.-30     	; 0x924 <__fp_splitA>
     942:	08 c0       	rjmp	.+16     	; 0x954 <__fp_splitA+0x30>
     944:	16 16       	cp	r1, r22
     946:	17 06       	cpc	r1, r23
     948:	18 06       	cpc	r1, r24
     94a:	99 1f       	adc	r25, r25
     94c:	f1 cf       	rjmp	.-30     	; 0x930 <__fp_splitA+0xc>
     94e:	86 95       	lsr	r24
     950:	71 05       	cpc	r23, r1
     952:	61 05       	cpc	r22, r1
     954:	08 94       	sec
     956:	08 95       	ret

00000958 <__fp_zero>:
     958:	e8 94       	clt

0000095a <__fp_szero>:
     95a:	bb 27       	eor	r27, r27
     95c:	66 27       	eor	r22, r22
     95e:	77 27       	eor	r23, r23
     960:	cb 01       	movw	r24, r22
     962:	97 f9       	bld	r25, 7
     964:	08 95       	ret

00000966 <__mulsf3>:
     966:	0e 94 c6 04 	call	0x98c	; 0x98c <__mulsf3x>
     96a:	0c 94 79 04 	jmp	0x8f2	; 0x8f2 <__fp_round>
     96e:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__fp_pscA>
     972:	38 f0       	brcs	.+14     	; 0x982 <__mulsf3+0x1c>
     974:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__fp_pscB>
     978:	20 f0       	brcs	.+8      	; 0x982 <__mulsf3+0x1c>
     97a:	95 23       	and	r25, r21
     97c:	11 f0       	breq	.+4      	; 0x982 <__mulsf3+0x1c>
     97e:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_inf>
     982:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <__fp_nan>
     986:	11 24       	eor	r1, r1
     988:	0c 94 ad 04 	jmp	0x95a	; 0x95a <__fp_szero>

0000098c <__mulsf3x>:
     98c:	0e 94 8a 04 	call	0x914	; 0x914 <__fp_split3>
     990:	70 f3       	brcs	.-36     	; 0x96e <__mulsf3+0x8>

00000992 <__mulsf3_pse>:
     992:	95 9f       	mul	r25, r21
     994:	c1 f3       	breq	.-16     	; 0x986 <__mulsf3+0x20>
     996:	95 0f       	add	r25, r21
     998:	50 e0       	ldi	r21, 0x00	; 0
     99a:	55 1f       	adc	r21, r21
     99c:	62 9f       	mul	r22, r18
     99e:	f0 01       	movw	r30, r0
     9a0:	72 9f       	mul	r23, r18
     9a2:	bb 27       	eor	r27, r27
     9a4:	f0 0d       	add	r31, r0
     9a6:	b1 1d       	adc	r27, r1
     9a8:	63 9f       	mul	r22, r19
     9aa:	aa 27       	eor	r26, r26
     9ac:	f0 0d       	add	r31, r0
     9ae:	b1 1d       	adc	r27, r1
     9b0:	aa 1f       	adc	r26, r26
     9b2:	64 9f       	mul	r22, r20
     9b4:	66 27       	eor	r22, r22
     9b6:	b0 0d       	add	r27, r0
     9b8:	a1 1d       	adc	r26, r1
     9ba:	66 1f       	adc	r22, r22
     9bc:	82 9f       	mul	r24, r18
     9be:	22 27       	eor	r18, r18
     9c0:	b0 0d       	add	r27, r0
     9c2:	a1 1d       	adc	r26, r1
     9c4:	62 1f       	adc	r22, r18
     9c6:	73 9f       	mul	r23, r19
     9c8:	b0 0d       	add	r27, r0
     9ca:	a1 1d       	adc	r26, r1
     9cc:	62 1f       	adc	r22, r18
     9ce:	83 9f       	mul	r24, r19
     9d0:	a0 0d       	add	r26, r0
     9d2:	61 1d       	adc	r22, r1
     9d4:	22 1f       	adc	r18, r18
     9d6:	74 9f       	mul	r23, r20
     9d8:	33 27       	eor	r19, r19
     9da:	a0 0d       	add	r26, r0
     9dc:	61 1d       	adc	r22, r1
     9de:	23 1f       	adc	r18, r19
     9e0:	84 9f       	mul	r24, r20
     9e2:	60 0d       	add	r22, r0
     9e4:	21 1d       	adc	r18, r1
     9e6:	82 2f       	mov	r24, r18
     9e8:	76 2f       	mov	r23, r22
     9ea:	6a 2f       	mov	r22, r26
     9ec:	11 24       	eor	r1, r1
     9ee:	9f 57       	subi	r25, 0x7F	; 127
     9f0:	50 40       	sbci	r21, 0x00	; 0
     9f2:	9a f0       	brmi	.+38     	; 0xa1a <__mulsf3_pse+0x88>
     9f4:	f1 f0       	breq	.+60     	; 0xa32 <__mulsf3_pse+0xa0>
     9f6:	88 23       	and	r24, r24
     9f8:	4a f0       	brmi	.+18     	; 0xa0c <__mulsf3_pse+0x7a>
     9fa:	ee 0f       	add	r30, r30
     9fc:	ff 1f       	adc	r31, r31
     9fe:	bb 1f       	adc	r27, r27
     a00:	66 1f       	adc	r22, r22
     a02:	77 1f       	adc	r23, r23
     a04:	88 1f       	adc	r24, r24
     a06:	91 50       	subi	r25, 0x01	; 1
     a08:	50 40       	sbci	r21, 0x00	; 0
     a0a:	a9 f7       	brne	.-22     	; 0x9f6 <__mulsf3_pse+0x64>
     a0c:	9e 3f       	cpi	r25, 0xFE	; 254
     a0e:	51 05       	cpc	r21, r1
     a10:	80 f0       	brcs	.+32     	; 0xa32 <__mulsf3_pse+0xa0>
     a12:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_inf>
     a16:	0c 94 ad 04 	jmp	0x95a	; 0x95a <__fp_szero>
     a1a:	5f 3f       	cpi	r21, 0xFF	; 255
     a1c:	e4 f3       	brlt	.-8      	; 0xa16 <__mulsf3_pse+0x84>
     a1e:	98 3e       	cpi	r25, 0xE8	; 232
     a20:	d4 f3       	brlt	.-12     	; 0xa16 <__mulsf3_pse+0x84>
     a22:	86 95       	lsr	r24
     a24:	77 95       	ror	r23
     a26:	67 95       	ror	r22
     a28:	b7 95       	ror	r27
     a2a:	f7 95       	ror	r31
     a2c:	e7 95       	ror	r30
     a2e:	9f 5f       	subi	r25, 0xFF	; 255
     a30:	c1 f7       	brne	.-16     	; 0xa22 <__mulsf3_pse+0x90>
     a32:	fe 2b       	or	r31, r30
     a34:	88 0f       	add	r24, r24
     a36:	91 1d       	adc	r25, r1
     a38:	96 95       	lsr	r25
     a3a:	87 95       	ror	r24
     a3c:	97 f9       	bld	r25, 7
     a3e:	08 95       	ret

00000a40 <vfprintf>:
     a40:	a0 e1       	ldi	r26, 0x10	; 16
     a42:	b0 e0       	ldi	r27, 0x00	; 0
     a44:	e6 e2       	ldi	r30, 0x26	; 38
     a46:	f5 e0       	ldi	r31, 0x05	; 5
     a48:	0c 94 9d 08 	jmp	0x113a	; 0x113a <__prologue_saves__>
     a4c:	7c 01       	movw	r14, r24
     a4e:	1b 01       	movw	r2, r22
     a50:	6a 01       	movw	r12, r20
     a52:	fc 01       	movw	r30, r24
     a54:	17 82       	std	Z+7, r1	; 0x07
     a56:	16 82       	std	Z+6, r1	; 0x06
     a58:	83 81       	ldd	r24, Z+3	; 0x03
     a5a:	81 ff       	sbrs	r24, 1
     a5c:	44 c3       	rjmp	.+1672   	; 0x10e6 <vfprintf+0x6a6>
     a5e:	9e 01       	movw	r18, r28
     a60:	2f 5f       	subi	r18, 0xFF	; 255
     a62:	3f 4f       	sbci	r19, 0xFF	; 255
     a64:	39 01       	movw	r6, r18
     a66:	f7 01       	movw	r30, r14
     a68:	93 81       	ldd	r25, Z+3	; 0x03
     a6a:	f1 01       	movw	r30, r2
     a6c:	93 fd       	sbrc	r25, 3
     a6e:	85 91       	lpm	r24, Z+
     a70:	93 ff       	sbrs	r25, 3
     a72:	81 91       	ld	r24, Z+
     a74:	1f 01       	movw	r2, r30
     a76:	88 23       	and	r24, r24
     a78:	09 f4       	brne	.+2      	; 0xa7c <vfprintf+0x3c>
     a7a:	31 c3       	rjmp	.+1634   	; 0x10de <vfprintf+0x69e>
     a7c:	85 32       	cpi	r24, 0x25	; 37
     a7e:	39 f4       	brne	.+14     	; 0xa8e <vfprintf+0x4e>
     a80:	93 fd       	sbrc	r25, 3
     a82:	85 91       	lpm	r24, Z+
     a84:	93 ff       	sbrs	r25, 3
     a86:	81 91       	ld	r24, Z+
     a88:	1f 01       	movw	r2, r30
     a8a:	85 32       	cpi	r24, 0x25	; 37
     a8c:	39 f4       	brne	.+14     	; 0xa9c <vfprintf+0x5c>
     a8e:	b7 01       	movw	r22, r14
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     a96:	56 01       	movw	r10, r12
     a98:	65 01       	movw	r12, r10
     a9a:	e5 cf       	rjmp	.-54     	; 0xa66 <vfprintf+0x26>
     a9c:	10 e0       	ldi	r17, 0x00	; 0
     a9e:	51 2c       	mov	r5, r1
     aa0:	91 2c       	mov	r9, r1
     aa2:	ff e1       	ldi	r31, 0x1F	; 31
     aa4:	f9 15       	cp	r31, r9
     aa6:	d8 f0       	brcs	.+54     	; 0xade <vfprintf+0x9e>
     aa8:	8b 32       	cpi	r24, 0x2B	; 43
     aaa:	79 f0       	breq	.+30     	; 0xaca <vfprintf+0x8a>
     aac:	38 f4       	brcc	.+14     	; 0xabc <vfprintf+0x7c>
     aae:	80 32       	cpi	r24, 0x20	; 32
     ab0:	79 f0       	breq	.+30     	; 0xad0 <vfprintf+0x90>
     ab2:	83 32       	cpi	r24, 0x23	; 35
     ab4:	a1 f4       	brne	.+40     	; 0xade <vfprintf+0x9e>
     ab6:	f9 2d       	mov	r31, r9
     ab8:	f0 61       	ori	r31, 0x10	; 16
     aba:	2e c0       	rjmp	.+92     	; 0xb18 <vfprintf+0xd8>
     abc:	8d 32       	cpi	r24, 0x2D	; 45
     abe:	61 f0       	breq	.+24     	; 0xad8 <vfprintf+0x98>
     ac0:	80 33       	cpi	r24, 0x30	; 48
     ac2:	69 f4       	brne	.+26     	; 0xade <vfprintf+0x9e>
     ac4:	29 2d       	mov	r18, r9
     ac6:	21 60       	ori	r18, 0x01	; 1
     ac8:	2d c0       	rjmp	.+90     	; 0xb24 <vfprintf+0xe4>
     aca:	39 2d       	mov	r19, r9
     acc:	32 60       	ori	r19, 0x02	; 2
     ace:	93 2e       	mov	r9, r19
     ad0:	89 2d       	mov	r24, r9
     ad2:	84 60       	ori	r24, 0x04	; 4
     ad4:	98 2e       	mov	r9, r24
     ad6:	2a c0       	rjmp	.+84     	; 0xb2c <vfprintf+0xec>
     ad8:	e9 2d       	mov	r30, r9
     ada:	e8 60       	ori	r30, 0x08	; 8
     adc:	15 c0       	rjmp	.+42     	; 0xb08 <vfprintf+0xc8>
     ade:	97 fc       	sbrc	r9, 7
     ae0:	2d c0       	rjmp	.+90     	; 0xb3c <vfprintf+0xfc>
     ae2:	20 ed       	ldi	r18, 0xD0	; 208
     ae4:	28 0f       	add	r18, r24
     ae6:	2a 30       	cpi	r18, 0x0A	; 10
     ae8:	88 f4       	brcc	.+34     	; 0xb0c <vfprintf+0xcc>
     aea:	96 fe       	sbrs	r9, 6
     aec:	06 c0       	rjmp	.+12     	; 0xafa <vfprintf+0xba>
     aee:	3a e0       	ldi	r19, 0x0A	; 10
     af0:	13 9f       	mul	r17, r19
     af2:	20 0d       	add	r18, r0
     af4:	11 24       	eor	r1, r1
     af6:	12 2f       	mov	r17, r18
     af8:	19 c0       	rjmp	.+50     	; 0xb2c <vfprintf+0xec>
     afa:	8a e0       	ldi	r24, 0x0A	; 10
     afc:	58 9e       	mul	r5, r24
     afe:	20 0d       	add	r18, r0
     b00:	11 24       	eor	r1, r1
     b02:	52 2e       	mov	r5, r18
     b04:	e9 2d       	mov	r30, r9
     b06:	e0 62       	ori	r30, 0x20	; 32
     b08:	9e 2e       	mov	r9, r30
     b0a:	10 c0       	rjmp	.+32     	; 0xb2c <vfprintf+0xec>
     b0c:	8e 32       	cpi	r24, 0x2E	; 46
     b0e:	31 f4       	brne	.+12     	; 0xb1c <vfprintf+0xdc>
     b10:	96 fc       	sbrc	r9, 6
     b12:	e5 c2       	rjmp	.+1482   	; 0x10de <vfprintf+0x69e>
     b14:	f9 2d       	mov	r31, r9
     b16:	f0 64       	ori	r31, 0x40	; 64
     b18:	9f 2e       	mov	r9, r31
     b1a:	08 c0       	rjmp	.+16     	; 0xb2c <vfprintf+0xec>
     b1c:	8c 36       	cpi	r24, 0x6C	; 108
     b1e:	21 f4       	brne	.+8      	; 0xb28 <vfprintf+0xe8>
     b20:	29 2d       	mov	r18, r9
     b22:	20 68       	ori	r18, 0x80	; 128
     b24:	92 2e       	mov	r9, r18
     b26:	02 c0       	rjmp	.+4      	; 0xb2c <vfprintf+0xec>
     b28:	88 36       	cpi	r24, 0x68	; 104
     b2a:	41 f4       	brne	.+16     	; 0xb3c <vfprintf+0xfc>
     b2c:	f1 01       	movw	r30, r2
     b2e:	93 fd       	sbrc	r25, 3
     b30:	85 91       	lpm	r24, Z+
     b32:	93 ff       	sbrs	r25, 3
     b34:	81 91       	ld	r24, Z+
     b36:	1f 01       	movw	r2, r30
     b38:	81 11       	cpse	r24, r1
     b3a:	b3 cf       	rjmp	.-154    	; 0xaa2 <vfprintf+0x62>
     b3c:	9b eb       	ldi	r25, 0xBB	; 187
     b3e:	98 0f       	add	r25, r24
     b40:	93 30       	cpi	r25, 0x03	; 3
     b42:	20 f4       	brcc	.+8      	; 0xb4c <vfprintf+0x10c>
     b44:	99 2d       	mov	r25, r9
     b46:	90 61       	ori	r25, 0x10	; 16
     b48:	80 5e       	subi	r24, 0xE0	; 224
     b4a:	07 c0       	rjmp	.+14     	; 0xb5a <vfprintf+0x11a>
     b4c:	9b e9       	ldi	r25, 0x9B	; 155
     b4e:	98 0f       	add	r25, r24
     b50:	93 30       	cpi	r25, 0x03	; 3
     b52:	08 f0       	brcs	.+2      	; 0xb56 <vfprintf+0x116>
     b54:	66 c1       	rjmp	.+716    	; 0xe22 <vfprintf+0x3e2>
     b56:	99 2d       	mov	r25, r9
     b58:	9f 7e       	andi	r25, 0xEF	; 239
     b5a:	96 ff       	sbrs	r25, 6
     b5c:	16 e0       	ldi	r17, 0x06	; 6
     b5e:	9f 73       	andi	r25, 0x3F	; 63
     b60:	99 2e       	mov	r9, r25
     b62:	85 36       	cpi	r24, 0x65	; 101
     b64:	19 f4       	brne	.+6      	; 0xb6c <vfprintf+0x12c>
     b66:	90 64       	ori	r25, 0x40	; 64
     b68:	99 2e       	mov	r9, r25
     b6a:	08 c0       	rjmp	.+16     	; 0xb7c <vfprintf+0x13c>
     b6c:	86 36       	cpi	r24, 0x66	; 102
     b6e:	21 f4       	brne	.+8      	; 0xb78 <vfprintf+0x138>
     b70:	39 2f       	mov	r19, r25
     b72:	30 68       	ori	r19, 0x80	; 128
     b74:	93 2e       	mov	r9, r19
     b76:	02 c0       	rjmp	.+4      	; 0xb7c <vfprintf+0x13c>
     b78:	11 11       	cpse	r17, r1
     b7a:	11 50       	subi	r17, 0x01	; 1
     b7c:	97 fe       	sbrs	r9, 7
     b7e:	07 c0       	rjmp	.+14     	; 0xb8e <vfprintf+0x14e>
     b80:	1c 33       	cpi	r17, 0x3C	; 60
     b82:	50 f4       	brcc	.+20     	; 0xb98 <vfprintf+0x158>
     b84:	44 24       	eor	r4, r4
     b86:	43 94       	inc	r4
     b88:	41 0e       	add	r4, r17
     b8a:	27 e0       	ldi	r18, 0x07	; 7
     b8c:	0b c0       	rjmp	.+22     	; 0xba4 <vfprintf+0x164>
     b8e:	18 30       	cpi	r17, 0x08	; 8
     b90:	38 f0       	brcs	.+14     	; 0xba0 <vfprintf+0x160>
     b92:	27 e0       	ldi	r18, 0x07	; 7
     b94:	17 e0       	ldi	r17, 0x07	; 7
     b96:	05 c0       	rjmp	.+10     	; 0xba2 <vfprintf+0x162>
     b98:	27 e0       	ldi	r18, 0x07	; 7
     b9a:	9c e3       	ldi	r25, 0x3C	; 60
     b9c:	49 2e       	mov	r4, r25
     b9e:	02 c0       	rjmp	.+4      	; 0xba4 <vfprintf+0x164>
     ba0:	21 2f       	mov	r18, r17
     ba2:	41 2c       	mov	r4, r1
     ba4:	56 01       	movw	r10, r12
     ba6:	84 e0       	ldi	r24, 0x04	; 4
     ba8:	a8 0e       	add	r10, r24
     baa:	b1 1c       	adc	r11, r1
     bac:	f6 01       	movw	r30, r12
     bae:	60 81       	ld	r22, Z
     bb0:	71 81       	ldd	r23, Z+1	; 0x01
     bb2:	82 81       	ldd	r24, Z+2	; 0x02
     bb4:	93 81       	ldd	r25, Z+3	; 0x03
     bb6:	04 2d       	mov	r16, r4
     bb8:	a3 01       	movw	r20, r6
     bba:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <__ftoa_engine>
     bbe:	6c 01       	movw	r12, r24
     bc0:	f9 81       	ldd	r31, Y+1	; 0x01
     bc2:	fc 87       	std	Y+12, r31	; 0x0c
     bc4:	f0 ff       	sbrs	r31, 0
     bc6:	02 c0       	rjmp	.+4      	; 0xbcc <vfprintf+0x18c>
     bc8:	f3 ff       	sbrs	r31, 3
     bca:	06 c0       	rjmp	.+12     	; 0xbd8 <vfprintf+0x198>
     bcc:	91 fc       	sbrc	r9, 1
     bce:	06 c0       	rjmp	.+12     	; 0xbdc <vfprintf+0x19c>
     bd0:	92 fe       	sbrs	r9, 2
     bd2:	06 c0       	rjmp	.+12     	; 0xbe0 <vfprintf+0x1a0>
     bd4:	00 e2       	ldi	r16, 0x20	; 32
     bd6:	05 c0       	rjmp	.+10     	; 0xbe2 <vfprintf+0x1a2>
     bd8:	0d e2       	ldi	r16, 0x2D	; 45
     bda:	03 c0       	rjmp	.+6      	; 0xbe2 <vfprintf+0x1a2>
     bdc:	0b e2       	ldi	r16, 0x2B	; 43
     bde:	01 c0       	rjmp	.+2      	; 0xbe2 <vfprintf+0x1a2>
     be0:	00 e0       	ldi	r16, 0x00	; 0
     be2:	8c 85       	ldd	r24, Y+12	; 0x0c
     be4:	8c 70       	andi	r24, 0x0C	; 12
     be6:	19 f0       	breq	.+6      	; 0xbee <vfprintf+0x1ae>
     be8:	01 11       	cpse	r16, r1
     bea:	5a c2       	rjmp	.+1204   	; 0x10a0 <vfprintf+0x660>
     bec:	9b c2       	rjmp	.+1334   	; 0x1124 <vfprintf+0x6e4>
     bee:	97 fe       	sbrs	r9, 7
     bf0:	10 c0       	rjmp	.+32     	; 0xc12 <vfprintf+0x1d2>
     bf2:	4c 0c       	add	r4, r12
     bf4:	fc 85       	ldd	r31, Y+12	; 0x0c
     bf6:	f4 ff       	sbrs	r31, 4
     bf8:	04 c0       	rjmp	.+8      	; 0xc02 <vfprintf+0x1c2>
     bfa:	8a 81       	ldd	r24, Y+2	; 0x02
     bfc:	81 33       	cpi	r24, 0x31	; 49
     bfe:	09 f4       	brne	.+2      	; 0xc02 <vfprintf+0x1c2>
     c00:	4a 94       	dec	r4
     c02:	14 14       	cp	r1, r4
     c04:	74 f5       	brge	.+92     	; 0xc62 <vfprintf+0x222>
     c06:	28 e0       	ldi	r18, 0x08	; 8
     c08:	24 15       	cp	r18, r4
     c0a:	78 f5       	brcc	.+94     	; 0xc6a <vfprintf+0x22a>
     c0c:	88 e0       	ldi	r24, 0x08	; 8
     c0e:	48 2e       	mov	r4, r24
     c10:	2c c0       	rjmp	.+88     	; 0xc6a <vfprintf+0x22a>
     c12:	96 fc       	sbrc	r9, 6
     c14:	2a c0       	rjmp	.+84     	; 0xc6a <vfprintf+0x22a>
     c16:	81 2f       	mov	r24, r17
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	8c 15       	cp	r24, r12
     c1c:	9d 05       	cpc	r25, r13
     c1e:	9c f0       	brlt	.+38     	; 0xc46 <vfprintf+0x206>
     c20:	3c ef       	ldi	r19, 0xFC	; 252
     c22:	c3 16       	cp	r12, r19
     c24:	3f ef       	ldi	r19, 0xFF	; 255
     c26:	d3 06       	cpc	r13, r19
     c28:	74 f0       	brlt	.+28     	; 0xc46 <vfprintf+0x206>
     c2a:	89 2d       	mov	r24, r9
     c2c:	80 68       	ori	r24, 0x80	; 128
     c2e:	98 2e       	mov	r9, r24
     c30:	0a c0       	rjmp	.+20     	; 0xc46 <vfprintf+0x206>
     c32:	e2 e0       	ldi	r30, 0x02	; 2
     c34:	f0 e0       	ldi	r31, 0x00	; 0
     c36:	ec 0f       	add	r30, r28
     c38:	fd 1f       	adc	r31, r29
     c3a:	e1 0f       	add	r30, r17
     c3c:	f1 1d       	adc	r31, r1
     c3e:	80 81       	ld	r24, Z
     c40:	80 33       	cpi	r24, 0x30	; 48
     c42:	19 f4       	brne	.+6      	; 0xc4a <vfprintf+0x20a>
     c44:	11 50       	subi	r17, 0x01	; 1
     c46:	11 11       	cpse	r17, r1
     c48:	f4 cf       	rjmp	.-24     	; 0xc32 <vfprintf+0x1f2>
     c4a:	97 fe       	sbrs	r9, 7
     c4c:	0e c0       	rjmp	.+28     	; 0xc6a <vfprintf+0x22a>
     c4e:	44 24       	eor	r4, r4
     c50:	43 94       	inc	r4
     c52:	41 0e       	add	r4, r17
     c54:	81 2f       	mov	r24, r17
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	c8 16       	cp	r12, r24
     c5a:	d9 06       	cpc	r13, r25
     c5c:	2c f4       	brge	.+10     	; 0xc68 <vfprintf+0x228>
     c5e:	1c 19       	sub	r17, r12
     c60:	04 c0       	rjmp	.+8      	; 0xc6a <vfprintf+0x22a>
     c62:	44 24       	eor	r4, r4
     c64:	43 94       	inc	r4
     c66:	01 c0       	rjmp	.+2      	; 0xc6a <vfprintf+0x22a>
     c68:	10 e0       	ldi	r17, 0x00	; 0
     c6a:	97 fe       	sbrs	r9, 7
     c6c:	06 c0       	rjmp	.+12     	; 0xc7a <vfprintf+0x23a>
     c6e:	1c 14       	cp	r1, r12
     c70:	1d 04       	cpc	r1, r13
     c72:	34 f4       	brge	.+12     	; 0xc80 <vfprintf+0x240>
     c74:	c6 01       	movw	r24, r12
     c76:	01 96       	adiw	r24, 0x01	; 1
     c78:	05 c0       	rjmp	.+10     	; 0xc84 <vfprintf+0x244>
     c7a:	85 e0       	ldi	r24, 0x05	; 5
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	02 c0       	rjmp	.+4      	; 0xc84 <vfprintf+0x244>
     c80:	81 e0       	ldi	r24, 0x01	; 1
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	01 11       	cpse	r16, r1
     c86:	01 96       	adiw	r24, 0x01	; 1
     c88:	11 23       	and	r17, r17
     c8a:	31 f0       	breq	.+12     	; 0xc98 <vfprintf+0x258>
     c8c:	21 2f       	mov	r18, r17
     c8e:	30 e0       	ldi	r19, 0x00	; 0
     c90:	2f 5f       	subi	r18, 0xFF	; 255
     c92:	3f 4f       	sbci	r19, 0xFF	; 255
     c94:	82 0f       	add	r24, r18
     c96:	93 1f       	adc	r25, r19
     c98:	25 2d       	mov	r18, r5
     c9a:	30 e0       	ldi	r19, 0x00	; 0
     c9c:	82 17       	cp	r24, r18
     c9e:	93 07       	cpc	r25, r19
     ca0:	14 f4       	brge	.+4      	; 0xca6 <vfprintf+0x266>
     ca2:	58 1a       	sub	r5, r24
     ca4:	01 c0       	rjmp	.+2      	; 0xca8 <vfprintf+0x268>
     ca6:	51 2c       	mov	r5, r1
     ca8:	89 2d       	mov	r24, r9
     caa:	89 70       	andi	r24, 0x09	; 9
     cac:	49 f4       	brne	.+18     	; 0xcc0 <vfprintf+0x280>
     cae:	55 20       	and	r5, r5
     cb0:	39 f0       	breq	.+14     	; 0xcc0 <vfprintf+0x280>
     cb2:	b7 01       	movw	r22, r14
     cb4:	80 e2       	ldi	r24, 0x20	; 32
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     cbc:	5a 94       	dec	r5
     cbe:	f7 cf       	rjmp	.-18     	; 0xcae <vfprintf+0x26e>
     cc0:	00 23       	and	r16, r16
     cc2:	29 f0       	breq	.+10     	; 0xcce <vfprintf+0x28e>
     cc4:	b7 01       	movw	r22, r14
     cc6:	80 2f       	mov	r24, r16
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     cce:	93 fc       	sbrc	r9, 3
     cd0:	09 c0       	rjmp	.+18     	; 0xce4 <vfprintf+0x2a4>
     cd2:	55 20       	and	r5, r5
     cd4:	39 f0       	breq	.+14     	; 0xce4 <vfprintf+0x2a4>
     cd6:	b7 01       	movw	r22, r14
     cd8:	80 e3       	ldi	r24, 0x30	; 48
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     ce0:	5a 94       	dec	r5
     ce2:	f7 cf       	rjmp	.-18     	; 0xcd2 <vfprintf+0x292>
     ce4:	97 fe       	sbrs	r9, 7
     ce6:	4c c0       	rjmp	.+152    	; 0xd80 <vfprintf+0x340>
     ce8:	46 01       	movw	r8, r12
     cea:	d7 fe       	sbrs	r13, 7
     cec:	02 c0       	rjmp	.+4      	; 0xcf2 <vfprintf+0x2b2>
     cee:	81 2c       	mov	r8, r1
     cf0:	91 2c       	mov	r9, r1
     cf2:	c6 01       	movw	r24, r12
     cf4:	88 19       	sub	r24, r8
     cf6:	99 09       	sbc	r25, r9
     cf8:	f3 01       	movw	r30, r6
     cfa:	e8 0f       	add	r30, r24
     cfc:	f9 1f       	adc	r31, r25
     cfe:	fe 87       	std	Y+14, r31	; 0x0e
     d00:	ed 87       	std	Y+13, r30	; 0x0d
     d02:	96 01       	movw	r18, r12
     d04:	24 19       	sub	r18, r4
     d06:	31 09       	sbc	r19, r1
     d08:	38 8b       	std	Y+16, r19	; 0x10
     d0a:	2f 87       	std	Y+15, r18	; 0x0f
     d0c:	01 2f       	mov	r16, r17
     d0e:	10 e0       	ldi	r17, 0x00	; 0
     d10:	11 95       	neg	r17
     d12:	01 95       	neg	r16
     d14:	11 09       	sbc	r17, r1
     d16:	3f ef       	ldi	r19, 0xFF	; 255
     d18:	83 16       	cp	r8, r19
     d1a:	93 06       	cpc	r9, r19
     d1c:	29 f4       	brne	.+10     	; 0xd28 <vfprintf+0x2e8>
     d1e:	b7 01       	movw	r22, r14
     d20:	8e e2       	ldi	r24, 0x2E	; 46
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     d28:	c8 14       	cp	r12, r8
     d2a:	d9 04       	cpc	r13, r9
     d2c:	4c f0       	brlt	.+18     	; 0xd40 <vfprintf+0x300>
     d2e:	8f 85       	ldd	r24, Y+15	; 0x0f
     d30:	98 89       	ldd	r25, Y+16	; 0x10
     d32:	88 15       	cp	r24, r8
     d34:	99 05       	cpc	r25, r9
     d36:	24 f4       	brge	.+8      	; 0xd40 <vfprintf+0x300>
     d38:	ed 85       	ldd	r30, Y+13	; 0x0d
     d3a:	fe 85       	ldd	r31, Y+14	; 0x0e
     d3c:	81 81       	ldd	r24, Z+1	; 0x01
     d3e:	01 c0       	rjmp	.+2      	; 0xd42 <vfprintf+0x302>
     d40:	80 e3       	ldi	r24, 0x30	; 48
     d42:	f1 e0       	ldi	r31, 0x01	; 1
     d44:	8f 1a       	sub	r8, r31
     d46:	91 08       	sbc	r9, r1
     d48:	2d 85       	ldd	r18, Y+13	; 0x0d
     d4a:	3e 85       	ldd	r19, Y+14	; 0x0e
     d4c:	2f 5f       	subi	r18, 0xFF	; 255
     d4e:	3f 4f       	sbci	r19, 0xFF	; 255
     d50:	3e 87       	std	Y+14, r19	; 0x0e
     d52:	2d 87       	std	Y+13, r18	; 0x0d
     d54:	80 16       	cp	r8, r16
     d56:	91 06       	cpc	r9, r17
     d58:	2c f0       	brlt	.+10     	; 0xd64 <vfprintf+0x324>
     d5a:	b7 01       	movw	r22, r14
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     d62:	d9 cf       	rjmp	.-78     	; 0xd16 <vfprintf+0x2d6>
     d64:	c8 14       	cp	r12, r8
     d66:	d9 04       	cpc	r13, r9
     d68:	41 f4       	brne	.+16     	; 0xd7a <vfprintf+0x33a>
     d6a:	9a 81       	ldd	r25, Y+2	; 0x02
     d6c:	96 33       	cpi	r25, 0x36	; 54
     d6e:	20 f4       	brcc	.+8      	; 0xd78 <vfprintf+0x338>
     d70:	95 33       	cpi	r25, 0x35	; 53
     d72:	19 f4       	brne	.+6      	; 0xd7a <vfprintf+0x33a>
     d74:	3c 85       	ldd	r19, Y+12	; 0x0c
     d76:	34 ff       	sbrs	r19, 4
     d78:	81 e3       	ldi	r24, 0x31	; 49
     d7a:	b7 01       	movw	r22, r14
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	4e c0       	rjmp	.+156    	; 0xe1c <vfprintf+0x3dc>
     d80:	8a 81       	ldd	r24, Y+2	; 0x02
     d82:	81 33       	cpi	r24, 0x31	; 49
     d84:	19 f0       	breq	.+6      	; 0xd8c <vfprintf+0x34c>
     d86:	9c 85       	ldd	r25, Y+12	; 0x0c
     d88:	9f 7e       	andi	r25, 0xEF	; 239
     d8a:	9c 87       	std	Y+12, r25	; 0x0c
     d8c:	b7 01       	movw	r22, r14
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     d94:	11 11       	cpse	r17, r1
     d96:	05 c0       	rjmp	.+10     	; 0xda2 <vfprintf+0x362>
     d98:	94 fc       	sbrc	r9, 4
     d9a:	18 c0       	rjmp	.+48     	; 0xdcc <vfprintf+0x38c>
     d9c:	85 e6       	ldi	r24, 0x65	; 101
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	17 c0       	rjmp	.+46     	; 0xdd0 <vfprintf+0x390>
     da2:	b7 01       	movw	r22, r14
     da4:	8e e2       	ldi	r24, 0x2E	; 46
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     dac:	1e 5f       	subi	r17, 0xFE	; 254
     dae:	82 e0       	ldi	r24, 0x02	; 2
     db0:	01 e0       	ldi	r16, 0x01	; 1
     db2:	08 0f       	add	r16, r24
     db4:	f3 01       	movw	r30, r6
     db6:	e8 0f       	add	r30, r24
     db8:	f1 1d       	adc	r31, r1
     dba:	80 81       	ld	r24, Z
     dbc:	b7 01       	movw	r22, r14
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     dc4:	80 2f       	mov	r24, r16
     dc6:	01 13       	cpse	r16, r17
     dc8:	f3 cf       	rjmp	.-26     	; 0xdb0 <vfprintf+0x370>
     dca:	e6 cf       	rjmp	.-52     	; 0xd98 <vfprintf+0x358>
     dcc:	85 e4       	ldi	r24, 0x45	; 69
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	b7 01       	movw	r22, r14
     dd2:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     dd6:	d7 fc       	sbrc	r13, 7
     dd8:	06 c0       	rjmp	.+12     	; 0xde6 <vfprintf+0x3a6>
     dda:	c1 14       	cp	r12, r1
     ddc:	d1 04       	cpc	r13, r1
     dde:	41 f4       	brne	.+16     	; 0xdf0 <vfprintf+0x3b0>
     de0:	ec 85       	ldd	r30, Y+12	; 0x0c
     de2:	e4 ff       	sbrs	r30, 4
     de4:	05 c0       	rjmp	.+10     	; 0xdf0 <vfprintf+0x3b0>
     de6:	d1 94       	neg	r13
     de8:	c1 94       	neg	r12
     dea:	d1 08       	sbc	r13, r1
     dec:	8d e2       	ldi	r24, 0x2D	; 45
     dee:	01 c0       	rjmp	.+2      	; 0xdf2 <vfprintf+0x3b2>
     df0:	8b e2       	ldi	r24, 0x2B	; 43
     df2:	b7 01       	movw	r22, r14
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     dfa:	80 e3       	ldi	r24, 0x30	; 48
     dfc:	2a e0       	ldi	r18, 0x0A	; 10
     dfe:	c2 16       	cp	r12, r18
     e00:	d1 04       	cpc	r13, r1
     e02:	2c f0       	brlt	.+10     	; 0xe0e <vfprintf+0x3ce>
     e04:	8f 5f       	subi	r24, 0xFF	; 255
     e06:	fa e0       	ldi	r31, 0x0A	; 10
     e08:	cf 1a       	sub	r12, r31
     e0a:	d1 08       	sbc	r13, r1
     e0c:	f7 cf       	rjmp	.-18     	; 0xdfc <vfprintf+0x3bc>
     e0e:	b7 01       	movw	r22, r14
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     e16:	b7 01       	movw	r22, r14
     e18:	c6 01       	movw	r24, r12
     e1a:	c0 96       	adiw	r24, 0x30	; 48
     e1c:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     e20:	54 c1       	rjmp	.+680    	; 0x10ca <vfprintf+0x68a>
     e22:	83 36       	cpi	r24, 0x63	; 99
     e24:	31 f0       	breq	.+12     	; 0xe32 <vfprintf+0x3f2>
     e26:	83 37       	cpi	r24, 0x73	; 115
     e28:	79 f0       	breq	.+30     	; 0xe48 <vfprintf+0x408>
     e2a:	83 35       	cpi	r24, 0x53	; 83
     e2c:	09 f0       	breq	.+2      	; 0xe30 <vfprintf+0x3f0>
     e2e:	56 c0       	rjmp	.+172    	; 0xedc <vfprintf+0x49c>
     e30:	20 c0       	rjmp	.+64     	; 0xe72 <vfprintf+0x432>
     e32:	56 01       	movw	r10, r12
     e34:	32 e0       	ldi	r19, 0x02	; 2
     e36:	a3 0e       	add	r10, r19
     e38:	b1 1c       	adc	r11, r1
     e3a:	f6 01       	movw	r30, r12
     e3c:	80 81       	ld	r24, Z
     e3e:	89 83       	std	Y+1, r24	; 0x01
     e40:	01 e0       	ldi	r16, 0x01	; 1
     e42:	10 e0       	ldi	r17, 0x00	; 0
     e44:	63 01       	movw	r12, r6
     e46:	12 c0       	rjmp	.+36     	; 0xe6c <vfprintf+0x42c>
     e48:	56 01       	movw	r10, r12
     e4a:	f2 e0       	ldi	r31, 0x02	; 2
     e4c:	af 0e       	add	r10, r31
     e4e:	b1 1c       	adc	r11, r1
     e50:	f6 01       	movw	r30, r12
     e52:	c0 80       	ld	r12, Z
     e54:	d1 80       	ldd	r13, Z+1	; 0x01
     e56:	96 fe       	sbrs	r9, 6
     e58:	03 c0       	rjmp	.+6      	; 0xe60 <vfprintf+0x420>
     e5a:	61 2f       	mov	r22, r17
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	02 c0       	rjmp	.+4      	; 0xe64 <vfprintf+0x424>
     e60:	6f ef       	ldi	r22, 0xFF	; 255
     e62:	7f ef       	ldi	r23, 0xFF	; 255
     e64:	c6 01       	movw	r24, r12
     e66:	0e 94 b7 09 	call	0x136e	; 0x136e <strnlen>
     e6a:	8c 01       	movw	r16, r24
     e6c:	f9 2d       	mov	r31, r9
     e6e:	ff 77       	andi	r31, 0x7F	; 127
     e70:	14 c0       	rjmp	.+40     	; 0xe9a <vfprintf+0x45a>
     e72:	56 01       	movw	r10, r12
     e74:	22 e0       	ldi	r18, 0x02	; 2
     e76:	a2 0e       	add	r10, r18
     e78:	b1 1c       	adc	r11, r1
     e7a:	f6 01       	movw	r30, r12
     e7c:	c0 80       	ld	r12, Z
     e7e:	d1 80       	ldd	r13, Z+1	; 0x01
     e80:	96 fe       	sbrs	r9, 6
     e82:	03 c0       	rjmp	.+6      	; 0xe8a <vfprintf+0x44a>
     e84:	61 2f       	mov	r22, r17
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	02 c0       	rjmp	.+4      	; 0xe8e <vfprintf+0x44e>
     e8a:	6f ef       	ldi	r22, 0xFF	; 255
     e8c:	7f ef       	ldi	r23, 0xFF	; 255
     e8e:	c6 01       	movw	r24, r12
     e90:	0e 94 ac 09 	call	0x1358	; 0x1358 <strnlen_P>
     e94:	8c 01       	movw	r16, r24
     e96:	f9 2d       	mov	r31, r9
     e98:	f0 68       	ori	r31, 0x80	; 128
     e9a:	9f 2e       	mov	r9, r31
     e9c:	f3 fd       	sbrc	r31, 3
     e9e:	1a c0       	rjmp	.+52     	; 0xed4 <vfprintf+0x494>
     ea0:	85 2d       	mov	r24, r5
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	08 17       	cp	r16, r24
     ea6:	19 07       	cpc	r17, r25
     ea8:	a8 f4       	brcc	.+42     	; 0xed4 <vfprintf+0x494>
     eaa:	b7 01       	movw	r22, r14
     eac:	80 e2       	ldi	r24, 0x20	; 32
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     eb4:	5a 94       	dec	r5
     eb6:	f4 cf       	rjmp	.-24     	; 0xea0 <vfprintf+0x460>
     eb8:	f6 01       	movw	r30, r12
     eba:	97 fc       	sbrc	r9, 7
     ebc:	85 91       	lpm	r24, Z+
     ebe:	97 fe       	sbrs	r9, 7
     ec0:	81 91       	ld	r24, Z+
     ec2:	6f 01       	movw	r12, r30
     ec4:	b7 01       	movw	r22, r14
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
     ecc:	51 10       	cpse	r5, r1
     ece:	5a 94       	dec	r5
     ed0:	01 50       	subi	r16, 0x01	; 1
     ed2:	11 09       	sbc	r17, r1
     ed4:	01 15       	cp	r16, r1
     ed6:	11 05       	cpc	r17, r1
     ed8:	79 f7       	brne	.-34     	; 0xeb8 <vfprintf+0x478>
     eda:	f7 c0       	rjmp	.+494    	; 0x10ca <vfprintf+0x68a>
     edc:	84 36       	cpi	r24, 0x64	; 100
     ede:	11 f0       	breq	.+4      	; 0xee4 <vfprintf+0x4a4>
     ee0:	89 36       	cpi	r24, 0x69	; 105
     ee2:	61 f5       	brne	.+88     	; 0xf3c <vfprintf+0x4fc>
     ee4:	56 01       	movw	r10, r12
     ee6:	97 fe       	sbrs	r9, 7
     ee8:	09 c0       	rjmp	.+18     	; 0xefc <vfprintf+0x4bc>
     eea:	24 e0       	ldi	r18, 0x04	; 4
     eec:	a2 0e       	add	r10, r18
     eee:	b1 1c       	adc	r11, r1
     ef0:	f6 01       	movw	r30, r12
     ef2:	60 81       	ld	r22, Z
     ef4:	71 81       	ldd	r23, Z+1	; 0x01
     ef6:	82 81       	ldd	r24, Z+2	; 0x02
     ef8:	93 81       	ldd	r25, Z+3	; 0x03
     efa:	0a c0       	rjmp	.+20     	; 0xf10 <vfprintf+0x4d0>
     efc:	f2 e0       	ldi	r31, 0x02	; 2
     efe:	af 0e       	add	r10, r31
     f00:	b1 1c       	adc	r11, r1
     f02:	f6 01       	movw	r30, r12
     f04:	60 81       	ld	r22, Z
     f06:	71 81       	ldd	r23, Z+1	; 0x01
     f08:	07 2e       	mov	r0, r23
     f0a:	00 0c       	add	r0, r0
     f0c:	88 0b       	sbc	r24, r24
     f0e:	99 0b       	sbc	r25, r25
     f10:	f9 2d       	mov	r31, r9
     f12:	ff 76       	andi	r31, 0x6F	; 111
     f14:	9f 2e       	mov	r9, r31
     f16:	97 ff       	sbrs	r25, 7
     f18:	09 c0       	rjmp	.+18     	; 0xf2c <vfprintf+0x4ec>
     f1a:	90 95       	com	r25
     f1c:	80 95       	com	r24
     f1e:	70 95       	com	r23
     f20:	61 95       	neg	r22
     f22:	7f 4f       	sbci	r23, 0xFF	; 255
     f24:	8f 4f       	sbci	r24, 0xFF	; 255
     f26:	9f 4f       	sbci	r25, 0xFF	; 255
     f28:	f0 68       	ori	r31, 0x80	; 128
     f2a:	9f 2e       	mov	r9, r31
     f2c:	2a e0       	ldi	r18, 0x0A	; 10
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	a3 01       	movw	r20, r6
     f32:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__ultoa_invert>
     f36:	c8 2e       	mov	r12, r24
     f38:	c6 18       	sub	r12, r6
     f3a:	3f c0       	rjmp	.+126    	; 0xfba <vfprintf+0x57a>
     f3c:	09 2d       	mov	r16, r9
     f3e:	85 37       	cpi	r24, 0x75	; 117
     f40:	21 f4       	brne	.+8      	; 0xf4a <vfprintf+0x50a>
     f42:	0f 7e       	andi	r16, 0xEF	; 239
     f44:	2a e0       	ldi	r18, 0x0A	; 10
     f46:	30 e0       	ldi	r19, 0x00	; 0
     f48:	1d c0       	rjmp	.+58     	; 0xf84 <vfprintf+0x544>
     f4a:	09 7f       	andi	r16, 0xF9	; 249
     f4c:	8f 36       	cpi	r24, 0x6F	; 111
     f4e:	91 f0       	breq	.+36     	; 0xf74 <vfprintf+0x534>
     f50:	18 f4       	brcc	.+6      	; 0xf58 <vfprintf+0x518>
     f52:	88 35       	cpi	r24, 0x58	; 88
     f54:	59 f0       	breq	.+22     	; 0xf6c <vfprintf+0x52c>
     f56:	c3 c0       	rjmp	.+390    	; 0x10de <vfprintf+0x69e>
     f58:	80 37       	cpi	r24, 0x70	; 112
     f5a:	19 f0       	breq	.+6      	; 0xf62 <vfprintf+0x522>
     f5c:	88 37       	cpi	r24, 0x78	; 120
     f5e:	11 f0       	breq	.+4      	; 0xf64 <vfprintf+0x524>
     f60:	be c0       	rjmp	.+380    	; 0x10de <vfprintf+0x69e>
     f62:	00 61       	ori	r16, 0x10	; 16
     f64:	04 ff       	sbrs	r16, 4
     f66:	09 c0       	rjmp	.+18     	; 0xf7a <vfprintf+0x53a>
     f68:	04 60       	ori	r16, 0x04	; 4
     f6a:	07 c0       	rjmp	.+14     	; 0xf7a <vfprintf+0x53a>
     f6c:	94 fe       	sbrs	r9, 4
     f6e:	08 c0       	rjmp	.+16     	; 0xf80 <vfprintf+0x540>
     f70:	06 60       	ori	r16, 0x06	; 6
     f72:	06 c0       	rjmp	.+12     	; 0xf80 <vfprintf+0x540>
     f74:	28 e0       	ldi	r18, 0x08	; 8
     f76:	30 e0       	ldi	r19, 0x00	; 0
     f78:	05 c0       	rjmp	.+10     	; 0xf84 <vfprintf+0x544>
     f7a:	20 e1       	ldi	r18, 0x10	; 16
     f7c:	30 e0       	ldi	r19, 0x00	; 0
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <vfprintf+0x544>
     f80:	20 e1       	ldi	r18, 0x10	; 16
     f82:	32 e0       	ldi	r19, 0x02	; 2
     f84:	56 01       	movw	r10, r12
     f86:	07 ff       	sbrs	r16, 7
     f88:	09 c0       	rjmp	.+18     	; 0xf9c <vfprintf+0x55c>
     f8a:	84 e0       	ldi	r24, 0x04	; 4
     f8c:	a8 0e       	add	r10, r24
     f8e:	b1 1c       	adc	r11, r1
     f90:	f6 01       	movw	r30, r12
     f92:	60 81       	ld	r22, Z
     f94:	71 81       	ldd	r23, Z+1	; 0x01
     f96:	82 81       	ldd	r24, Z+2	; 0x02
     f98:	93 81       	ldd	r25, Z+3	; 0x03
     f9a:	08 c0       	rjmp	.+16     	; 0xfac <vfprintf+0x56c>
     f9c:	f2 e0       	ldi	r31, 0x02	; 2
     f9e:	af 0e       	add	r10, r31
     fa0:	b1 1c       	adc	r11, r1
     fa2:	f6 01       	movw	r30, r12
     fa4:	60 81       	ld	r22, Z
     fa6:	71 81       	ldd	r23, Z+1	; 0x01
     fa8:	80 e0       	ldi	r24, 0x00	; 0
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	a3 01       	movw	r20, r6
     fae:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__ultoa_invert>
     fb2:	c8 2e       	mov	r12, r24
     fb4:	c6 18       	sub	r12, r6
     fb6:	0f 77       	andi	r16, 0x7F	; 127
     fb8:	90 2e       	mov	r9, r16
     fba:	96 fe       	sbrs	r9, 6
     fbc:	0b c0       	rjmp	.+22     	; 0xfd4 <vfprintf+0x594>
     fbe:	09 2d       	mov	r16, r9
     fc0:	0e 7f       	andi	r16, 0xFE	; 254
     fc2:	c1 16       	cp	r12, r17
     fc4:	50 f4       	brcc	.+20     	; 0xfda <vfprintf+0x59a>
     fc6:	94 fe       	sbrs	r9, 4
     fc8:	0a c0       	rjmp	.+20     	; 0xfde <vfprintf+0x59e>
     fca:	92 fc       	sbrc	r9, 2
     fcc:	08 c0       	rjmp	.+16     	; 0xfde <vfprintf+0x59e>
     fce:	09 2d       	mov	r16, r9
     fd0:	0e 7e       	andi	r16, 0xEE	; 238
     fd2:	05 c0       	rjmp	.+10     	; 0xfde <vfprintf+0x59e>
     fd4:	dc 2c       	mov	r13, r12
     fd6:	09 2d       	mov	r16, r9
     fd8:	03 c0       	rjmp	.+6      	; 0xfe0 <vfprintf+0x5a0>
     fda:	dc 2c       	mov	r13, r12
     fdc:	01 c0       	rjmp	.+2      	; 0xfe0 <vfprintf+0x5a0>
     fde:	d1 2e       	mov	r13, r17
     fe0:	04 ff       	sbrs	r16, 4
     fe2:	0d c0       	rjmp	.+26     	; 0xffe <vfprintf+0x5be>
     fe4:	fe 01       	movw	r30, r28
     fe6:	ec 0d       	add	r30, r12
     fe8:	f1 1d       	adc	r31, r1
     fea:	80 81       	ld	r24, Z
     fec:	80 33       	cpi	r24, 0x30	; 48
     fee:	11 f4       	brne	.+4      	; 0xff4 <vfprintf+0x5b4>
     ff0:	09 7e       	andi	r16, 0xE9	; 233
     ff2:	09 c0       	rjmp	.+18     	; 0x1006 <vfprintf+0x5c6>
     ff4:	02 ff       	sbrs	r16, 2
     ff6:	06 c0       	rjmp	.+12     	; 0x1004 <vfprintf+0x5c4>
     ff8:	d3 94       	inc	r13
     ffa:	d3 94       	inc	r13
     ffc:	04 c0       	rjmp	.+8      	; 0x1006 <vfprintf+0x5c6>
     ffe:	80 2f       	mov	r24, r16
    1000:	86 78       	andi	r24, 0x86	; 134
    1002:	09 f0       	breq	.+2      	; 0x1006 <vfprintf+0x5c6>
    1004:	d3 94       	inc	r13
    1006:	03 fd       	sbrc	r16, 3
    1008:	11 c0       	rjmp	.+34     	; 0x102c <vfprintf+0x5ec>
    100a:	00 ff       	sbrs	r16, 0
    100c:	06 c0       	rjmp	.+12     	; 0x101a <vfprintf+0x5da>
    100e:	1c 2d       	mov	r17, r12
    1010:	d5 14       	cp	r13, r5
    1012:	80 f4       	brcc	.+32     	; 0x1034 <vfprintf+0x5f4>
    1014:	15 0d       	add	r17, r5
    1016:	1d 19       	sub	r17, r13
    1018:	0d c0       	rjmp	.+26     	; 0x1034 <vfprintf+0x5f4>
    101a:	d5 14       	cp	r13, r5
    101c:	58 f4       	brcc	.+22     	; 0x1034 <vfprintf+0x5f4>
    101e:	b7 01       	movw	r22, r14
    1020:	80 e2       	ldi	r24, 0x20	; 32
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
    1028:	d3 94       	inc	r13
    102a:	f7 cf       	rjmp	.-18     	; 0x101a <vfprintf+0x5da>
    102c:	d5 14       	cp	r13, r5
    102e:	10 f4       	brcc	.+4      	; 0x1034 <vfprintf+0x5f4>
    1030:	5d 18       	sub	r5, r13
    1032:	01 c0       	rjmp	.+2      	; 0x1036 <vfprintf+0x5f6>
    1034:	51 2c       	mov	r5, r1
    1036:	04 ff       	sbrs	r16, 4
    1038:	10 c0       	rjmp	.+32     	; 0x105a <vfprintf+0x61a>
    103a:	b7 01       	movw	r22, r14
    103c:	80 e3       	ldi	r24, 0x30	; 48
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
    1044:	02 ff       	sbrs	r16, 2
    1046:	17 c0       	rjmp	.+46     	; 0x1076 <vfprintf+0x636>
    1048:	01 fd       	sbrc	r16, 1
    104a:	03 c0       	rjmp	.+6      	; 0x1052 <vfprintf+0x612>
    104c:	88 e7       	ldi	r24, 0x78	; 120
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <vfprintf+0x616>
    1052:	88 e5       	ldi	r24, 0x58	; 88
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	b7 01       	movw	r22, r14
    1058:	0c c0       	rjmp	.+24     	; 0x1072 <vfprintf+0x632>
    105a:	80 2f       	mov	r24, r16
    105c:	86 78       	andi	r24, 0x86	; 134
    105e:	59 f0       	breq	.+22     	; 0x1076 <vfprintf+0x636>
    1060:	01 ff       	sbrs	r16, 1
    1062:	02 c0       	rjmp	.+4      	; 0x1068 <vfprintf+0x628>
    1064:	8b e2       	ldi	r24, 0x2B	; 43
    1066:	01 c0       	rjmp	.+2      	; 0x106a <vfprintf+0x62a>
    1068:	80 e2       	ldi	r24, 0x20	; 32
    106a:	07 fd       	sbrc	r16, 7
    106c:	8d e2       	ldi	r24, 0x2D	; 45
    106e:	b7 01       	movw	r22, r14
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
    1076:	c1 16       	cp	r12, r17
    1078:	38 f4       	brcc	.+14     	; 0x1088 <vfprintf+0x648>
    107a:	b7 01       	movw	r22, r14
    107c:	80 e3       	ldi	r24, 0x30	; 48
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
    1084:	11 50       	subi	r17, 0x01	; 1
    1086:	f7 cf       	rjmp	.-18     	; 0x1076 <vfprintf+0x636>
    1088:	ca 94       	dec	r12
    108a:	f3 01       	movw	r30, r6
    108c:	ec 0d       	add	r30, r12
    108e:	f1 1d       	adc	r31, r1
    1090:	80 81       	ld	r24, Z
    1092:	b7 01       	movw	r22, r14
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
    109a:	c1 10       	cpse	r12, r1
    109c:	f5 cf       	rjmp	.-22     	; 0x1088 <vfprintf+0x648>
    109e:	15 c0       	rjmp	.+42     	; 0x10ca <vfprintf+0x68a>
    10a0:	f4 e0       	ldi	r31, 0x04	; 4
    10a2:	f5 15       	cp	r31, r5
    10a4:	60 f5       	brcc	.+88     	; 0x10fe <vfprintf+0x6be>
    10a6:	84 e0       	ldi	r24, 0x04	; 4
    10a8:	58 1a       	sub	r5, r24
    10aa:	93 fe       	sbrs	r9, 3
    10ac:	1f c0       	rjmp	.+62     	; 0x10ec <vfprintf+0x6ac>
    10ae:	01 11       	cpse	r16, r1
    10b0:	27 c0       	rjmp	.+78     	; 0x1100 <vfprintf+0x6c0>
    10b2:	2c 85       	ldd	r18, Y+12	; 0x0c
    10b4:	23 ff       	sbrs	r18, 3
    10b6:	2a c0       	rjmp	.+84     	; 0x110c <vfprintf+0x6cc>
    10b8:	08 e6       	ldi	r16, 0x68	; 104
    10ba:	10 e0       	ldi	r17, 0x00	; 0
    10bc:	39 2d       	mov	r19, r9
    10be:	30 71       	andi	r19, 0x10	; 16
    10c0:	93 2e       	mov	r9, r19
    10c2:	f8 01       	movw	r30, r16
    10c4:	84 91       	lpm	r24, Z
    10c6:	81 11       	cpse	r24, r1
    10c8:	24 c0       	rjmp	.+72     	; 0x1112 <vfprintf+0x6d2>
    10ca:	55 20       	and	r5, r5
    10cc:	09 f4       	brne	.+2      	; 0x10d0 <vfprintf+0x690>
    10ce:	e4 cc       	rjmp	.-1592   	; 0xa98 <vfprintf+0x58>
    10d0:	b7 01       	movw	r22, r14
    10d2:	80 e2       	ldi	r24, 0x20	; 32
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
    10da:	5a 94       	dec	r5
    10dc:	f6 cf       	rjmp	.-20     	; 0x10ca <vfprintf+0x68a>
    10de:	f7 01       	movw	r30, r14
    10e0:	86 81       	ldd	r24, Z+6	; 0x06
    10e2:	97 81       	ldd	r25, Z+7	; 0x07
    10e4:	26 c0       	rjmp	.+76     	; 0x1132 <vfprintf+0x6f2>
    10e6:	8f ef       	ldi	r24, 0xFF	; 255
    10e8:	9f ef       	ldi	r25, 0xFF	; 255
    10ea:	23 c0       	rjmp	.+70     	; 0x1132 <vfprintf+0x6f2>
    10ec:	b7 01       	movw	r22, r14
    10ee:	80 e2       	ldi	r24, 0x20	; 32
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
    10f6:	5a 94       	dec	r5
    10f8:	51 10       	cpse	r5, r1
    10fa:	f8 cf       	rjmp	.-16     	; 0x10ec <vfprintf+0x6ac>
    10fc:	d8 cf       	rjmp	.-80     	; 0x10ae <vfprintf+0x66e>
    10fe:	51 2c       	mov	r5, r1
    1100:	b7 01       	movw	r22, r14
    1102:	80 2f       	mov	r24, r16
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
    110a:	d3 cf       	rjmp	.-90     	; 0x10b2 <vfprintf+0x672>
    110c:	0c e6       	ldi	r16, 0x6C	; 108
    110e:	10 e0       	ldi	r17, 0x00	; 0
    1110:	d5 cf       	rjmp	.-86     	; 0x10bc <vfprintf+0x67c>
    1112:	91 10       	cpse	r9, r1
    1114:	80 52       	subi	r24, 0x20	; 32
    1116:	b7 01       	movw	r22, r14
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
    111e:	0f 5f       	subi	r16, 0xFF	; 255
    1120:	1f 4f       	sbci	r17, 0xFF	; 255
    1122:	cf cf       	rjmp	.-98     	; 0x10c2 <vfprintf+0x682>
    1124:	23 e0       	ldi	r18, 0x03	; 3
    1126:	25 15       	cp	r18, r5
    1128:	10 f4       	brcc	.+4      	; 0x112e <vfprintf+0x6ee>
    112a:	83 e0       	ldi	r24, 0x03	; 3
    112c:	bd cf       	rjmp	.-134    	; 0x10a8 <vfprintf+0x668>
    112e:	51 2c       	mov	r5, r1
    1130:	c0 cf       	rjmp	.-128    	; 0x10b2 <vfprintf+0x672>
    1132:	60 96       	adiw	r28, 0x10	; 16
    1134:	e2 e1       	ldi	r30, 0x12	; 18
    1136:	0c 94 b9 08 	jmp	0x1172	; 0x1172 <__epilogue_restores__>

0000113a <__prologue_saves__>:
    113a:	2f 92       	push	r2
    113c:	3f 92       	push	r3
    113e:	4f 92       	push	r4
    1140:	5f 92       	push	r5
    1142:	6f 92       	push	r6
    1144:	7f 92       	push	r7
    1146:	8f 92       	push	r8
    1148:	9f 92       	push	r9
    114a:	af 92       	push	r10
    114c:	bf 92       	push	r11
    114e:	cf 92       	push	r12
    1150:	df 92       	push	r13
    1152:	ef 92       	push	r14
    1154:	ff 92       	push	r15
    1156:	0f 93       	push	r16
    1158:	1f 93       	push	r17
    115a:	cf 93       	push	r28
    115c:	df 93       	push	r29
    115e:	cd b7       	in	r28, 0x3d	; 61
    1160:	de b7       	in	r29, 0x3e	; 62
    1162:	ca 1b       	sub	r28, r26
    1164:	db 0b       	sbc	r29, r27
    1166:	0f b6       	in	r0, 0x3f	; 63
    1168:	f8 94       	cli
    116a:	de bf       	out	0x3e, r29	; 62
    116c:	0f be       	out	0x3f, r0	; 63
    116e:	cd bf       	out	0x3d, r28	; 61
    1170:	09 94       	ijmp

00001172 <__epilogue_restores__>:
    1172:	2a 88       	ldd	r2, Y+18	; 0x12
    1174:	39 88       	ldd	r3, Y+17	; 0x11
    1176:	48 88       	ldd	r4, Y+16	; 0x10
    1178:	5f 84       	ldd	r5, Y+15	; 0x0f
    117a:	6e 84       	ldd	r6, Y+14	; 0x0e
    117c:	7d 84       	ldd	r7, Y+13	; 0x0d
    117e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1180:	9b 84       	ldd	r9, Y+11	; 0x0b
    1182:	aa 84       	ldd	r10, Y+10	; 0x0a
    1184:	b9 84       	ldd	r11, Y+9	; 0x09
    1186:	c8 84       	ldd	r12, Y+8	; 0x08
    1188:	df 80       	ldd	r13, Y+7	; 0x07
    118a:	ee 80       	ldd	r14, Y+6	; 0x06
    118c:	fd 80       	ldd	r15, Y+5	; 0x05
    118e:	0c 81       	ldd	r16, Y+4	; 0x04
    1190:	1b 81       	ldd	r17, Y+3	; 0x03
    1192:	aa 81       	ldd	r26, Y+2	; 0x02
    1194:	b9 81       	ldd	r27, Y+1	; 0x01
    1196:	ce 0f       	add	r28, r30
    1198:	d1 1d       	adc	r29, r1
    119a:	0f b6       	in	r0, 0x3f	; 63
    119c:	f8 94       	cli
    119e:	de bf       	out	0x3e, r29	; 62
    11a0:	0f be       	out	0x3f, r0	; 63
    11a2:	cd bf       	out	0x3d, r28	; 61
    11a4:	ed 01       	movw	r28, r26
    11a6:	08 95       	ret

000011a8 <__ftoa_engine>:
    11a8:	28 30       	cpi	r18, 0x08	; 8
    11aa:	08 f0       	brcs	.+2      	; 0x11ae <__ftoa_engine+0x6>
    11ac:	27 e0       	ldi	r18, 0x07	; 7
    11ae:	33 27       	eor	r19, r19
    11b0:	da 01       	movw	r26, r20
    11b2:	99 0f       	add	r25, r25
    11b4:	31 1d       	adc	r19, r1
    11b6:	87 fd       	sbrc	r24, 7
    11b8:	91 60       	ori	r25, 0x01	; 1
    11ba:	00 96       	adiw	r24, 0x00	; 0
    11bc:	61 05       	cpc	r22, r1
    11be:	71 05       	cpc	r23, r1
    11c0:	39 f4       	brne	.+14     	; 0x11d0 <__ftoa_engine+0x28>
    11c2:	32 60       	ori	r19, 0x02	; 2
    11c4:	2e 5f       	subi	r18, 0xFE	; 254
    11c6:	3d 93       	st	X+, r19
    11c8:	30 e3       	ldi	r19, 0x30	; 48
    11ca:	2a 95       	dec	r18
    11cc:	e1 f7       	brne	.-8      	; 0x11c6 <__ftoa_engine+0x1e>
    11ce:	08 95       	ret
    11d0:	9f 3f       	cpi	r25, 0xFF	; 255
    11d2:	30 f0       	brcs	.+12     	; 0x11e0 <__ftoa_engine+0x38>
    11d4:	80 38       	cpi	r24, 0x80	; 128
    11d6:	71 05       	cpc	r23, r1
    11d8:	61 05       	cpc	r22, r1
    11da:	09 f0       	breq	.+2      	; 0x11de <__ftoa_engine+0x36>
    11dc:	3c 5f       	subi	r19, 0xFC	; 252
    11de:	3c 5f       	subi	r19, 0xFC	; 252
    11e0:	3d 93       	st	X+, r19
    11e2:	91 30       	cpi	r25, 0x01	; 1
    11e4:	08 f0       	brcs	.+2      	; 0x11e8 <__ftoa_engine+0x40>
    11e6:	80 68       	ori	r24, 0x80	; 128
    11e8:	91 1d       	adc	r25, r1
    11ea:	df 93       	push	r29
    11ec:	cf 93       	push	r28
    11ee:	1f 93       	push	r17
    11f0:	0f 93       	push	r16
    11f2:	ff 92       	push	r15
    11f4:	ef 92       	push	r14
    11f6:	19 2f       	mov	r17, r25
    11f8:	98 7f       	andi	r25, 0xF8	; 248
    11fa:	96 95       	lsr	r25
    11fc:	e9 2f       	mov	r30, r25
    11fe:	96 95       	lsr	r25
    1200:	96 95       	lsr	r25
    1202:	e9 0f       	add	r30, r25
    1204:	ff 27       	eor	r31, r31
    1206:	e6 53       	subi	r30, 0x36	; 54
    1208:	ff 4f       	sbci	r31, 0xFF	; 255
    120a:	99 27       	eor	r25, r25
    120c:	33 27       	eor	r19, r19
    120e:	ee 24       	eor	r14, r14
    1210:	ff 24       	eor	r15, r15
    1212:	a7 01       	movw	r20, r14
    1214:	e7 01       	movw	r28, r14
    1216:	05 90       	lpm	r0, Z+
    1218:	08 94       	sec
    121a:	07 94       	ror	r0
    121c:	28 f4       	brcc	.+10     	; 0x1228 <__ftoa_engine+0x80>
    121e:	36 0f       	add	r19, r22
    1220:	e7 1e       	adc	r14, r23
    1222:	f8 1e       	adc	r15, r24
    1224:	49 1f       	adc	r20, r25
    1226:	51 1d       	adc	r21, r1
    1228:	66 0f       	add	r22, r22
    122a:	77 1f       	adc	r23, r23
    122c:	88 1f       	adc	r24, r24
    122e:	99 1f       	adc	r25, r25
    1230:	06 94       	lsr	r0
    1232:	a1 f7       	brne	.-24     	; 0x121c <__ftoa_engine+0x74>
    1234:	05 90       	lpm	r0, Z+
    1236:	07 94       	ror	r0
    1238:	28 f4       	brcc	.+10     	; 0x1244 <__ftoa_engine+0x9c>
    123a:	e7 0e       	add	r14, r23
    123c:	f8 1e       	adc	r15, r24
    123e:	49 1f       	adc	r20, r25
    1240:	56 1f       	adc	r21, r22
    1242:	c1 1d       	adc	r28, r1
    1244:	77 0f       	add	r23, r23
    1246:	88 1f       	adc	r24, r24
    1248:	99 1f       	adc	r25, r25
    124a:	66 1f       	adc	r22, r22
    124c:	06 94       	lsr	r0
    124e:	a1 f7       	brne	.-24     	; 0x1238 <__ftoa_engine+0x90>
    1250:	05 90       	lpm	r0, Z+
    1252:	07 94       	ror	r0
    1254:	28 f4       	brcc	.+10     	; 0x1260 <__ftoa_engine+0xb8>
    1256:	f8 0e       	add	r15, r24
    1258:	49 1f       	adc	r20, r25
    125a:	56 1f       	adc	r21, r22
    125c:	c7 1f       	adc	r28, r23
    125e:	d1 1d       	adc	r29, r1
    1260:	88 0f       	add	r24, r24
    1262:	99 1f       	adc	r25, r25
    1264:	66 1f       	adc	r22, r22
    1266:	77 1f       	adc	r23, r23
    1268:	06 94       	lsr	r0
    126a:	a1 f7       	brne	.-24     	; 0x1254 <__ftoa_engine+0xac>
    126c:	05 90       	lpm	r0, Z+
    126e:	07 94       	ror	r0
    1270:	20 f4       	brcc	.+8      	; 0x127a <__ftoa_engine+0xd2>
    1272:	49 0f       	add	r20, r25
    1274:	56 1f       	adc	r21, r22
    1276:	c7 1f       	adc	r28, r23
    1278:	d8 1f       	adc	r29, r24
    127a:	99 0f       	add	r25, r25
    127c:	66 1f       	adc	r22, r22
    127e:	77 1f       	adc	r23, r23
    1280:	88 1f       	adc	r24, r24
    1282:	06 94       	lsr	r0
    1284:	a9 f7       	brne	.-22     	; 0x1270 <__ftoa_engine+0xc8>
    1286:	84 91       	lpm	r24, Z
    1288:	10 95       	com	r17
    128a:	17 70       	andi	r17, 0x07	; 7
    128c:	41 f0       	breq	.+16     	; 0x129e <__ftoa_engine+0xf6>
    128e:	d6 95       	lsr	r29
    1290:	c7 95       	ror	r28
    1292:	57 95       	ror	r21
    1294:	47 95       	ror	r20
    1296:	f7 94       	ror	r15
    1298:	e7 94       	ror	r14
    129a:	1a 95       	dec	r17
    129c:	c1 f7       	brne	.-16     	; 0x128e <__ftoa_engine+0xe6>
    129e:	e0 e7       	ldi	r30, 0x70	; 112
    12a0:	f0 e0       	ldi	r31, 0x00	; 0
    12a2:	68 94       	set
    12a4:	15 90       	lpm	r1, Z+
    12a6:	15 91       	lpm	r17, Z+
    12a8:	35 91       	lpm	r19, Z+
    12aa:	65 91       	lpm	r22, Z+
    12ac:	95 91       	lpm	r25, Z+
    12ae:	05 90       	lpm	r0, Z+
    12b0:	7f e2       	ldi	r23, 0x2F	; 47
    12b2:	73 95       	inc	r23
    12b4:	e1 18       	sub	r14, r1
    12b6:	f1 0a       	sbc	r15, r17
    12b8:	43 0b       	sbc	r20, r19
    12ba:	56 0b       	sbc	r21, r22
    12bc:	c9 0b       	sbc	r28, r25
    12be:	d0 09       	sbc	r29, r0
    12c0:	c0 f7       	brcc	.-16     	; 0x12b2 <__ftoa_engine+0x10a>
    12c2:	e1 0c       	add	r14, r1
    12c4:	f1 1e       	adc	r15, r17
    12c6:	43 1f       	adc	r20, r19
    12c8:	56 1f       	adc	r21, r22
    12ca:	c9 1f       	adc	r28, r25
    12cc:	d0 1d       	adc	r29, r0
    12ce:	7e f4       	brtc	.+30     	; 0x12ee <__ftoa_engine+0x146>
    12d0:	70 33       	cpi	r23, 0x30	; 48
    12d2:	11 f4       	brne	.+4      	; 0x12d8 <__ftoa_engine+0x130>
    12d4:	8a 95       	dec	r24
    12d6:	e6 cf       	rjmp	.-52     	; 0x12a4 <__ftoa_engine+0xfc>
    12d8:	e8 94       	clt
    12da:	01 50       	subi	r16, 0x01	; 1
    12dc:	30 f0       	brcs	.+12     	; 0x12ea <__ftoa_engine+0x142>
    12de:	08 0f       	add	r16, r24
    12e0:	0a f4       	brpl	.+2      	; 0x12e4 <__ftoa_engine+0x13c>
    12e2:	00 27       	eor	r16, r16
    12e4:	02 17       	cp	r16, r18
    12e6:	08 f4       	brcc	.+2      	; 0x12ea <__ftoa_engine+0x142>
    12e8:	20 2f       	mov	r18, r16
    12ea:	23 95       	inc	r18
    12ec:	02 2f       	mov	r16, r18
    12ee:	7a 33       	cpi	r23, 0x3A	; 58
    12f0:	28 f0       	brcs	.+10     	; 0x12fc <__ftoa_engine+0x154>
    12f2:	79 e3       	ldi	r23, 0x39	; 57
    12f4:	7d 93       	st	X+, r23
    12f6:	2a 95       	dec	r18
    12f8:	e9 f7       	brne	.-6      	; 0x12f4 <__ftoa_engine+0x14c>
    12fa:	10 c0       	rjmp	.+32     	; 0x131c <__ftoa_engine+0x174>
    12fc:	7d 93       	st	X+, r23
    12fe:	2a 95       	dec	r18
    1300:	89 f6       	brne	.-94     	; 0x12a4 <__ftoa_engine+0xfc>
    1302:	06 94       	lsr	r0
    1304:	97 95       	ror	r25
    1306:	67 95       	ror	r22
    1308:	37 95       	ror	r19
    130a:	17 95       	ror	r17
    130c:	17 94       	ror	r1
    130e:	e1 18       	sub	r14, r1
    1310:	f1 0a       	sbc	r15, r17
    1312:	43 0b       	sbc	r20, r19
    1314:	56 0b       	sbc	r21, r22
    1316:	c9 0b       	sbc	r28, r25
    1318:	d0 09       	sbc	r29, r0
    131a:	98 f0       	brcs	.+38     	; 0x1342 <__ftoa_engine+0x19a>
    131c:	23 95       	inc	r18
    131e:	7e 91       	ld	r23, -X
    1320:	73 95       	inc	r23
    1322:	7a 33       	cpi	r23, 0x3A	; 58
    1324:	08 f0       	brcs	.+2      	; 0x1328 <__ftoa_engine+0x180>
    1326:	70 e3       	ldi	r23, 0x30	; 48
    1328:	7c 93       	st	X, r23
    132a:	20 13       	cpse	r18, r16
    132c:	b8 f7       	brcc	.-18     	; 0x131c <__ftoa_engine+0x174>
    132e:	7e 91       	ld	r23, -X
    1330:	70 61       	ori	r23, 0x10	; 16
    1332:	7d 93       	st	X+, r23
    1334:	30 f0       	brcs	.+12     	; 0x1342 <__ftoa_engine+0x19a>
    1336:	83 95       	inc	r24
    1338:	71 e3       	ldi	r23, 0x31	; 49
    133a:	7d 93       	st	X+, r23
    133c:	70 e3       	ldi	r23, 0x30	; 48
    133e:	2a 95       	dec	r18
    1340:	e1 f7       	brne	.-8      	; 0x133a <__ftoa_engine+0x192>
    1342:	11 24       	eor	r1, r1
    1344:	ef 90       	pop	r14
    1346:	ff 90       	pop	r15
    1348:	0f 91       	pop	r16
    134a:	1f 91       	pop	r17
    134c:	cf 91       	pop	r28
    134e:	df 91       	pop	r29
    1350:	99 27       	eor	r25, r25
    1352:	87 fd       	sbrc	r24, 7
    1354:	90 95       	com	r25
    1356:	08 95       	ret

00001358 <strnlen_P>:
    1358:	fc 01       	movw	r30, r24
    135a:	05 90       	lpm	r0, Z+
    135c:	61 50       	subi	r22, 0x01	; 1
    135e:	70 40       	sbci	r23, 0x00	; 0
    1360:	01 10       	cpse	r0, r1
    1362:	d8 f7       	brcc	.-10     	; 0x135a <strnlen_P+0x2>
    1364:	80 95       	com	r24
    1366:	90 95       	com	r25
    1368:	8e 0f       	add	r24, r30
    136a:	9f 1f       	adc	r25, r31
    136c:	08 95       	ret

0000136e <strnlen>:
    136e:	fc 01       	movw	r30, r24
    1370:	61 50       	subi	r22, 0x01	; 1
    1372:	70 40       	sbci	r23, 0x00	; 0
    1374:	01 90       	ld	r0, Z+
    1376:	01 10       	cpse	r0, r1
    1378:	d8 f7       	brcc	.-10     	; 0x1370 <strnlen+0x2>
    137a:	80 95       	com	r24
    137c:	90 95       	com	r25
    137e:	8e 0f       	add	r24, r30
    1380:	9f 1f       	adc	r25, r31
    1382:	08 95       	ret

00001384 <fputc>:
    1384:	0f 93       	push	r16
    1386:	1f 93       	push	r17
    1388:	cf 93       	push	r28
    138a:	df 93       	push	r29
    138c:	fb 01       	movw	r30, r22
    138e:	23 81       	ldd	r18, Z+3	; 0x03
    1390:	21 fd       	sbrc	r18, 1
    1392:	03 c0       	rjmp	.+6      	; 0x139a <fputc+0x16>
    1394:	8f ef       	ldi	r24, 0xFF	; 255
    1396:	9f ef       	ldi	r25, 0xFF	; 255
    1398:	2c c0       	rjmp	.+88     	; 0x13f2 <fputc+0x6e>
    139a:	22 ff       	sbrs	r18, 2
    139c:	16 c0       	rjmp	.+44     	; 0x13ca <fputc+0x46>
    139e:	46 81       	ldd	r20, Z+6	; 0x06
    13a0:	57 81       	ldd	r21, Z+7	; 0x07
    13a2:	24 81       	ldd	r18, Z+4	; 0x04
    13a4:	35 81       	ldd	r19, Z+5	; 0x05
    13a6:	42 17       	cp	r20, r18
    13a8:	53 07       	cpc	r21, r19
    13aa:	44 f4       	brge	.+16     	; 0x13bc <fputc+0x38>
    13ac:	a0 81       	ld	r26, Z
    13ae:	b1 81       	ldd	r27, Z+1	; 0x01
    13b0:	9d 01       	movw	r18, r26
    13b2:	2f 5f       	subi	r18, 0xFF	; 255
    13b4:	3f 4f       	sbci	r19, 0xFF	; 255
    13b6:	31 83       	std	Z+1, r19	; 0x01
    13b8:	20 83       	st	Z, r18
    13ba:	8c 93       	st	X, r24
    13bc:	26 81       	ldd	r18, Z+6	; 0x06
    13be:	37 81       	ldd	r19, Z+7	; 0x07
    13c0:	2f 5f       	subi	r18, 0xFF	; 255
    13c2:	3f 4f       	sbci	r19, 0xFF	; 255
    13c4:	37 83       	std	Z+7, r19	; 0x07
    13c6:	26 83       	std	Z+6, r18	; 0x06
    13c8:	14 c0       	rjmp	.+40     	; 0x13f2 <fputc+0x6e>
    13ca:	8b 01       	movw	r16, r22
    13cc:	ec 01       	movw	r28, r24
    13ce:	fb 01       	movw	r30, r22
    13d0:	00 84       	ldd	r0, Z+8	; 0x08
    13d2:	f1 85       	ldd	r31, Z+9	; 0x09
    13d4:	e0 2d       	mov	r30, r0
    13d6:	09 95       	icall
    13d8:	89 2b       	or	r24, r25
    13da:	e1 f6       	brne	.-72     	; 0x1394 <fputc+0x10>
    13dc:	d8 01       	movw	r26, r16
    13de:	16 96       	adiw	r26, 0x06	; 6
    13e0:	8d 91       	ld	r24, X+
    13e2:	9c 91       	ld	r25, X
    13e4:	17 97       	sbiw	r26, 0x07	; 7
    13e6:	01 96       	adiw	r24, 0x01	; 1
    13e8:	17 96       	adiw	r26, 0x07	; 7
    13ea:	9c 93       	st	X, r25
    13ec:	8e 93       	st	-X, r24
    13ee:	16 97       	sbiw	r26, 0x06	; 6
    13f0:	ce 01       	movw	r24, r28
    13f2:	df 91       	pop	r29
    13f4:	cf 91       	pop	r28
    13f6:	1f 91       	pop	r17
    13f8:	0f 91       	pop	r16
    13fa:	08 95       	ret

000013fc <printf>:
    13fc:	a0 e0       	ldi	r26, 0x00	; 0
    13fe:	b0 e0       	ldi	r27, 0x00	; 0
    1400:	e4 e0       	ldi	r30, 0x04	; 4
    1402:	fa e0       	ldi	r31, 0x0A	; 10
    1404:	0c 94 ad 08 	jmp	0x115a	; 0x115a <__prologue_saves__+0x20>
    1408:	ae 01       	movw	r20, r28
    140a:	4b 5f       	subi	r20, 0xFB	; 251
    140c:	5f 4f       	sbci	r21, 0xFF	; 255
    140e:	fa 01       	movw	r30, r20
    1410:	61 91       	ld	r22, Z+
    1412:	71 91       	ld	r23, Z+
    1414:	af 01       	movw	r20, r30
    1416:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <__iob+0x2>
    141a:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <__iob+0x3>
    141e:	0e 94 20 05 	call	0xa40	; 0xa40 <vfprintf>
    1422:	e2 e0       	ldi	r30, 0x02	; 2
    1424:	0c 94 c9 08 	jmp	0x1192	; 0x1192 <__epilogue_restores__+0x20>

00001428 <putchar>:
    1428:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <__iob+0x2>
    142c:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <__iob+0x3>
    1430:	0e 94 c2 09 	call	0x1384	; 0x1384 <fputc>
    1434:	08 95       	ret

00001436 <__ultoa_invert>:
    1436:	fa 01       	movw	r30, r20
    1438:	aa 27       	eor	r26, r26
    143a:	28 30       	cpi	r18, 0x08	; 8
    143c:	51 f1       	breq	.+84     	; 0x1492 <__ultoa_invert+0x5c>
    143e:	20 31       	cpi	r18, 0x10	; 16
    1440:	81 f1       	breq	.+96     	; 0x14a2 <__ultoa_invert+0x6c>
    1442:	e8 94       	clt
    1444:	6f 93       	push	r22
    1446:	6e 7f       	andi	r22, 0xFE	; 254
    1448:	6e 5f       	subi	r22, 0xFE	; 254
    144a:	7f 4f       	sbci	r23, 0xFF	; 255
    144c:	8f 4f       	sbci	r24, 0xFF	; 255
    144e:	9f 4f       	sbci	r25, 0xFF	; 255
    1450:	af 4f       	sbci	r26, 0xFF	; 255
    1452:	b1 e0       	ldi	r27, 0x01	; 1
    1454:	3e d0       	rcall	.+124    	; 0x14d2 <__ultoa_invert+0x9c>
    1456:	b4 e0       	ldi	r27, 0x04	; 4
    1458:	3c d0       	rcall	.+120    	; 0x14d2 <__ultoa_invert+0x9c>
    145a:	67 0f       	add	r22, r23
    145c:	78 1f       	adc	r23, r24
    145e:	89 1f       	adc	r24, r25
    1460:	9a 1f       	adc	r25, r26
    1462:	a1 1d       	adc	r26, r1
    1464:	68 0f       	add	r22, r24
    1466:	79 1f       	adc	r23, r25
    1468:	8a 1f       	adc	r24, r26
    146a:	91 1d       	adc	r25, r1
    146c:	a1 1d       	adc	r26, r1
    146e:	6a 0f       	add	r22, r26
    1470:	71 1d       	adc	r23, r1
    1472:	81 1d       	adc	r24, r1
    1474:	91 1d       	adc	r25, r1
    1476:	a1 1d       	adc	r26, r1
    1478:	20 d0       	rcall	.+64     	; 0x14ba <__ultoa_invert+0x84>
    147a:	09 f4       	brne	.+2      	; 0x147e <__ultoa_invert+0x48>
    147c:	68 94       	set
    147e:	3f 91       	pop	r19
    1480:	2a e0       	ldi	r18, 0x0A	; 10
    1482:	26 9f       	mul	r18, r22
    1484:	11 24       	eor	r1, r1
    1486:	30 19       	sub	r19, r0
    1488:	30 5d       	subi	r19, 0xD0	; 208
    148a:	31 93       	st	Z+, r19
    148c:	de f6       	brtc	.-74     	; 0x1444 <__ultoa_invert+0xe>
    148e:	cf 01       	movw	r24, r30
    1490:	08 95       	ret
    1492:	46 2f       	mov	r20, r22
    1494:	47 70       	andi	r20, 0x07	; 7
    1496:	40 5d       	subi	r20, 0xD0	; 208
    1498:	41 93       	st	Z+, r20
    149a:	b3 e0       	ldi	r27, 0x03	; 3
    149c:	0f d0       	rcall	.+30     	; 0x14bc <__ultoa_invert+0x86>
    149e:	c9 f7       	brne	.-14     	; 0x1492 <__ultoa_invert+0x5c>
    14a0:	f6 cf       	rjmp	.-20     	; 0x148e <__ultoa_invert+0x58>
    14a2:	46 2f       	mov	r20, r22
    14a4:	4f 70       	andi	r20, 0x0F	; 15
    14a6:	40 5d       	subi	r20, 0xD0	; 208
    14a8:	4a 33       	cpi	r20, 0x3A	; 58
    14aa:	18 f0       	brcs	.+6      	; 0x14b2 <__ultoa_invert+0x7c>
    14ac:	49 5d       	subi	r20, 0xD9	; 217
    14ae:	31 fd       	sbrc	r19, 1
    14b0:	40 52       	subi	r20, 0x20	; 32
    14b2:	41 93       	st	Z+, r20
    14b4:	02 d0       	rcall	.+4      	; 0x14ba <__ultoa_invert+0x84>
    14b6:	a9 f7       	brne	.-22     	; 0x14a2 <__ultoa_invert+0x6c>
    14b8:	ea cf       	rjmp	.-44     	; 0x148e <__ultoa_invert+0x58>
    14ba:	b4 e0       	ldi	r27, 0x04	; 4
    14bc:	a6 95       	lsr	r26
    14be:	97 95       	ror	r25
    14c0:	87 95       	ror	r24
    14c2:	77 95       	ror	r23
    14c4:	67 95       	ror	r22
    14c6:	ba 95       	dec	r27
    14c8:	c9 f7       	brne	.-14     	; 0x14bc <__ultoa_invert+0x86>
    14ca:	00 97       	sbiw	r24, 0x00	; 0
    14cc:	61 05       	cpc	r22, r1
    14ce:	71 05       	cpc	r23, r1
    14d0:	08 95       	ret
    14d2:	9b 01       	movw	r18, r22
    14d4:	ac 01       	movw	r20, r24
    14d6:	0a 2e       	mov	r0, r26
    14d8:	06 94       	lsr	r0
    14da:	57 95       	ror	r21
    14dc:	47 95       	ror	r20
    14de:	37 95       	ror	r19
    14e0:	27 95       	ror	r18
    14e2:	ba 95       	dec	r27
    14e4:	c9 f7       	brne	.-14     	; 0x14d8 <__ultoa_invert+0xa2>
    14e6:	62 0f       	add	r22, r18
    14e8:	73 1f       	adc	r23, r19
    14ea:	84 1f       	adc	r24, r20
    14ec:	95 1f       	adc	r25, r21
    14ee:	a0 1d       	adc	r26, r0
    14f0:	08 95       	ret

000014f2 <_exit>:
    14f2:	f8 94       	cli

000014f4 <__stop_program>:
    14f4:	ff cf       	rjmp	.-2      	; 0x14f4 <__stop_program>
